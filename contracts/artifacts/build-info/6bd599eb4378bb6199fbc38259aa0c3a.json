{
	"id": "6bd599eb4378bb6199fbc38259aa0c3a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BTOFAManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ninterface IBTOFAToken is IERC721 {\r\n    function isExpired(uint256 tokenId) external view returns (bool);\r\n    function burn(uint256 tokenId) external;\r\n    function getPrice(uint256 tokenId) external view returns(uint256);\r\n    function getProfit(uint256 tokenId) external view returns(uint256);\r\n}\r\n\r\ncontract BankManager is IERC721Receiver, Ownable {\r\n\r\n    IERC20 private _BTOFACurrency;\r\n    IBTOFAToken private _BTOFAToken;\r\n\r\n    constructor(address currency, address token) {\r\n        _BTOFACurrency = IERC20(currency);\r\n        _BTOFAToken = IBTOFAToken(token);\r\n    }\r\n\r\n    function buyToken(uint256 startId, uint256 endId) external {\r\n        require(startId <= endId, \"BANK MANAGER: Right ID's bound is less than left one.\");\r\n        uint256 price = 0;\r\n        \r\n        for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {\r\n            price += _BTOFAToken.getPrice(tokenId);\r\n            require(msg.sender != _BTOFAToken.ownerOf(tokenId),\r\n                    string(abi.encodePacked(\"BTOT: User already is an owner of token with ID \", Strings.toString(tokenId), \".\")));\r\n        }\r\n\r\n        require(_BTOFACurrency.balanceOf(msg.sender) >= price, \"BTOC: Insufficient amount of tokens.\");\r\n        require(_BTOFACurrency.allowance(msg.sender, address(this)) >= price, \"BTOC: Insufficient allowed amount of tokens to spend.\");\r\n        _BTOFACurrency.transferFrom(msg.sender, owner(), price);\r\n        \r\n        for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {\r\n            _BTOFAToken.safeTransferFrom(owner(), msg.sender, tokenId);\r\n        }\r\n    }\r\n\r\n    function expireToken(uint256 startId, uint256 endId) public onlyOwner {\r\n        uint256 price = 0;\r\n        require(startId <= endId, \"BANK MANAGER: Right ID's bound is less than left one.\");\r\n        \r\n        for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {\r\n            price += _BTOFAToken.getProfit(tokenId);\r\n            require(owner() != _BTOFAToken.ownerOf(tokenId),\r\n                    string(abi.encodePacked(\"BTOT: User already is an owner of token with ID \", Strings.toString(tokenId), \".\")));\r\n            require(_BTOFAToken.isExpired(tokenId), \"BTOT: Token with such ID hasn't expired yet.\");\r\n        }\r\n\r\n        require(_BTOFACurrency.balanceOf(owner()) >= price, \"BTOC: Insufficient amount of tokens.\");\r\n        require(_BTOFACurrency.allowance(owner(), address(this)) >= price, \"BTOC: Insufficient allowed amount of tokens to spend.\");\r\n        _BTOFACurrency.transferFrom(owner(), _BTOFAToken.ownerOf(startId), price);\r\n        \r\n        for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {\r\n            _BTOFAToken.safeTransferFrom(_BTOFAToken.ownerOf(tokenId), owner(), tokenId);\r\n            _BTOFAToken.burn(tokenId);\r\n        }\r\n    }\r\n\r\n    function onERC721Received(address, address, uint256, bytes calldata) external override pure returns (bytes4) {\r\n        return IERC721Receiver.onERC721Received.selector;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE3 PUSH25 0x8305D51DCCF412882E015DED65D6890E38D360EE4450D98F27 SUB SHR 0x29 PUSH6 0x64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE3 PUSH25 0x8305D51DCCF412882E015DED65D6890E38D360EE4450D98F27 SUB SHR 0x29 PUSH6 0x64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/BTOFAManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/BTOFAManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BTOFAManager.sol": {
				"BankManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endId",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endId",
									"type": "uint256"
								}
							],
							"name": "expireToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BTOFAManager.sol\":658:3330  contract BankManager is IERC721Receiver, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BTOFAManager.sol\":792:932  constructor(address currency, address token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/BTOFAManager.sol\":872:880  currency */\n  dup2\n    /* \"contracts/BTOFAManager.sol\":848:862  _BTOFACurrency */\n  0x01\n  0x00\n    /* \"contracts/BTOFAManager.sol\":848:881  _BTOFACurrency = IERC20(currency) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BTOFAManager.sol\":918:923  token */\n  dup1\n    /* \"contracts/BTOFAManager.sol\":892:903  _BTOFAToken */\n  0x02\n  0x00\n    /* \"contracts/BTOFAManager.sol\":892:924  _BTOFAToken = IBTOFAToken(token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BTOFAManager.sol\":792:932  constructor(address currency, address token) {... */\n  pop\n  pop\n    /* \"contracts/BTOFAManager.sol\":658:3330  contract BankManager is IERC721Receiver, Ownable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":949:1068   */\ntag_35:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_37\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_38\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/BTOFAManager.sol\":658:3330  contract BankManager is IERC721Receiver, Ownable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BTOFAManager.sol\":658:3330  contract BankManager is IERC721Receiver, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x057466ea\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x722227f2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BTOFAManager.sol\":940:1947  function buyToken(uint256 startId, uint256 endId) external {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/BTOFAManager.sol\":3151:3327  function onERC721Received(address, address, uint256, bytes calldata) external override pure returns (bytes4) {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/BTOFAManager.sol\":1955:3143  function expireToken(uint256 startId, uint256 endId) public onlyOwner {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/BTOFAManager.sol\":940:1947  function buyToken(uint256 startId, uint256 endId) external {... */\n    tag_12:\n        /* \"contracts/BTOFAManager.sol\":1029:1034  endId */\n      dup1\n        /* \"contracts/BTOFAManager.sol\":1018:1025  startId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":1018:1034  startId <= endId */\n      gt\n      iszero\n        /* \"contracts/BTOFAManager.sol\":1010:1092  require(startId <= endId, \"BANK MANAGER: Right ID's bound is less than left one.\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/BTOFAManager.sol\":1103:1116  uint256 price */\n      0x00\n        /* \"contracts/BTOFAManager.sol\":1146:1161  uint256 tokenId */\n      dup1\n        /* \"contracts/BTOFAManager.sol\":1164:1171  startId */\n      dup4\n        /* \"contracts/BTOFAManager.sol\":1146:1171  uint256 tokenId = startId */\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":1141:1464  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n    tag_36:\n        /* \"contracts/BTOFAManager.sol\":1184:1189  endId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":1173:1180  tokenId */\n      dup2\n        /* \"contracts/BTOFAManager.sol\":1173:1189  tokenId <= endId */\n      gt\n        /* \"contracts/BTOFAManager.sol\":1141:1464  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n      tag_37\n      jumpi\n        /* \"contracts/BTOFAManager.sol\":1226:1237  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":1226:1246  _BTOFAToken.getPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7572230\n        /* \"contracts/BTOFAManager.sol\":1247:1254  tokenId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":1226:1255  _BTOFAToken.getPrice(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"contracts/BTOFAManager.sol\":1217:1255  price += _BTOFAToken.getPrice(tokenId) */\n      dup3\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      swap2\n      pop\n        /* \"contracts/BTOFAManager.sol\":1292:1303  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":1292:1311  _BTOFAToken.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/BTOFAManager.sol\":1312:1319  tokenId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":1292:1320  _BTOFAToken.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_47:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"contracts/BTOFAManager.sol\":1278:1320  msg.sender != _BTOFAToken.ownerOf(tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":1278:1288  msg.sender */\n      caller\n        /* \"contracts/BTOFAManager.sol\":1278:1320  msg.sender != _BTOFAToken.ownerOf(tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BTOFAManager.sol\":1419:1444  Strings.toString(tokenId) */\n      tag_52\n        /* \"contracts/BTOFAManager.sol\":1436:1443  tokenId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":1419:1435  Strings.toString */\n      tag_53\n        /* \"contracts/BTOFAManager.sol\":1419:1444  Strings.toString(tokenId) */\n      jump\t// in\n    tag_52:\n        /* \"contracts/BTOFAManager.sol\":1350:1450  abi.encodePacked(\"BTOT: User already is an owner of token with ID \", Strings.toString(tokenId), \".\") */\n      add(0x20, mload(0x40))\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BTOFAManager.sol\":1270:1452  require(msg.sender != _BTOFAToken.ownerOf(tokenId),... */\n      swap1\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n      pop\n        /* \"contracts/BTOFAManager.sol\":1191:1200  ++tokenId */\n      dup1\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":1141:1464  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n      jump(tag_36)\n    tag_37:\n      pop\n        /* \"contracts/BTOFAManager.sol\":1524:1529  price */\n      dup1\n        /* \"contracts/BTOFAManager.sol\":1484:1498  _BTOFACurrency */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":1484:1508  _BTOFACurrency.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BTOFAManager.sol\":1509:1519  msg.sender */\n      caller\n        /* \"contracts/BTOFAManager.sol\":1484:1520  _BTOFACurrency.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_64:\n        /* \"contracts/BTOFAManager.sol\":1484:1529  _BTOFACurrency.balanceOf(msg.sender) >= price */\n      lt\n      iszero\n        /* \"contracts/BTOFAManager.sol\":1476:1570  require(_BTOFACurrency.balanceOf(msg.sender) >= price, \"BTOC: Insufficient amount of tokens.\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"contracts/BTOFAManager.sol\":1644:1649  price */\n      dup1\n        /* \"contracts/BTOFAManager.sol\":1589:1603  _BTOFACurrency */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":1589:1613  _BTOFACurrency.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/BTOFAManager.sol\":1614:1624  msg.sender */\n      caller\n        /* \"contracts/BTOFAManager.sol\":1634:1638  this */\n      address\n        /* \"contracts/BTOFAManager.sol\":1589:1640  _BTOFACurrency.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_72:\n        /* \"contracts/BTOFAManager.sol\":1589:1649  _BTOFACurrency.allowance(msg.sender, address(this)) >= price */\n      lt\n      iszero\n        /* \"contracts/BTOFAManager.sol\":1581:1707  require(_BTOFACurrency.allowance(msg.sender, address(this)) >= price, \"BTOC: Insufficient allowed amount of tokens to spend.\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"contracts/BTOFAManager.sol\":1718:1732  _BTOFACurrency */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":1718:1745  _BTOFACurrency.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BTOFAManager.sol\":1746:1756  msg.sender */\n      caller\n        /* \"contracts/BTOFAManager.sol\":1758:1765  owner() */\n      tag_76\n        /* \"contracts/BTOFAManager.sol\":1758:1763  owner */\n      tag_25\n        /* \"contracts/BTOFAManager.sol\":1758:1765  owner() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/BTOFAManager.sol\":1767:1772  price */\n      dup5\n        /* \"contracts/BTOFAManager.sol\":1718:1773  _BTOFACurrency.transferFrom(msg.sender, owner(), price) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      pop\n        /* \"contracts/BTOFAManager.sol\":1799:1814  uint256 tokenId */\n      0x00\n        /* \"contracts/BTOFAManager.sol\":1817:1824  startId */\n      dup4\n        /* \"contracts/BTOFAManager.sol\":1799:1824  uint256 tokenId = startId */\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":1794:1940  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n    tag_83:\n        /* \"contracts/BTOFAManager.sol\":1837:1842  endId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":1826:1833  tokenId */\n      dup2\n        /* \"contracts/BTOFAManager.sol\":1826:1842  tokenId <= endId */\n      gt\n        /* \"contracts/BTOFAManager.sol\":1794:1940  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n      tag_84\n      jumpi\n        /* \"contracts/BTOFAManager.sol\":1870:1881  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":1870:1898  _BTOFAToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/BTOFAManager.sol\":1899:1906  owner() */\n      tag_86\n        /* \"contracts/BTOFAManager.sol\":1899:1904  owner */\n      tag_25\n        /* \"contracts/BTOFAManager.sol\":1899:1906  owner() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/BTOFAManager.sol\":1908:1918  msg.sender */\n      caller\n        /* \"contracts/BTOFAManager.sol\":1920:1927  tokenId */\n      dup5\n        /* \"contracts/BTOFAManager.sol\":1870:1928  _BTOFAToken.safeTransferFrom(owner(), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_87:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BTOFAManager.sol\":1844:1853  ++tokenId */\n      dup1\n      tag_91\n      swap1\n      tag_60\n      jump\t// in\n    tag_91:\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":1794:1940  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n      jump(tag_83)\n    tag_84:\n      pop\n        /* \"contracts/BTOFAManager.sol\":999:1947  {... */\n      pop\n        /* \"contracts/BTOFAManager.sol\":940:1947  function buyToken(uint256 startId, uint256 endId) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BTOFAManager.sol\":3151:3327  function onERC721Received(address, address, uint256, bytes calldata) external override pure returns (bytes4) {... */\n    tag_16:\n        /* \"contracts/BTOFAManager.sol\":3252:3258  bytes4 */\n      0x00\n        /* \"contracts/BTOFAManager.sol\":3278:3319  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/BTOFAManager.sol\":3271:3319  return IERC721Receiver.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":3151:3327  function onERC721Received(address, address, uint256, bytes calldata) external override pure returns (bytes4) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BTOFAManager.sol\":1955:3143  function expireToken(uint256 startId, uint256 endId) public onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/BTOFAManager.sol\":2036:2049  uint256 price */\n      0x00\n        /* \"contracts/BTOFAManager.sol\":2083:2088  endId */\n      dup2\n        /* \"contracts/BTOFAManager.sol\":2072:2079  startId */\n      dup4\n        /* \"contracts/BTOFAManager.sol\":2072:2088  startId <= endId */\n      gt\n      iszero\n        /* \"contracts/BTOFAManager.sol\":2064:2146  require(startId <= endId, \"BANK MANAGER: Right ID's bound is less than left one.\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_35\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/BTOFAManager.sol\":2172:2187  uint256 tokenId */\n      0x00\n        /* \"contracts/BTOFAManager.sol\":2190:2197  startId */\n      dup4\n        /* \"contracts/BTOFAManager.sol\":2172:2197  uint256 tokenId = startId */\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":2167:2590  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n    tag_104:\n        /* \"contracts/BTOFAManager.sol\":2210:2215  endId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":2199:2206  tokenId */\n      dup2\n        /* \"contracts/BTOFAManager.sol\":2199:2215  tokenId <= endId */\n      gt\n        /* \"contracts/BTOFAManager.sol\":2167:2590  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n      tag_105\n      jumpi\n        /* \"contracts/BTOFAManager.sol\":2252:2263  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":2252:2273  _BTOFAToken.getProfit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa91b2e9f\n        /* \"contracts/BTOFAManager.sol\":2274:2281  tokenId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":2252:2282  _BTOFAToken.getProfit(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_110:\n        /* \"contracts/BTOFAManager.sol\":2243:2282  price += _BTOFAToken.getProfit(tokenId) */\n      dup3\n      tag_111\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_111:\n      swap2\n      pop\n        /* \"contracts/BTOFAManager.sol\":2316:2327  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":2316:2335  _BTOFAToken.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/BTOFAManager.sol\":2336:2343  tokenId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":2316:2344  _BTOFAToken.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_112:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_115:\n        /* \"contracts/BTOFAManager.sol\":2305:2344  owner() != _BTOFAToken.ownerOf(tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":2305:2312  owner() */\n      tag_116\n        /* \"contracts/BTOFAManager.sol\":2305:2310  owner */\n      tag_25\n        /* \"contracts/BTOFAManager.sol\":2305:2312  owner() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/BTOFAManager.sol\":2305:2344  owner() != _BTOFAToken.ownerOf(tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BTOFAManager.sol\":2443:2468  Strings.toString(tokenId) */\n      tag_117\n        /* \"contracts/BTOFAManager.sol\":2460:2467  tokenId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":2443:2459  Strings.toString */\n      tag_53\n        /* \"contracts/BTOFAManager.sol\":2443:2468  Strings.toString(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/BTOFAManager.sol\":2374:2474  abi.encodePacked(\"BTOT: User already is an owner of token with ID \", Strings.toString(tokenId), \".\") */\n      add(0x20, mload(0x40))\n      tag_118\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BTOFAManager.sol\":2297:2476  require(owner() != _BTOFAToken.ownerOf(tokenId),... */\n      swap1\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n      pop\n        /* \"contracts/BTOFAManager.sol\":2499:2510  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":2499:2520  _BTOFAToken.isExpired */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9548e53\n        /* \"contracts/BTOFAManager.sol\":2521:2528  tokenId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":2499:2529  _BTOFAToken.isExpired(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_121:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_124:\n        /* \"contracts/BTOFAManager.sol\":2491:2578  require(_BTOFAToken.isExpired(tokenId), \"BTOT: Token with such ID hasn't expired yet.\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/BTOFAManager.sol\":2217:2226  ++tokenId */\n      dup1\n      tag_128\n      swap1\n      tag_60\n      jump\t// in\n    tag_128:\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":2167:2590  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n      jump(tag_104)\n    tag_105:\n      pop\n        /* \"contracts/BTOFAManager.sol\":2647:2652  price */\n      dup1\n        /* \"contracts/BTOFAManager.sol\":2610:2624  _BTOFACurrency */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":2610:2634  _BTOFACurrency.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BTOFAManager.sol\":2635:2642  owner() */\n      tag_129\n        /* \"contracts/BTOFAManager.sol\":2635:2640  owner */\n      tag_25\n        /* \"contracts/BTOFAManager.sol\":2635:2642  owner() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/BTOFAManager.sol\":2610:2643  _BTOFACurrency.balanceOf(owner()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_133:\n        /* \"contracts/BTOFAManager.sol\":2610:2652  _BTOFACurrency.balanceOf(owner()) >= price */\n      lt\n      iszero\n        /* \"contracts/BTOFAManager.sol\":2602:2693  require(_BTOFACurrency.balanceOf(owner()) >= price, \"BTOC: Insufficient amount of tokens.\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_67\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/BTOFAManager.sol\":2764:2769  price */\n      dup1\n        /* \"contracts/BTOFAManager.sol\":2712:2726  _BTOFACurrency */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":2712:2736  _BTOFACurrency.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/BTOFAManager.sol\":2737:2744  owner() */\n      tag_136\n        /* \"contracts/BTOFAManager.sol\":2737:2742  owner */\n      tag_25\n        /* \"contracts/BTOFAManager.sol\":2737:2744  owner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/BTOFAManager.sol\":2754:2758  this */\n      address\n        /* \"contracts/BTOFAManager.sol\":2712:2760  _BTOFACurrency.allowance(owner(), address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_140:\n        /* \"contracts/BTOFAManager.sol\":2712:2769  _BTOFACurrency.allowance(owner(), address(this)) >= price */\n      lt\n      iszero\n        /* \"contracts/BTOFAManager.sol\":2704:2827  require(_BTOFACurrency.allowance(owner(), address(this)) >= price, \"BTOC: Insufficient allowed amount of tokens to spend.\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_75\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/BTOFAManager.sol\":2838:2852  _BTOFACurrency */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":2838:2865  _BTOFACurrency.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BTOFAManager.sol\":2866:2873  owner() */\n      tag_143\n        /* \"contracts/BTOFAManager.sol\":2866:2871  owner */\n      tag_25\n        /* \"contracts/BTOFAManager.sol\":2866:2873  owner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/BTOFAManager.sol\":2875:2886  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":2875:2894  _BTOFAToken.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/BTOFAManager.sol\":2895:2902  startId */\n      dup8\n        /* \"contracts/BTOFAManager.sol\":2875:2903  _BTOFAToken.ownerOf(startId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_144:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_147:\n        /* \"contracts/BTOFAManager.sol\":2905:2910  price */\n      dup5\n        /* \"contracts/BTOFAManager.sol\":2838:2911  _BTOFACurrency.transferFrom(owner(), _BTOFAToken.ownerOf(startId), price) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_148:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_151:\n      pop\n        /* \"contracts/BTOFAManager.sol\":2937:2952  uint256 tokenId */\n      0x00\n        /* \"contracts/BTOFAManager.sol\":2955:2962  startId */\n      dup4\n        /* \"contracts/BTOFAManager.sol\":2937:2962  uint256 tokenId = startId */\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":2932:3136  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n    tag_152:\n        /* \"contracts/BTOFAManager.sol\":2975:2980  endId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":2964:2971  tokenId */\n      dup2\n        /* \"contracts/BTOFAManager.sol\":2964:2980  tokenId <= endId */\n      gt\n        /* \"contracts/BTOFAManager.sol\":2932:3136  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n      tag_153\n      jumpi\n        /* \"contracts/BTOFAManager.sol\":3008:3019  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":3008:3036  _BTOFAToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/BTOFAManager.sol\":3037:3048  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":3037:3056  _BTOFAToken.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/BTOFAManager.sol\":3057:3064  tokenId */\n      dup5\n        /* \"contracts/BTOFAManager.sol\":3037:3065  _BTOFAToken.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_155:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_158:\n        /* \"contracts/BTOFAManager.sol\":3067:3074  owner() */\n      tag_159\n        /* \"contracts/BTOFAManager.sol\":3067:3072  owner */\n      tag_25\n        /* \"contracts/BTOFAManager.sol\":3067:3074  owner() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/BTOFAManager.sol\":3076:3083  tokenId */\n      dup5\n        /* \"contracts/BTOFAManager.sol\":3008:3084  _BTOFAToken.safeTransferFrom(_BTOFAToken.ownerOf(tokenId), owner(), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_160:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BTOFAManager.sol\":3099:3110  _BTOFAToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BTOFAManager.sol\":3099:3115  _BTOFAToken.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"contracts/BTOFAManager.sol\":3116:3123  tokenId */\n      dup3\n        /* \"contracts/BTOFAManager.sol\":3099:3124  _BTOFAToken.burn(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_164:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BTOFAManager.sol\":2982:2991  ++tokenId */\n      dup1\n      tag_168\n      swap1\n      tag_60\n      jump\t// in\n    tag_168:\n      swap1\n      pop\n        /* \"contracts/BTOFAManager.sol\":2932:3136  for (uint256 tokenId = startId; tokenId <= endId; ++tokenId) {... */\n      jump(tag_152)\n    tag_153:\n      pop\n        /* \"contracts/BTOFAManager.sol\":2025:3143  {... */\n      pop\n        /* \"contracts/BTOFAManager.sol\":1955:3143  function expireToken(uint256 startId, uint256 endId) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_178\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_179\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n    tag_180:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_183:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:638  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":753:759  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":745:760  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":737:743  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":726:761  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:799  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":958:966  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":946:951  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:935  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      dup2\n      tag_186\n      jumpi\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n    tag_186:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1046  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1041  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1046  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1094  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9975  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9978:9979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9979  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10026:10032  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10022  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10061:10067  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      dup2\n      tag_200\n      jumpi\n      tag_201\n      tag_188\n      jump\t// in\n    tag_201:\n    tag_200:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      dup2\n      tag_203\n      jumpi\n      tag_204\n      tag_188\n      jump\t// in\n    tag_204:\n    tag_203:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      dup2\n      tag_206\n      jumpi\n      tag_207\n      tag_188\n      jump\t// in\n    tag_207:\n    tag_206:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      dup2\n      tag_209\n      jumpi\n      tag_210\n      tag_188\n      jump\t// in\n    tag_210:\n    tag_209:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      dup2\n      tag_212\n      jumpi\n      tag_213\n      tag_188\n      jump\t// in\n    tag_213:\n    tag_212:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      dup2\n      tag_215\n      jumpi\n      tag_216\n      tag_188\n      jump\t// in\n    tag_216:\n    tag_215:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10759:10772  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_220:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_221:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_222:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_223:\n        /* \"#utility.yul\":490:514   */\n      tag_272\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_222\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_273:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_224:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_275\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_223\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_11:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_278\n      tag_220\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":783:902   */\n    tag_277:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_279\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_224\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_280\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_224\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1296   */\n    tag_225:\n        /* \"#utility.yul\":1207:1214   */\n      0x00\n        /* \"#utility.yul\":1247:1289   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1240:1245   */\n      dup3\n        /* \"#utility.yul\":1236:1290   */\n      and\n        /* \"#utility.yul\":1225:1290   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1398   */\n    tag_226:\n        /* \"#utility.yul\":1339:1346   */\n      0x00\n        /* \"#utility.yul\":1368:1392   */\n      tag_283\n        /* \"#utility.yul\":1386:1391   */\n      dup3\n        /* \"#utility.yul\":1368:1392   */\n      tag_225\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1357:1392   */\n      swap1\n      pop\n        /* \"#utility.yul\":1302:1398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1526   */\n    tag_227:\n        /* \"#utility.yul\":1477:1501   */\n      tag_285\n        /* \"#utility.yul\":1495:1500   */\n      dup2\n        /* \"#utility.yul\":1477:1501   */\n      tag_226\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1470:1475   */\n      dup2\n        /* \"#utility.yul\":1467:1502   */\n      eq\n        /* \"#utility.yul\":1457:1520   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1516:1517   */\n      0x00\n        /* \"#utility.yul\":1513:1514   */\n      dup1\n        /* \"#utility.yul\":1506:1518   */\n      revert\n        /* \"#utility.yul\":1457:1520   */\n    tag_286:\n        /* \"#utility.yul\":1404:1526   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1671   */\n    tag_228:\n        /* \"#utility.yul\":1578:1583   */\n      0x00\n        /* \"#utility.yul\":1616:1622   */\n      dup2\n        /* \"#utility.yul\":1603:1623   */\n      calldataload\n        /* \"#utility.yul\":1594:1623   */\n      swap1\n      pop\n        /* \"#utility.yul\":1632:1665   */\n      tag_288\n        /* \"#utility.yul\":1659:1664   */\n      dup2\n        /* \"#utility.yul\":1632:1665   */\n      tag_227\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1532:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1794   */\n    tag_229:\n        /* \"#utility.yul\":1786:1787   */\n      0x00\n        /* \"#utility.yul\":1783:1784   */\n      dup1\n        /* \"#utility.yul\":1776:1788   */\n      revert\n        /* \"#utility.yul\":1800:1917   */\n    tag_230:\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1906:1907   */\n      dup1\n        /* \"#utility.yul\":1899:1911   */\n      revert\n        /* \"#utility.yul\":1923:2040   */\n    tag_231:\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2029:2030   */\n      dup1\n        /* \"#utility.yul\":2022:2034   */\n      revert\n        /* \"#utility.yul\":2059:2611   */\n    tag_232:\n        /* \"#utility.yul\":2116:2124   */\n      0x00\n        /* \"#utility.yul\":2126:2132   */\n      dup1\n        /* \"#utility.yul\":2176:2179   */\n      dup4\n        /* \"#utility.yul\":2169:2173   */\n      0x1f\n        /* \"#utility.yul\":2161:2167   */\n      dup5\n        /* \"#utility.yul\":2157:2174   */\n      add\n        /* \"#utility.yul\":2153:2180   */\n      slt\n        /* \"#utility.yul\":2143:2265   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":2184:2263   */\n      tag_294\n      tag_229\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2143:2265   */\n    tag_293:\n        /* \"#utility.yul\":2297:2303   */\n      dup3\n        /* \"#utility.yul\":2284:2304   */\n      calldataload\n        /* \"#utility.yul\":2274:2304   */\n      swap1\n      pop\n        /* \"#utility.yul\":2327:2345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2319:2325   */\n      dup2\n        /* \"#utility.yul\":2316:2346   */\n      gt\n        /* \"#utility.yul\":2313:2430   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2349:2428   */\n      tag_296\n      tag_230\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2313:2430   */\n    tag_295:\n        /* \"#utility.yul\":2463:2467   */\n      0x20\n        /* \"#utility.yul\":2455:2461   */\n      dup4\n        /* \"#utility.yul\":2451:2468   */\n      add\n        /* \"#utility.yul\":2439:2468   */\n      swap2\n      pop\n        /* \"#utility.yul\":2517:2520   */\n      dup4\n        /* \"#utility.yul\":2509:2513   */\n      0x01\n        /* \"#utility.yul\":2501:2507   */\n      dup3\n        /* \"#utility.yul\":2497:2514   */\n      mul\n        /* \"#utility.yul\":2487:2495   */\n      dup4\n        /* \"#utility.yul\":2483:2515   */\n      add\n        /* \"#utility.yul\":2480:2521   */\n      gt\n        /* \"#utility.yul\":2477:2605   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2524:2603   */\n      tag_298\n      tag_231\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2477:2605   */\n    tag_297:\n        /* \"#utility.yul\":2059:2611   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2617:3580   */\n    tag_15:\n        /* \"#utility.yul\":2714:2720   */\n      0x00\n        /* \"#utility.yul\":2722:2728   */\n      dup1\n        /* \"#utility.yul\":2730:2736   */\n      0x00\n        /* \"#utility.yul\":2738:2744   */\n      dup1\n        /* \"#utility.yul\":2746:2752   */\n      0x00\n        /* \"#utility.yul\":2795:2798   */\n      0x80\n        /* \"#utility.yul\":2783:2792   */\n      dup7\n        /* \"#utility.yul\":2774:2781   */\n      dup9\n        /* \"#utility.yul\":2770:2793   */\n      sub\n        /* \"#utility.yul\":2766:2799   */\n      slt\n        /* \"#utility.yul\":2763:2883   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2802:2881   */\n      tag_301\n      tag_220\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2763:2883   */\n    tag_300:\n        /* \"#utility.yul\":2922:2923   */\n      0x00\n        /* \"#utility.yul\":2947:3000   */\n      tag_302\n        /* \"#utility.yul\":2992:2999   */\n      dup9\n        /* \"#utility.yul\":2983:2989   */\n      dup3\n        /* \"#utility.yul\":2972:2981   */\n      dup10\n        /* \"#utility.yul\":2968:2990   */\n      add\n        /* \"#utility.yul\":2947:3000   */\n      tag_228\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2937:3000   */\n      swap6\n      pop\n        /* \"#utility.yul\":2893:3010   */\n      pop\n        /* \"#utility.yul\":3049:3051   */\n      0x20\n        /* \"#utility.yul\":3075:3128   */\n      tag_303\n        /* \"#utility.yul\":3120:3127   */\n      dup9\n        /* \"#utility.yul\":3111:3117   */\n      dup3\n        /* \"#utility.yul\":3100:3109   */\n      dup10\n        /* \"#utility.yul\":3096:3118   */\n      add\n        /* \"#utility.yul\":3075:3128   */\n      tag_228\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3065:3128   */\n      swap5\n      pop\n        /* \"#utility.yul\":3020:3138   */\n      pop\n        /* \"#utility.yul\":3177:3179   */\n      0x40\n        /* \"#utility.yul\":3203:3256   */\n      tag_304\n        /* \"#utility.yul\":3248:3255   */\n      dup9\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3228:3237   */\n      dup10\n        /* \"#utility.yul\":3224:3246   */\n      add\n        /* \"#utility.yul\":3203:3256   */\n      tag_224\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3193:3256   */\n      swap4\n      pop\n        /* \"#utility.yul\":3148:3266   */\n      pop\n        /* \"#utility.yul\":3333:3335   */\n      0x60\n        /* \"#utility.yul\":3322:3331   */\n      dup7\n        /* \"#utility.yul\":3318:3336   */\n      add\n        /* \"#utility.yul\":3305:3337   */\n      calldataload\n        /* \"#utility.yul\":3364:3382   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3356:3362   */\n      dup2\n        /* \"#utility.yul\":3353:3383   */\n      gt\n        /* \"#utility.yul\":3350:3467   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3386:3465   */\n      tag_306\n      tag_221\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3350:3467   */\n    tag_305:\n        /* \"#utility.yul\":3499:3563   */\n      tag_307\n        /* \"#utility.yul\":3555:3562   */\n      dup9\n        /* \"#utility.yul\":3546:3552   */\n      dup3\n        /* \"#utility.yul\":3535:3544   */\n      dup10\n        /* \"#utility.yul\":3531:3553   */\n      add\n        /* \"#utility.yul\":3499:3563   */\n      tag_232\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3481:3563   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3276:3573   */\n      pop\n        /* \"#utility.yul\":2617:3580   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3586:3735   */\n    tag_233:\n        /* \"#utility.yul\":3622:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3728   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3655:3660   */\n      dup3\n        /* \"#utility.yul\":3651:3729   */\n      and\n        /* \"#utility.yul\":3640:3729   */\n      swap1\n      pop\n        /* \"#utility.yul\":3586:3735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3741:3856   */\n    tag_234:\n        /* \"#utility.yul\":3826:3849   */\n      tag_310\n        /* \"#utility.yul\":3843:3848   */\n      dup2\n        /* \"#utility.yul\":3826:3849   */\n      tag_233\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3821:3824   */\n      dup3\n        /* \"#utility.yul\":3814:3850   */\n      mstore\n        /* \"#utility.yul\":3741:3856   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3862:4080   */\n    tag_18:\n        /* \"#utility.yul\":3953:3957   */\n      0x00\n        /* \"#utility.yul\":3991:3993   */\n      0x20\n        /* \"#utility.yul\":3980:3989   */\n      dup3\n        /* \"#utility.yul\":3976:3994   */\n      add\n        /* \"#utility.yul\":3968:3994   */\n      swap1\n      pop\n        /* \"#utility.yul\":4004:4073   */\n      tag_312\n        /* \"#utility.yul\":4070:4071   */\n      0x00\n        /* \"#utility.yul\":4059:4068   */\n      dup4\n        /* \"#utility.yul\":4055:4072   */\n      add\n        /* \"#utility.yul\":4046:4052   */\n      dup5\n        /* \"#utility.yul\":4004:4073   */\n      tag_234\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3862:4080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4086:4204   */\n    tag_235:\n        /* \"#utility.yul\":4173:4197   */\n      tag_314\n        /* \"#utility.yul\":4191:4196   */\n      dup2\n        /* \"#utility.yul\":4173:4197   */\n      tag_226\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4168:4171   */\n      dup3\n        /* \"#utility.yul\":4161:4198   */\n      mstore\n        /* \"#utility.yul\":4086:4204   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4210:4432   */\n    tag_27:\n        /* \"#utility.yul\":4303:4307   */\n      0x00\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4330:4339   */\n      dup3\n        /* \"#utility.yul\":4326:4344   */\n      add\n        /* \"#utility.yul\":4318:4344   */\n      swap1\n      pop\n        /* \"#utility.yul\":4354:4425   */\n      tag_316\n        /* \"#utility.yul\":4422:4423   */\n      0x00\n        /* \"#utility.yul\":4411:4420   */\n      dup4\n        /* \"#utility.yul\":4407:4424   */\n      add\n        /* \"#utility.yul\":4398:4404   */\n      dup5\n        /* \"#utility.yul\":4354:4425   */\n      tag_235\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4210:4432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4438:4767   */\n    tag_30:\n        /* \"#utility.yul\":4497:4503   */\n      0x00\n        /* \"#utility.yul\":4546:4548   */\n      0x20\n        /* \"#utility.yul\":4534:4543   */\n      dup3\n        /* \"#utility.yul\":4525:4532   */\n      dup5\n        /* \"#utility.yul\":4521:4544   */\n      sub\n        /* \"#utility.yul\":4517:4549   */\n      slt\n        /* \"#utility.yul\":4514:4633   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4552:4631   */\n      tag_319\n      tag_220\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4514:4633   */\n    tag_318:\n        /* \"#utility.yul\":4672:4673   */\n      0x00\n        /* \"#utility.yul\":4697:4750   */\n      tag_320\n        /* \"#utility.yul\":4742:4749   */\n      dup5\n        /* \"#utility.yul\":4733:4739   */\n      dup3\n        /* \"#utility.yul\":4722:4731   */\n      dup6\n        /* \"#utility.yul\":4718:4740   */\n      add\n        /* \"#utility.yul\":4697:4750   */\n      tag_228\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4687:4750   */\n      swap2\n      pop\n        /* \"#utility.yul\":4643:4760   */\n      pop\n        /* \"#utility.yul\":4438:4767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4773:4942   */\n    tag_236:\n        /* \"#utility.yul\":4857:4868   */\n      0x00\n        /* \"#utility.yul\":4891:4897   */\n      dup3\n        /* \"#utility.yul\":4886:4889   */\n      dup3\n        /* \"#utility.yul\":4879:4898   */\n      mstore\n        /* \"#utility.yul\":4931:4935   */\n      0x20\n        /* \"#utility.yul\":4926:4929   */\n      dup3\n        /* \"#utility.yul\":4922:4936   */\n      add\n        /* \"#utility.yul\":4907:4936   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4948:5188   */\n    tag_237:\n        /* \"#utility.yul\":5088:5122   */\n      0x42414e4b204d414e414745523a205269676874204944277320626f756e642069\n        /* \"#utility.yul\":5084:5085   */\n      0x00\n        /* \"#utility.yul\":5076:5082   */\n      dup3\n        /* \"#utility.yul\":5072:5086   */\n      add\n        /* \"#utility.yul\":5065:5123   */\n      mstore\n        /* \"#utility.yul\":5157:5180   */\n      0x73206c657373207468616e206c656674206f6e652e0000000000000000000000\n        /* \"#utility.yul\":5152:5154   */\n      0x20\n        /* \"#utility.yul\":5144:5150   */\n      dup3\n        /* \"#utility.yul\":5140:5155   */\n      add\n        /* \"#utility.yul\":5133:5181   */\n      mstore\n        /* \"#utility.yul\":4948:5188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5560   */\n    tag_238:\n        /* \"#utility.yul\":5336:5339   */\n      0x00\n        /* \"#utility.yul\":5357:5424   */\n      tag_324\n        /* \"#utility.yul\":5421:5423   */\n      0x35\n        /* \"#utility.yul\":5416:5419   */\n      dup4\n        /* \"#utility.yul\":5357:5424   */\n      tag_236\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5350:5424   */\n      swap2\n      pop\n        /* \"#utility.yul\":5433:5526   */\n      tag_325\n        /* \"#utility.yul\":5522:5525   */\n      dup3\n        /* \"#utility.yul\":5433:5526   */\n      tag_237\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5551:5553   */\n      0x40\n        /* \"#utility.yul\":5546:5549   */\n      dup3\n        /* \"#utility.yul\":5542:5554   */\n      add\n        /* \"#utility.yul\":5535:5554   */\n      swap1\n      pop\n        /* \"#utility.yul\":5194:5560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5566:5985   */\n    tag_35:\n        /* \"#utility.yul\":5732:5736   */\n      0x00\n        /* \"#utility.yul\":5770:5772   */\n      0x20\n        /* \"#utility.yul\":5759:5768   */\n      dup3\n        /* \"#utility.yul\":5755:5773   */\n      add\n        /* \"#utility.yul\":5747:5773   */\n      swap1\n      pop\n        /* \"#utility.yul\":5819:5828   */\n      dup2\n        /* \"#utility.yul\":5813:5817   */\n      dup2\n        /* \"#utility.yul\":5809:5829   */\n      sub\n        /* \"#utility.yul\":5805:5806   */\n      0x00\n        /* \"#utility.yul\":5794:5803   */\n      dup4\n        /* \"#utility.yul\":5790:5807   */\n      add\n        /* \"#utility.yul\":5783:5830   */\n      mstore\n        /* \"#utility.yul\":5847:5978   */\n      tag_327\n        /* \"#utility.yul\":5973:5977   */\n      dup2\n        /* \"#utility.yul\":5847:5978   */\n      tag_238\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5839:5978   */\n      swap1\n      pop\n        /* \"#utility.yul\":5566:5985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5991:6109   */\n    tag_239:\n        /* \"#utility.yul\":6078:6102   */\n      tag_329\n        /* \"#utility.yul\":6096:6101   */\n      dup2\n        /* \"#utility.yul\":6078:6102   */\n      tag_222\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6073:6076   */\n      dup3\n        /* \"#utility.yul\":6066:6103   */\n      mstore\n        /* \"#utility.yul\":5991:6109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6115:6337   */\n    tag_40:\n        /* \"#utility.yul\":6208:6212   */\n      0x00\n        /* \"#utility.yul\":6246:6248   */\n      0x20\n        /* \"#utility.yul\":6235:6244   */\n      dup3\n        /* \"#utility.yul\":6231:6249   */\n      add\n        /* \"#utility.yul\":6223:6249   */\n      swap1\n      pop\n        /* \"#utility.yul\":6259:6330   */\n      tag_331\n        /* \"#utility.yul\":6327:6328   */\n      0x00\n        /* \"#utility.yul\":6316:6325   */\n      dup4\n        /* \"#utility.yul\":6312:6329   */\n      add\n        /* \"#utility.yul\":6303:6309   */\n      dup5\n        /* \"#utility.yul\":6259:6330   */\n      tag_239\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6115:6337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6343:6486   */\n    tag_240:\n        /* \"#utility.yul\":6400:6405   */\n      0x00\n        /* \"#utility.yul\":6431:6437   */\n      dup2\n        /* \"#utility.yul\":6425:6438   */\n      mload\n        /* \"#utility.yul\":6416:6438   */\n      swap1\n      pop\n        /* \"#utility.yul\":6447:6480   */\n      tag_333\n        /* \"#utility.yul\":6474:6479   */\n      dup2\n        /* \"#utility.yul\":6447:6480   */\n      tag_223\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6343:6486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6492:6843   */\n    tag_44:\n        /* \"#utility.yul\":6562:6568   */\n      0x00\n        /* \"#utility.yul\":6611:6613   */\n      0x20\n        /* \"#utility.yul\":6599:6608   */\n      dup3\n        /* \"#utility.yul\":6590:6597   */\n      dup5\n        /* \"#utility.yul\":6586:6609   */\n      sub\n        /* \"#utility.yul\":6582:6614   */\n      slt\n        /* \"#utility.yul\":6579:6698   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6617:6696   */\n      tag_336\n      tag_220\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6579:6698   */\n    tag_335:\n        /* \"#utility.yul\":6737:6738   */\n      0x00\n        /* \"#utility.yul\":6762:6826   */\n      tag_337\n        /* \"#utility.yul\":6818:6825   */\n      dup5\n        /* \"#utility.yul\":6809:6815   */\n      dup3\n        /* \"#utility.yul\":6798:6807   */\n      dup6\n        /* \"#utility.yul\":6794:6816   */\n      add\n        /* \"#utility.yul\":6762:6826   */\n      tag_240\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6752:6826   */\n      swap2\n      pop\n        /* \"#utility.yul\":6708:6836   */\n      pop\n        /* \"#utility.yul\":6492:6843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6849:7029   */\n    tag_241:\n        /* \"#utility.yul\":6897:6974   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6894:6895   */\n      0x00\n        /* \"#utility.yul\":6887:6975   */\n      mstore\n        /* \"#utility.yul\":6994:6998   */\n      0x11\n        /* \"#utility.yul\":6991:6992   */\n      0x04\n        /* \"#utility.yul\":6984:6999   */\n      mstore\n        /* \"#utility.yul\":7018:7022   */\n      0x24\n        /* \"#utility.yul\":7015:7016   */\n      0x00\n        /* \"#utility.yul\":7008:7023   */\n      revert\n        /* \"#utility.yul\":7035:7226   */\n    tag_46:\n        /* \"#utility.yul\":7075:7078   */\n      0x00\n        /* \"#utility.yul\":7094:7114   */\n      tag_340\n        /* \"#utility.yul\":7112:7113   */\n      dup3\n        /* \"#utility.yul\":7094:7114   */\n      tag_222\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7089:7114   */\n      swap2\n      pop\n        /* \"#utility.yul\":7128:7148   */\n      tag_341\n        /* \"#utility.yul\":7146:7147   */\n      dup4\n        /* \"#utility.yul\":7128:7148   */\n      tag_222\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7123:7148   */\n      swap3\n      pop\n        /* \"#utility.yul\":7171:7172   */\n      dup3\n        /* \"#utility.yul\":7168:7169   */\n      dup3\n        /* \"#utility.yul\":7164:7173   */\n      add\n        /* \"#utility.yul\":7157:7173   */\n      swap1\n      pop\n        /* \"#utility.yul\":7192:7195   */\n      dup1\n        /* \"#utility.yul\":7189:7190   */\n      dup3\n        /* \"#utility.yul\":7186:7196   */\n      gt\n        /* \"#utility.yul\":7183:7219   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":7199:7217   */\n      tag_343\n      tag_241\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7183:7219   */\n    tag_342:\n        /* \"#utility.yul\":7035:7226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7232:7375   */\n    tag_242:\n        /* \"#utility.yul\":7289:7294   */\n      0x00\n        /* \"#utility.yul\":7320:7326   */\n      dup2\n        /* \"#utility.yul\":7314:7327   */\n      mload\n        /* \"#utility.yul\":7305:7327   */\n      swap1\n      pop\n        /* \"#utility.yul\":7336:7369   */\n      tag_345\n        /* \"#utility.yul\":7363:7368   */\n      dup2\n        /* \"#utility.yul\":7336:7369   */\n      tag_227\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7232:7375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7381:7732   */\n    tag_51:\n        /* \"#utility.yul\":7451:7457   */\n      0x00\n        /* \"#utility.yul\":7500:7502   */\n      0x20\n        /* \"#utility.yul\":7488:7497   */\n      dup3\n        /* \"#utility.yul\":7479:7486   */\n      dup5\n        /* \"#utility.yul\":7475:7498   */\n      sub\n        /* \"#utility.yul\":7471:7503   */\n      slt\n        /* \"#utility.yul\":7468:7587   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":7506:7585   */\n      tag_348\n      tag_220\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7468:7587   */\n    tag_347:\n        /* \"#utility.yul\":7626:7627   */\n      0x00\n        /* \"#utility.yul\":7651:7715   */\n      tag_349\n        /* \"#utility.yul\":7707:7714   */\n      dup5\n        /* \"#utility.yul\":7698:7704   */\n      dup3\n        /* \"#utility.yul\":7687:7696   */\n      dup6\n        /* \"#utility.yul\":7683:7705   */\n      add\n        /* \"#utility.yul\":7651:7715   */\n      tag_242\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7641:7715   */\n      swap2\n      pop\n        /* \"#utility.yul\":7597:7725   */\n      pop\n        /* \"#utility.yul\":7381:7732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7738:7886   */\n    tag_243:\n        /* \"#utility.yul\":7840:7851   */\n      0x00\n        /* \"#utility.yul\":7877:7880   */\n      dup2\n        /* \"#utility.yul\":7862:7880   */\n      swap1\n      pop\n        /* \"#utility.yul\":7738:7886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7892:8127   */\n    tag_244:\n        /* \"#utility.yul\":8032:8066   */\n      0x42544f543a205573657220616c726561647920697320616e206f776e6572206f\n        /* \"#utility.yul\":8028:8029   */\n      0x00\n        /* \"#utility.yul\":8020:8026   */\n      dup3\n        /* \"#utility.yul\":8016:8030   */\n      add\n        /* \"#utility.yul\":8009:8067   */\n      mstore\n        /* \"#utility.yul\":8101:8119   */\n      0x6620746f6b656e20776974682049442000000000000000000000000000000000\n        /* \"#utility.yul\":8096:8098   */\n      0x20\n        /* \"#utility.yul\":8088:8094   */\n      dup3\n        /* \"#utility.yul\":8084:8099   */\n      add\n        /* \"#utility.yul\":8077:8120   */\n      mstore\n        /* \"#utility.yul\":7892:8127   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8133:8535   */\n    tag_245:\n        /* \"#utility.yul\":8293:8296   */\n      0x00\n        /* \"#utility.yul\":8314:8399   */\n      tag_353\n        /* \"#utility.yul\":8396:8398   */\n      0x30\n        /* \"#utility.yul\":8391:8394   */\n      dup4\n        /* \"#utility.yul\":8314:8399   */\n      tag_243\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8307:8399   */\n      swap2\n      pop\n        /* \"#utility.yul\":8408:8501   */\n      tag_354\n        /* \"#utility.yul\":8497:8500   */\n      dup3\n        /* \"#utility.yul\":8408:8501   */\n      tag_244\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8526:8528   */\n      0x30\n        /* \"#utility.yul\":8521:8524   */\n      dup3\n        /* \"#utility.yul\":8517:8529   */\n      add\n        /* \"#utility.yul\":8510:8529   */\n      swap1\n      pop\n        /* \"#utility.yul\":8133:8535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8541:8640   */\n    tag_246:\n        /* \"#utility.yul\":8593:8599   */\n      0x00\n        /* \"#utility.yul\":8627:8632   */\n      dup2\n        /* \"#utility.yul\":8621:8633   */\n      mload\n        /* \"#utility.yul\":8611:8633   */\n      swap1\n      pop\n        /* \"#utility.yul\":8541:8640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8646:8892   */\n    tag_247:\n        /* \"#utility.yul\":8727:8728   */\n      0x00\n        /* \"#utility.yul\":8737:8850   */\n    tag_357:\n        /* \"#utility.yul\":8751:8757   */\n      dup4\n        /* \"#utility.yul\":8748:8749   */\n      dup2\n        /* \"#utility.yul\":8745:8758   */\n      lt\n        /* \"#utility.yul\":8737:8850   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":8836:8837   */\n      dup1\n        /* \"#utility.yul\":8831:8834   */\n      dup3\n        /* \"#utility.yul\":8827:8838   */\n      add\n        /* \"#utility.yul\":8821:8839   */\n      mload\n        /* \"#utility.yul\":8817:8818   */\n      dup2\n        /* \"#utility.yul\":8812:8815   */\n      dup5\n        /* \"#utility.yul\":8808:8819   */\n      add\n        /* \"#utility.yul\":8801:8840   */\n      mstore\n        /* \"#utility.yul\":8773:8775   */\n      0x20\n        /* \"#utility.yul\":8770:8771   */\n      dup2\n        /* \"#utility.yul\":8766:8776   */\n      add\n        /* \"#utility.yul\":8761:8776   */\n      swap1\n      pop\n        /* \"#utility.yul\":8737:8850   */\n      jump(tag_357)\n    tag_359:\n        /* \"#utility.yul\":8884:8885   */\n      0x00\n        /* \"#utility.yul\":8875:8881   */\n      dup5\n        /* \"#utility.yul\":8870:8873   */\n      dup5\n        /* \"#utility.yul\":8866:8882   */\n      add\n        /* \"#utility.yul\":8859:8886   */\n      mstore\n        /* \"#utility.yul\":8708:8892   */\n      pop\n        /* \"#utility.yul\":8646:8892   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8898:9288   */\n    tag_248:\n        /* \"#utility.yul\":9004:9007   */\n      0x00\n        /* \"#utility.yul\":9032:9071   */\n      tag_361\n        /* \"#utility.yul\":9065:9070   */\n      dup3\n        /* \"#utility.yul\":9032:9071   */\n      tag_246\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9087:9176   */\n      tag_362\n        /* \"#utility.yul\":9169:9175   */\n      dup2\n        /* \"#utility.yul\":9164:9167   */\n      dup6\n        /* \"#utility.yul\":9087:9176   */\n      tag_243\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9080:9176   */\n      swap4\n      pop\n        /* \"#utility.yul\":9185:9250   */\n      tag_363\n        /* \"#utility.yul\":9243:9249   */\n      dup2\n        /* \"#utility.yul\":9238:9241   */\n      dup6\n        /* \"#utility.yul\":9231:9235   */\n      0x20\n        /* \"#utility.yul\":9224:9229   */\n      dup7\n        /* \"#utility.yul\":9220:9236   */\n      add\n        /* \"#utility.yul\":9185:9250   */\n      tag_247\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9275:9281   */\n      dup1\n        /* \"#utility.yul\":9270:9273   */\n      dup5\n        /* \"#utility.yul\":9266:9282   */\n      add\n        /* \"#utility.yul\":9259:9282   */\n      swap2\n      pop\n        /* \"#utility.yul\":9008:9288   */\n      pop\n        /* \"#utility.yul\":8898:9288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9294:9445   */\n    tag_249:\n        /* \"#utility.yul\":9434:9437   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9430:9431   */\n      0x00\n        /* \"#utility.yul\":9422:9428   */\n      dup3\n        /* \"#utility.yul\":9418:9432   */\n      add\n        /* \"#utility.yul\":9411:9438   */\n      mstore\n        /* \"#utility.yul\":9294:9445   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9451:9851   */\n    tag_250:\n        /* \"#utility.yul\":9611:9614   */\n      0x00\n        /* \"#utility.yul\":9632:9716   */\n      tag_366\n        /* \"#utility.yul\":9714:9715   */\n      0x01\n        /* \"#utility.yul\":9709:9712   */\n      dup4\n        /* \"#utility.yul\":9632:9716   */\n      tag_243\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9625:9716   */\n      swap2\n      pop\n        /* \"#utility.yul\":9725:9818   */\n      tag_367\n        /* \"#utility.yul\":9814:9817   */\n      dup3\n        /* \"#utility.yul\":9725:9818   */\n      tag_249\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9843:9844   */\n      0x01\n        /* \"#utility.yul\":9838:9841   */\n      dup3\n        /* \"#utility.yul\":9834:9845   */\n      add\n        /* \"#utility.yul\":9827:9845   */\n      swap1\n      pop\n        /* \"#utility.yul\":9451:9851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9857:10664   */\n    tag_55:\n        /* \"#utility.yul\":10191:10194   */\n      0x00\n        /* \"#utility.yul\":10213:10361   */\n      tag_369\n        /* \"#utility.yul\":10357:10360   */\n      dup3\n        /* \"#utility.yul\":10213:10361   */\n      tag_245\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10206:10361   */\n      swap2\n      pop\n        /* \"#utility.yul\":10378:10473   */\n      tag_370\n        /* \"#utility.yul\":10469:10472   */\n      dup3\n        /* \"#utility.yul\":10460:10466   */\n      dup5\n        /* \"#utility.yul\":10378:10473   */\n      tag_248\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10371:10473   */\n      swap2\n      pop\n        /* \"#utility.yul\":10490:10638   */\n      tag_371\n        /* \"#utility.yul\":10634:10637   */\n      dup3\n        /* \"#utility.yul\":10490:10638   */\n      tag_250\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10483:10638   */\n      swap2\n      pop\n        /* \"#utility.yul\":10655:10658   */\n      dup2\n        /* \"#utility.yul\":10648:10658   */\n      swap1\n      pop\n        /* \"#utility.yul\":9857:10664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10670:10772   */\n    tag_251:\n        /* \"#utility.yul\":10711:10717   */\n      0x00\n        /* \"#utility.yul\":10762:10764   */\n      0x1f\n        /* \"#utility.yul\":10758:10765   */\n      not\n        /* \"#utility.yul\":10753:10755   */\n      0x1f\n        /* \"#utility.yul\":10746:10751   */\n      dup4\n        /* \"#utility.yul\":10742:10756   */\n      add\n        /* \"#utility.yul\":10738:10766   */\n      and\n        /* \"#utility.yul\":10728:10766   */\n      swap1\n      pop\n        /* \"#utility.yul\":10670:10772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10778:11155   */\n    tag_252:\n        /* \"#utility.yul\":10866:10869   */\n      0x00\n        /* \"#utility.yul\":10894:10933   */\n      tag_374\n        /* \"#utility.yul\":10927:10932   */\n      dup3\n        /* \"#utility.yul\":10894:10933   */\n      tag_246\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10949:11020   */\n      tag_375\n        /* \"#utility.yul\":11013:11019   */\n      dup2\n        /* \"#utility.yul\":11008:11011   */\n      dup6\n        /* \"#utility.yul\":10949:11020   */\n      tag_236\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10942:11020   */\n      swap4\n      pop\n        /* \"#utility.yul\":11029:11094   */\n      tag_376\n        /* \"#utility.yul\":11087:11093   */\n      dup2\n        /* \"#utility.yul\":11082:11085   */\n      dup6\n        /* \"#utility.yul\":11075:11079   */\n      0x20\n        /* \"#utility.yul\":11068:11073   */\n      dup7\n        /* \"#utility.yul\":11064:11080   */\n      add\n        /* \"#utility.yul\":11029:11094   */\n      tag_247\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11119:11148   */\n      tag_377\n        /* \"#utility.yul\":11141:11147   */\n      dup2\n        /* \"#utility.yul\":11119:11148   */\n      tag_251\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11114:11117   */\n      dup5\n        /* \"#utility.yul\":11110:11149   */\n      add\n        /* \"#utility.yul\":11103:11149   */\n      swap2\n      pop\n        /* \"#utility.yul\":10870:11155   */\n      pop\n        /* \"#utility.yul\":10778:11155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11161:11474   */\n    tag_58:\n        /* \"#utility.yul\":11274:11278   */\n      0x00\n        /* \"#utility.yul\":11312:11314   */\n      0x20\n        /* \"#utility.yul\":11301:11310   */\n      dup3\n        /* \"#utility.yul\":11297:11315   */\n      add\n        /* \"#utility.yul\":11289:11315   */\n      swap1\n      pop\n        /* \"#utility.yul\":11361:11370   */\n      dup2\n        /* \"#utility.yul\":11355:11359   */\n      dup2\n        /* \"#utility.yul\":11351:11371   */\n      sub\n        /* \"#utility.yul\":11347:11348   */\n      0x00\n        /* \"#utility.yul\":11336:11345   */\n      dup4\n        /* \"#utility.yul\":11332:11349   */\n      add\n        /* \"#utility.yul\":11325:11372   */\n      mstore\n        /* \"#utility.yul\":11389:11467   */\n      tag_379\n        /* \"#utility.yul\":11462:11466   */\n      dup2\n        /* \"#utility.yul\":11453:11459   */\n      dup5\n        /* \"#utility.yul\":11389:11467   */\n      tag_252\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11381:11467   */\n      swap1\n      pop\n        /* \"#utility.yul\":11161:11474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11713   */\n    tag_60:\n        /* \"#utility.yul\":11519:11522   */\n      0x00\n        /* \"#utility.yul\":11542:11566   */\n      tag_381\n        /* \"#utility.yul\":11560:11565   */\n      dup3\n        /* \"#utility.yul\":11542:11566   */\n      tag_222\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11533:11566   */\n      swap2\n      pop\n        /* \"#utility.yul\":11588:11654   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11581:11586   */\n      dup3\n        /* \"#utility.yul\":11578:11655   */\n      sub\n        /* \"#utility.yul\":11575:11678   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":11658:11676   */\n      tag_383\n      tag_241\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11575:11678   */\n    tag_382:\n        /* \"#utility.yul\":11705:11706   */\n      0x01\n        /* \"#utility.yul\":11698:11703   */\n      dup3\n        /* \"#utility.yul\":11694:11707   */\n      add\n        /* \"#utility.yul\":11687:11707   */\n      swap1\n      pop\n        /* \"#utility.yul\":11480:11713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11719:11942   */\n    tag_253:\n        /* \"#utility.yul\":11859:11893   */\n      0x42544f433a20496e73756666696369656e7420616d6f756e74206f6620746f6b\n        /* \"#utility.yul\":11855:11856   */\n      0x00\n        /* \"#utility.yul\":11847:11853   */\n      dup3\n        /* \"#utility.yul\":11843:11857   */\n      add\n        /* \"#utility.yul\":11836:11894   */\n      mstore\n        /* \"#utility.yul\":11928:11934   */\n      0x656e732e00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11923:11925   */\n      0x20\n        /* \"#utility.yul\":11915:11921   */\n      dup3\n        /* \"#utility.yul\":11911:11926   */\n      add\n        /* \"#utility.yul\":11904:11935   */\n      mstore\n        /* \"#utility.yul\":11719:11942   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12314   */\n    tag_254:\n        /* \"#utility.yul\":12090:12093   */\n      0x00\n        /* \"#utility.yul\":12111:12178   */\n      tag_386\n        /* \"#utility.yul\":12175:12177   */\n      0x24\n        /* \"#utility.yul\":12170:12173   */\n      dup4\n        /* \"#utility.yul\":12111:12178   */\n      tag_236\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12104:12178   */\n      swap2\n      pop\n        /* \"#utility.yul\":12187:12280   */\n      tag_387\n        /* \"#utility.yul\":12276:12279   */\n      dup3\n        /* \"#utility.yul\":12187:12280   */\n      tag_253\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":12305:12307   */\n      0x40\n        /* \"#utility.yul\":12300:12303   */\n      dup3\n        /* \"#utility.yul\":12296:12308   */\n      add\n        /* \"#utility.yul\":12289:12308   */\n      swap1\n      pop\n        /* \"#utility.yul\":11948:12314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12320:12739   */\n    tag_67:\n        /* \"#utility.yul\":12486:12490   */\n      0x00\n        /* \"#utility.yul\":12524:12526   */\n      0x20\n        /* \"#utility.yul\":12513:12522   */\n      dup3\n        /* \"#utility.yul\":12509:12527   */\n      add\n        /* \"#utility.yul\":12501:12527   */\n      swap1\n      pop\n        /* \"#utility.yul\":12573:12582   */\n      dup2\n        /* \"#utility.yul\":12567:12571   */\n      dup2\n        /* \"#utility.yul\":12563:12583   */\n      sub\n        /* \"#utility.yul\":12559:12560   */\n      0x00\n        /* \"#utility.yul\":12548:12557   */\n      dup4\n        /* \"#utility.yul\":12544:12561   */\n      add\n        /* \"#utility.yul\":12537:12584   */\n      mstore\n        /* \"#utility.yul\":12601:12732   */\n      tag_389\n        /* \"#utility.yul\":12727:12731   */\n      dup2\n        /* \"#utility.yul\":12601:12732   */\n      tag_254\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":12593:12732   */\n      swap1\n      pop\n        /* \"#utility.yul\":12320:12739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12745:13077   */\n    tag_69:\n        /* \"#utility.yul\":12866:12870   */\n      0x00\n        /* \"#utility.yul\":12904:12906   */\n      0x40\n        /* \"#utility.yul\":12893:12902   */\n      dup3\n        /* \"#utility.yul\":12889:12907   */\n      add\n        /* \"#utility.yul\":12881:12907   */\n      swap1\n      pop\n        /* \"#utility.yul\":12917:12988   */\n      tag_391\n        /* \"#utility.yul\":12985:12986   */\n      0x00\n        /* \"#utility.yul\":12974:12983   */\n      dup4\n        /* \"#utility.yul\":12970:12987   */\n      add\n        /* \"#utility.yul\":12961:12967   */\n      dup6\n        /* \"#utility.yul\":12917:12988   */\n      tag_235\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12998:13070   */\n      tag_392\n        /* \"#utility.yul\":13066:13068   */\n      0x20\n        /* \"#utility.yul\":13055:13064   */\n      dup4\n        /* \"#utility.yul\":13051:13069   */\n      add\n        /* \"#utility.yul\":13042:13048   */\n      dup5\n        /* \"#utility.yul\":12998:13070   */\n      tag_235\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12745:13077   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13083:13323   */\n    tag_255:\n        /* \"#utility.yul\":13223:13257   */\n      0x42544f433a20496e73756666696369656e7420616c6c6f77656420616d6f756e\n        /* \"#utility.yul\":13219:13220   */\n      0x00\n        /* \"#utility.yul\":13211:13217   */\n      dup3\n        /* \"#utility.yul\":13207:13221   */\n      add\n        /* \"#utility.yul\":13200:13258   */\n      mstore\n        /* \"#utility.yul\":13292:13315   */\n      0x74206f6620746f6b656e7320746f207370656e642e0000000000000000000000\n        /* \"#utility.yul\":13287:13289   */\n      0x20\n        /* \"#utility.yul\":13279:13285   */\n      dup3\n        /* \"#utility.yul\":13275:13290   */\n      add\n        /* \"#utility.yul\":13268:13316   */\n      mstore\n        /* \"#utility.yul\":13083:13323   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13329:13695   */\n    tag_256:\n        /* \"#utility.yul\":13471:13474   */\n      0x00\n        /* \"#utility.yul\":13492:13559   */\n      tag_395\n        /* \"#utility.yul\":13556:13558   */\n      0x35\n        /* \"#utility.yul\":13551:13554   */\n      dup4\n        /* \"#utility.yul\":13492:13559   */\n      tag_236\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":13485:13559   */\n      swap2\n      pop\n        /* \"#utility.yul\":13568:13661   */\n      tag_396\n        /* \"#utility.yul\":13657:13660   */\n      dup3\n        /* \"#utility.yul\":13568:13661   */\n      tag_255\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13686:13688   */\n      0x40\n        /* \"#utility.yul\":13681:13684   */\n      dup3\n        /* \"#utility.yul\":13677:13689   */\n      add\n        /* \"#utility.yul\":13670:13689   */\n      swap1\n      pop\n        /* \"#utility.yul\":13329:13695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13701:14120   */\n    tag_75:\n        /* \"#utility.yul\":13867:13871   */\n      0x00\n        /* \"#utility.yul\":13905:13907   */\n      0x20\n        /* \"#utility.yul\":13894:13903   */\n      dup3\n        /* \"#utility.yul\":13890:13908   */\n      add\n        /* \"#utility.yul\":13882:13908   */\n      swap1\n      pop\n        /* \"#utility.yul\":13954:13963   */\n      dup2\n        /* \"#utility.yul\":13948:13952   */\n      dup2\n        /* \"#utility.yul\":13944:13964   */\n      sub\n        /* \"#utility.yul\":13940:13941   */\n      0x00\n        /* \"#utility.yul\":13929:13938   */\n      dup4\n        /* \"#utility.yul\":13925:13942   */\n      add\n        /* \"#utility.yul\":13918:13965   */\n      mstore\n        /* \"#utility.yul\":13982:14113   */\n      tag_398\n        /* \"#utility.yul\":14108:14112   */\n      dup2\n        /* \"#utility.yul\":13982:14113   */\n      tag_256\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13974:14113   */\n      swap1\n      pop\n        /* \"#utility.yul\":13701:14120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14126:14568   */\n    tag_78:\n        /* \"#utility.yul\":14275:14279   */\n      0x00\n        /* \"#utility.yul\":14313:14315   */\n      0x60\n        /* \"#utility.yul\":14302:14311   */\n      dup3\n        /* \"#utility.yul\":14298:14316   */\n      add\n        /* \"#utility.yul\":14290:14316   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14397   */\n      tag_400\n        /* \"#utility.yul\":14394:14395   */\n      0x00\n        /* \"#utility.yul\":14383:14392   */\n      dup4\n        /* \"#utility.yul\":14379:14396   */\n      add\n        /* \"#utility.yul\":14370:14376   */\n      dup7\n        /* \"#utility.yul\":14326:14397   */\n      tag_235\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14407:14479   */\n      tag_401\n        /* \"#utility.yul\":14475:14477   */\n      0x20\n        /* \"#utility.yul\":14464:14473   */\n      dup4\n        /* \"#utility.yul\":14460:14478   */\n      add\n        /* \"#utility.yul\":14451:14457   */\n      dup6\n        /* \"#utility.yul\":14407:14479   */\n      tag_235\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":14489:14561   */\n      tag_402\n        /* \"#utility.yul\":14557:14559   */\n      0x40\n        /* \"#utility.yul\":14546:14555   */\n      dup4\n        /* \"#utility.yul\":14542:14560   */\n      add\n        /* \"#utility.yul\":14533:14539   */\n      dup5\n        /* \"#utility.yul\":14489:14561   */\n      tag_239\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":14126:14568   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14574:14664   */\n    tag_257:\n        /* \"#utility.yul\":14608:14615   */\n      0x00\n        /* \"#utility.yul\":14651:14656   */\n      dup2\n        /* \"#utility.yul\":14644:14657   */\n      iszero\n        /* \"#utility.yul\":14637:14658   */\n      iszero\n        /* \"#utility.yul\":14626:14658   */\n      swap1\n      pop\n        /* \"#utility.yul\":14574:14664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14670:14786   */\n    tag_258:\n        /* \"#utility.yul\":14740:14761   */\n      tag_405\n        /* \"#utility.yul\":14755:14760   */\n      dup2\n        /* \"#utility.yul\":14740:14761   */\n      tag_257\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":14733:14738   */\n      dup2\n        /* \"#utility.yul\":14730:14762   */\n      eq\n        /* \"#utility.yul\":14720:14780   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":14776:14777   */\n      0x00\n        /* \"#utility.yul\":14773:14774   */\n      dup1\n        /* \"#utility.yul\":14766:14778   */\n      revert\n        /* \"#utility.yul\":14720:14780   */\n    tag_406:\n        /* \"#utility.yul\":14670:14786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14792:14929   */\n    tag_259:\n        /* \"#utility.yul\":14846:14851   */\n      0x00\n        /* \"#utility.yul\":14877:14883   */\n      dup2\n        /* \"#utility.yul\":14871:14884   */\n      mload\n        /* \"#utility.yul\":14862:14884   */\n      swap1\n      pop\n        /* \"#utility.yul\":14893:14923   */\n      tag_408\n        /* \"#utility.yul\":14917:14922   */\n      dup2\n        /* \"#utility.yul\":14893:14923   */\n      tag_258\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":14792:14929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14935:15280   */\n    tag_82:\n        /* \"#utility.yul\":15002:15008   */\n      0x00\n        /* \"#utility.yul\":15051:15053   */\n      0x20\n        /* \"#utility.yul\":15039:15048   */\n      dup3\n        /* \"#utility.yul\":15030:15037   */\n      dup5\n        /* \"#utility.yul\":15026:15049   */\n      sub\n        /* \"#utility.yul\":15022:15054   */\n      slt\n        /* \"#utility.yul\":15019:15138   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":15057:15136   */\n      tag_411\n      tag_220\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":15019:15138   */\n    tag_410:\n        /* \"#utility.yul\":15177:15178   */\n      0x00\n        /* \"#utility.yul\":15202:15263   */\n      tag_412\n        /* \"#utility.yul\":15255:15262   */\n      dup5\n        /* \"#utility.yul\":15246:15252   */\n      dup3\n        /* \"#utility.yul\":15235:15244   */\n      dup6\n        /* \"#utility.yul\":15231:15253   */\n      add\n        /* \"#utility.yul\":15202:15263   */\n      tag_259\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":15192:15263   */\n      swap2\n      pop\n        /* \"#utility.yul\":15148:15273   */\n      pop\n        /* \"#utility.yul\":14935:15280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15286:15517   */\n    tag_260:\n        /* \"#utility.yul\":15426:15460   */\n      0x42544f543a20546f6b656e20776974682073756368204944206861736e277420\n        /* \"#utility.yul\":15422:15423   */\n      0x00\n        /* \"#utility.yul\":15414:15420   */\n      dup3\n        /* \"#utility.yul\":15410:15424   */\n      add\n        /* \"#utility.yul\":15403:15461   */\n      mstore\n        /* \"#utility.yul\":15495:15509   */\n      0x65787069726564207965742e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":15490:15492   */\n      0x20\n        /* \"#utility.yul\":15482:15488   */\n      dup3\n        /* \"#utility.yul\":15478:15493   */\n      add\n        /* \"#utility.yul\":15471:15510   */\n      mstore\n        /* \"#utility.yul\":15286:15517   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15523:15889   */\n    tag_261:\n        /* \"#utility.yul\":15665:15668   */\n      0x00\n        /* \"#utility.yul\":15686:15753   */\n      tag_415\n        /* \"#utility.yul\":15750:15752   */\n      0x2c\n        /* \"#utility.yul\":15745:15748   */\n      dup4\n        /* \"#utility.yul\":15686:15753   */\n      tag_236\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":15679:15753   */\n      swap2\n      pop\n        /* \"#utility.yul\":15762:15855   */\n      tag_416\n        /* \"#utility.yul\":15851:15854   */\n      dup3\n        /* \"#utility.yul\":15762:15855   */\n      tag_260\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":15880:15882   */\n      0x40\n        /* \"#utility.yul\":15875:15878   */\n      dup3\n        /* \"#utility.yul\":15871:15883   */\n      add\n        /* \"#utility.yul\":15864:15883   */\n      swap1\n      pop\n        /* \"#utility.yul\":15523:15889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15895:16314   */\n    tag_127:\n        /* \"#utility.yul\":16061:16065   */\n      0x00\n        /* \"#utility.yul\":16099:16101   */\n      0x20\n        /* \"#utility.yul\":16088:16097   */\n      dup3\n        /* \"#utility.yul\":16084:16102   */\n      add\n        /* \"#utility.yul\":16076:16102   */\n      swap1\n      pop\n        /* \"#utility.yul\":16148:16157   */\n      dup2\n        /* \"#utility.yul\":16142:16146   */\n      dup2\n        /* \"#utility.yul\":16138:16158   */\n      sub\n        /* \"#utility.yul\":16134:16135   */\n      0x00\n        /* \"#utility.yul\":16123:16132   */\n      dup4\n        /* \"#utility.yul\":16119:16136   */\n      add\n        /* \"#utility.yul\":16112:16159   */\n      mstore\n        /* \"#utility.yul\":16176:16307   */\n      tag_418\n        /* \"#utility.yul\":16302:16306   */\n      dup2\n        /* \"#utility.yul\":16176:16307   */\n      tag_261\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":16168:16307   */\n      swap1\n      pop\n        /* \"#utility.yul\":15895:16314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16320:16545   */\n    tag_262:\n        /* \"#utility.yul\":16460:16494   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16456:16457   */\n      0x00\n        /* \"#utility.yul\":16448:16454   */\n      dup3\n        /* \"#utility.yul\":16444:16458   */\n      add\n        /* \"#utility.yul\":16437:16495   */\n      mstore\n        /* \"#utility.yul\":16529:16537   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16524:16526   */\n      0x20\n        /* \"#utility.yul\":16516:16522   */\n      dup3\n        /* \"#utility.yul\":16512:16527   */\n      add\n        /* \"#utility.yul\":16505:16538   */\n      mstore\n        /* \"#utility.yul\":16320:16545   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16551:16917   */\n    tag_263:\n        /* \"#utility.yul\":16693:16696   */\n      0x00\n        /* \"#utility.yul\":16714:16781   */\n      tag_421\n        /* \"#utility.yul\":16778:16780   */\n      0x26\n        /* \"#utility.yul\":16773:16776   */\n      dup4\n        /* \"#utility.yul\":16714:16781   */\n      tag_236\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":16707:16781   */\n      swap2\n      pop\n        /* \"#utility.yul\":16790:16883   */\n      tag_422\n        /* \"#utility.yul\":16879:16882   */\n      dup3\n        /* \"#utility.yul\":16790:16883   */\n      tag_262\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":16908:16910   */\n      0x40\n        /* \"#utility.yul\":16903:16906   */\n      dup3\n        /* \"#utility.yul\":16899:16911   */\n      add\n        /* \"#utility.yul\":16892:16911   */\n      swap1\n      pop\n        /* \"#utility.yul\":16551:16917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16923:17342   */\n    tag_175:\n        /* \"#utility.yul\":17089:17093   */\n      0x00\n        /* \"#utility.yul\":17127:17129   */\n      0x20\n        /* \"#utility.yul\":17116:17125   */\n      dup3\n        /* \"#utility.yul\":17112:17130   */\n      add\n        /* \"#utility.yul\":17104:17130   */\n      swap1\n      pop\n        /* \"#utility.yul\":17176:17185   */\n      dup2\n        /* \"#utility.yul\":17170:17174   */\n      dup2\n        /* \"#utility.yul\":17166:17186   */\n      sub\n        /* \"#utility.yul\":17162:17163   */\n      0x00\n        /* \"#utility.yul\":17151:17160   */\n      dup4\n        /* \"#utility.yul\":17147:17164   */\n      add\n        /* \"#utility.yul\":17140:17187   */\n      mstore\n        /* \"#utility.yul\":17204:17335   */\n      tag_424\n        /* \"#utility.yul\":17330:17334   */\n      dup2\n        /* \"#utility.yul\":17204:17335   */\n      tag_263\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":17196:17335   */\n      swap1\n      pop\n        /* \"#utility.yul\":16923:17342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17348:17528   */\n    tag_182:\n        /* \"#utility.yul\":17396:17473   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17393:17394   */\n      0x00\n        /* \"#utility.yul\":17386:17474   */\n      mstore\n        /* \"#utility.yul\":17493:17497   */\n      0x41\n        /* \"#utility.yul\":17490:17491   */\n      0x04\n        /* \"#utility.yul\":17483:17498   */\n      mstore\n        /* \"#utility.yul\":17517:17521   */\n      0x24\n        /* \"#utility.yul\":17514:17515   */\n      0x00\n        /* \"#utility.yul\":17507:17522   */\n      revert\n        /* \"#utility.yul\":17534:17714   */\n    tag_188:\n        /* \"#utility.yul\":17582:17659   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17579:17580   */\n      0x00\n        /* \"#utility.yul\":17572:17660   */\n      mstore\n        /* \"#utility.yul\":17679:17683   */\n      0x12\n        /* \"#utility.yul\":17676:17677   */\n      0x04\n        /* \"#utility.yul\":17669:17684   */\n      mstore\n        /* \"#utility.yul\":17703:17707   */\n      0x24\n        /* \"#utility.yul\":17700:17701   */\n      0x00\n        /* \"#utility.yul\":17693:17708   */\n      revert\n        /* \"#utility.yul\":17720:17902   */\n    tag_264:\n        /* \"#utility.yul\":17860:17894   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17856:17857   */\n      0x00\n        /* \"#utility.yul\":17848:17854   */\n      dup3\n        /* \"#utility.yul\":17844:17858   */\n      add\n        /* \"#utility.yul\":17837:17895   */\n      mstore\n        /* \"#utility.yul\":17720:17902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17908:18274   */\n    tag_265:\n        /* \"#utility.yul\":18050:18053   */\n      0x00\n        /* \"#utility.yul\":18071:18138   */\n      tag_429\n        /* \"#utility.yul\":18135:18137   */\n      0x20\n        /* \"#utility.yul\":18130:18133   */\n      dup4\n        /* \"#utility.yul\":18071:18138   */\n      tag_236\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":18064:18138   */\n      swap2\n      pop\n        /* \"#utility.yul\":18147:18240   */\n      tag_430\n        /* \"#utility.yul\":18236:18239   */\n      dup3\n        /* \"#utility.yul\":18147:18240   */\n      tag_264\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":18265:18267   */\n      0x20\n        /* \"#utility.yul\":18260:18263   */\n      dup3\n        /* \"#utility.yul\":18256:18268   */\n      add\n        /* \"#utility.yul\":18249:18268   */\n      swap1\n      pop\n        /* \"#utility.yul\":17908:18274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18280:18699   */\n    tag_196:\n        /* \"#utility.yul\":18446:18450   */\n      0x00\n        /* \"#utility.yul\":18484:18486   */\n      0x20\n        /* \"#utility.yul\":18473:18482   */\n      dup3\n        /* \"#utility.yul\":18469:18487   */\n      add\n        /* \"#utility.yul\":18461:18487   */\n      swap1\n      pop\n        /* \"#utility.yul\":18533:18542   */\n      dup2\n        /* \"#utility.yul\":18527:18531   */\n      dup2\n        /* \"#utility.yul\":18523:18543   */\n      sub\n        /* \"#utility.yul\":18519:18520   */\n      0x00\n        /* \"#utility.yul\":18508:18517   */\n      dup4\n        /* \"#utility.yul\":18504:18521   */\n      add\n        /* \"#utility.yul\":18497:18544   */\n      mstore\n        /* \"#utility.yul\":18561:18692   */\n      tag_432\n        /* \"#utility.yul\":18687:18691   */\n      dup2\n        /* \"#utility.yul\":18561:18692   */\n      tag_265\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":18553:18692   */\n      swap1\n      pop\n        /* \"#utility.yul\":18280:18699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207a00d138b359fa90f44a7fcf3f46b116c841591a449f9fc1a482c7de9a57ff4364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1464": {
									"entryPoint": null,
									"id": 1464,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_336": {
									"entryPoint": 225,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 233,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:9"
															},
															"nodeType": "YulIf",
															"src": "949:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:9",
														"type": ""
													}
												],
												"src": "845:507:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001f9038038062001f90833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b611d22806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063057466ea14610067578063150b7a0214610083578063715018a6146100b3578063722227f2146100bd5780638da5cb5b146100d9578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c9190611319565b610113565b005b61009d6004803603810190610098919061141c565b610678565b6040516100aa91906114df565b60405180910390f35b6100bb61068d565b005b6100d760048036038101906100d29190611319565b6106a1565b005b6100e1610ec2565b6040516100ee9190611509565b60405180910390f35b610111600480360381019061010c9190611524565b610eeb565b005b80821115610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d906115d4565b60405180910390fd5b6000808390505b82811161035357600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7572230826040518263ffffffff1660e01b81526004016101bf9190611603565b602060405180830381865afa1580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102009190611633565b8261020b919061168f565b9150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016102689190611603565b602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a991906116d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102e182610f6e565b6040516020016102f19190611834565b60405160208183030381529060405290610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033891906118ab565b60405180910390fd5b508061034c906118cd565b905061015d565b5080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103b09190611509565b602060405180830381865afa1580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f19190611633565b1015610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990611987565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104909291906119a7565b602060405180830381865afa1580156104ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d19190611633565b1015610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990611a42565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33610559610ec2565b846040518463ffffffff1660e01b815260040161057893929190611a62565b6020604051808303816000875af1158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb9190611ad1565b5060008390505b82811161067257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e61060f610ec2565b33846040518463ffffffff1660e01b815260040161062f93929190611a62565b600060405180830381600087803b15801561064957600080fd5b505af115801561065d573d6000803e3d6000fd5b505050508061066b906118cd565b90506105c2565b50505050565b600063150b7a0260e01b905095945050505050565b61069561103c565b61069f60006110ba565b565b6106a961103c565b6000818311156106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e5906115d4565b60405180910390fd5b60008390505b8281116109cc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a91b2e9f826040518263ffffffff1660e01b81526004016107569190611603565b602060405180830381865afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190611633565b826107a2919061168f565b9150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016107ff9190611603565b602060405180830381865afa15801561081c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084091906116d8565b73ffffffffffffffffffffffffffffffffffffffff1661085e610ec2565b73ffffffffffffffffffffffffffffffffffffffff16141561087f82610f6e565b60405160200161088f9190611834565b604051602081830303815290604052906108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d691906118ab565b60405180910390fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9548e53826040518263ffffffff1660e01b815260040161093b9190611603565b602060405180830381865afa158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c9190611ad1565b6109bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b290611b70565b60405180910390fd5b806109c5906118cd565b90506106f4565b5080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231610a14610ec2565b6040518263ffffffff1660e01b8152600401610a309190611509565b602060405180830381865afa158015610a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a719190611633565b1015610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990611987565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e610af9610ec2565b306040518363ffffffff1660e01b8152600401610b179291906119a7565b602060405180830381865afa158015610b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b589190611633565b1015610b99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9090611a42565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610bdf610ec2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e876040518263ffffffff1660e01b8152600401610c3a9190611603565b602060405180830381865afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b91906116d8565b846040518463ffffffff1660e01b8152600401610c9a93929190611a62565b6020604051808303816000875af1158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd9190611ad1565b5060008390505b828111610ebc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610d849190611603565b602060405180830381865afa158015610da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc591906116d8565b610dcd610ec2565b846040518463ffffffff1660e01b8152600401610dec93929190611a62565b600060405180830381600087803b158015610e0657600080fd5b505af1158015610e1a573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610e799190611603565b600060405180830381600087803b158015610e9357600080fd5b505af1158015610ea7573d6000803e3d6000fd5b5050505080610eb5906118cd565b9050610ce4565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ef361103c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5990611c02565b60405180910390fd5b610f6b816110ba565b50565b606060006001610f7d8461117e565b01905060008167ffffffffffffffff811115610f9c57610f9b611c22565b5b6040519080825280601f01601f191660200182016040528015610fce5781602001600182028036833780820191505090505b509050600082602001820190505b600115611031578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161102557611024611c51565b5b04945060008503610fdc575b819350505050919050565b6110446112d1565b73ffffffffffffffffffffffffffffffffffffffff16611062610ec2565b73ffffffffffffffffffffffffffffffffffffffff16146110b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110af90611ccc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106111dc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816111d2576111d1611c51565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611219576d04ee2d6d415b85acef8100000000838161120f5761120e611c51565b5b0492506020810190505b662386f26fc10000831061124857662386f26fc10000838161123e5761123d611c51565b5b0492506010810190505b6305f5e1008310611271576305f5e100838161126757611266611c51565b5b0492506008810190505b612710831061129657612710838161128c5761128b611c51565b5b0492506004810190505b606483106112b957606483816112af576112ae611c51565b5b0492506002810190505b600a83106112c8576001810190505b80915050919050565b600033905090565b600080fd5b600080fd5b6000819050919050565b6112f6816112e3565b811461130157600080fd5b50565b600081359050611313816112ed565b92915050565b600080604083850312156113305761132f6112d9565b5b600061133e85828601611304565b925050602061134f85828601611304565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061138482611359565b9050919050565b61139481611379565b811461139f57600080fd5b50565b6000813590506113b18161138b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126113dc576113db6113b7565b5b8235905067ffffffffffffffff8111156113f9576113f86113bc565b5b602083019150836001820283011115611415576114146113c1565b5b9250929050565b600080600080600060808688031215611438576114376112d9565b5b6000611446888289016113a2565b9550506020611457888289016113a2565b945050604061146888828901611304565b935050606086013567ffffffffffffffff811115611489576114886112de565b5b611495888289016113c6565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d9816114a4565b82525050565b60006020820190506114f460008301846114d0565b92915050565b61150381611379565b82525050565b600060208201905061151e60008301846114fa565b92915050565b60006020828403121561153a576115396112d9565b5b6000611548848285016113a2565b91505092915050565b600082825260208201905092915050565b7f42414e4b204d414e414745523a205269676874204944277320626f756e64206960008201527f73206c657373207468616e206c656674206f6e652e0000000000000000000000602082015250565b60006115be603583611551565b91506115c982611562565b604082019050919050565b600060208201905081810360008301526115ed816115b1565b9050919050565b6115fd816112e3565b82525050565b600060208201905061161860008301846115f4565b92915050565b60008151905061162d816112ed565b92915050565b600060208284031215611649576116486112d9565b5b60006116578482850161161e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061169a826112e3565b91506116a5836112e3565b92508282019050808211156116bd576116bc611660565b5b92915050565b6000815190506116d28161138b565b92915050565b6000602082840312156116ee576116ed6112d9565b5b60006116fc848285016116c3565b91505092915050565b600081905092915050565b7f42544f543a205573657220616c726561647920697320616e206f776e6572206f60008201527f6620746f6b656e20776974682049442000000000000000000000000000000000602082015250565b600061176c603083611705565b915061177782611710565b603082019050919050565b600081519050919050565b60005b838110156117ab578082015181840152602081019050611790565b60008484015250505050565b60006117c282611782565b6117cc8185611705565b93506117dc81856020860161178d565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b600061181e600183611705565b9150611829826117e8565b600182019050919050565b600061183f8261175f565b915061184b82846117b7565b915061185682611811565b915081905092915050565b6000601f19601f8301169050919050565b600061187d82611782565b6118878185611551565b935061189781856020860161178d565b6118a081611861565b840191505092915050565b600060208201905081810360008301526118c58184611872565b905092915050565b60006118d8826112e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361190a57611909611660565b5b600182019050919050565b7f42544f433a20496e73756666696369656e7420616d6f756e74206f6620746f6b60008201527f656e732e00000000000000000000000000000000000000000000000000000000602082015250565b6000611971602483611551565b915061197c82611915565b604082019050919050565b600060208201905081810360008301526119a081611964565b9050919050565b60006040820190506119bc60008301856114fa565b6119c960208301846114fa565b9392505050565b7f42544f433a20496e73756666696369656e7420616c6c6f77656420616d6f756e60008201527f74206f6620746f6b656e7320746f207370656e642e0000000000000000000000602082015250565b6000611a2c603583611551565b9150611a37826119d0565b604082019050919050565b60006020820190508181036000830152611a5b81611a1f565b9050919050565b6000606082019050611a7760008301866114fa565b611a8460208301856114fa565b611a9160408301846115f4565b949350505050565b60008115159050919050565b611aae81611a99565b8114611ab957600080fd5b50565b600081519050611acb81611aa5565b92915050565b600060208284031215611ae757611ae66112d9565b5b6000611af584828501611abc565b91505092915050565b7f42544f543a20546f6b656e20776974682073756368204944206861736e27742060008201527f65787069726564207965742e0000000000000000000000000000000000000000602082015250565b6000611b5a602c83611551565b9150611b6582611afe565b604082019050919050565b60006020820190508181036000830152611b8981611b4d565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611bec602683611551565b9150611bf782611b90565b604082019050919050565b60006020820190508181036000830152611c1b81611bdf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611cb6602083611551565b9150611cc182611c80565b602082019050919050565b60006020820190508181036000830152611ce581611ca9565b905091905056fea26469706673582212207a00d138b359fa90f44a7fcf3f46b116c841591a449f9fc1a482c7de9a57ff4364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F90 CODESIZE SUB DUP1 PUSH3 0x1F90 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x217 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xE1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x25E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DF DUP3 PUSH3 0x1B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F1 DUP2 PUSH3 0x1D2 JUMP JUMPDEST DUP2 EQ PUSH3 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x211 DUP2 PUSH3 0x1E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x1AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x241 DUP6 DUP3 DUP7 ADD PUSH3 0x200 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x254 DUP6 DUP3 DUP7 ADD PUSH3 0x200 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D22 DUP1 PUSH3 0x26E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x57466EA EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x722227F2 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x68D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1524 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST STOP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x353 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE7572230 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST DUP3 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST SWAP2 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x285 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E1 DUP3 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0x34C SWAP1 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0x15D JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST LT ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x490 SWAP3 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH2 0x559 PUSH2 0xEC2 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x672 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH2 0x60F PUSH2 0xEC2 JUMP JUMPDEST CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH2 0x66B SWAP1 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0x5C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x695 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x69F PUSH1 0x0 PUSH2 0x10BA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x9CC JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA91B2E9F DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST DUP3 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST SWAP2 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x81C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x85E PUSH2 0xEC2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x87F DUP3 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9548E53 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x958 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x9C5 SWAP1 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0x6F4 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0xA14 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST LT ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA9 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH2 0xAF9 PUSH2 0xEC2 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB17 SWAP3 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST LT ISZERO PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB90 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0xBDF PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7B SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xEBC JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0xDCD PUSH2 0xEC2 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE79 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH2 0xEB5 SWAP1 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0xCE4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEF3 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF59 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6B DUP2 PUSH2 0x10BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xF7D DUP5 PUSH2 0x117E JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1031 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1025 JUMPI PUSH2 0x1024 PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xFDC JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1044 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1062 PUSH2 0xEC2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AF SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x11DC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1219 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x120F JUMPI PUSH2 0x120E PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1248 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x123E JUMPI PUSH2 0x123D PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1271 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1267 JUMPI PUSH2 0x1266 PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1296 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x128C JUMPI PUSH2 0x128B PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12B9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x12AF JUMPI PUSH2 0x12AE PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x12C8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F6 DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1313 DUP2 PUSH2 0x12ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1330 JUMPI PUSH2 0x132F PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133E DUP6 DUP3 DUP7 ADD PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x134F DUP6 DUP3 DUP7 ADD PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1384 DUP3 PUSH2 0x1359 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1394 DUP2 PUSH2 0x1379 JUMP JUMPDEST DUP2 EQ PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B1 DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x13DC JUMPI PUSH2 0x13DB PUSH2 0x13B7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13F9 JUMPI PUSH2 0x13F8 PUSH2 0x13BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1415 JUMPI PUSH2 0x1414 PUSH2 0x13C1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1438 JUMPI PUSH2 0x1437 PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1446 DUP9 DUP3 DUP10 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1457 DUP9 DUP3 DUP10 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1468 DUP9 DUP3 DUP10 ADD PUSH2 0x1304 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1489 JUMPI PUSH2 0x1488 PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH2 0x1495 DUP9 DUP3 DUP10 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D9 DUP2 PUSH2 0x14A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1503 DUP2 PUSH2 0x1379 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1548 DUP5 DUP3 DUP6 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42414E4B204D414E414745523A205269676874204944277320626F756E642069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73206C657373207468616E206C656674206F6E652E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BE PUSH1 0x35 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C9 DUP3 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15ED DUP2 PUSH2 0x15B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FD DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1618 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x12ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1657 DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x169A DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A5 DUP4 PUSH2 0x12E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16BD JUMPI PUSH2 0x16BC PUSH2 0x1660 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16D2 DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FC DUP5 DUP3 DUP6 ADD PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42544F543A205573657220616C726561647920697320616E206F776E6572206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6620746F6B656E20776974682049442000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176C PUSH1 0x30 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1777 DUP3 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x30 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17AB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C2 DUP3 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x17CC DUP2 DUP6 PUSH2 0x1705 JUMP JUMPDEST SWAP4 POP PUSH2 0x17DC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181E PUSH1 0x1 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1829 DUP3 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183F DUP3 PUSH2 0x175F JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 DUP5 PUSH2 0x17B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1856 DUP3 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187D DUP3 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x1887 DUP2 DUP6 PUSH2 0x1551 JUMP JUMPDEST SWAP4 POP PUSH2 0x1897 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST PUSH2 0x18A0 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18C5 DUP2 DUP5 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D8 DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x190A JUMPI PUSH2 0x1909 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42544F433A20496E73756666696369656E7420616D6F756E74206F6620746F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E732E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1971 PUSH1 0x24 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x197C DUP3 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19A0 DUP2 PUSH2 0x1964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19BC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x19C9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x42544F433A20496E73756666696369656E7420616C6C6F77656420616D6F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620746F6B656E7320746F207370656E642E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2C PUSH1 0x35 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A37 DUP3 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A5B DUP2 PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x1A84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x1A91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15F4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAE DUP2 PUSH2 0x1A99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ACB DUP2 PUSH2 0x1AA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42544F543A20546F6B656E20776974682073756368204944206861736E277420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65787069726564207965742E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5A PUSH1 0x2C DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B65 DUP3 PUSH2 0x1AFE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B89 DUP2 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC PUSH1 0x26 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF7 DUP3 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1B DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 PUSH1 0x20 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC1 DUP3 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE5 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xD138B359FA90F44A7FCF3F46B116C841591A449F9FC1A482C7DE SWAP11 JUMPI SELFDESTRUCT NUMBER PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "658:2672:8:-:0;;;792:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;872:8:8;848:14;;:33;;;;;;;;;;;;;;;;;;918:5;892:11;;:32;;;;;;;;;;;;;;;;;;792:140;;658:2672;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;658:2672:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 4156,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_336": {
									"entryPoint": 4817,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 4282,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyToken_1582": {
									"entryPoint": 275,
									"id": 1582,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@expireToken_1720": {
									"entryPoint": 1697,
									"id": 1720,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@log10_1235": {
									"entryPoint": 4478,
									"id": 1235,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC721Received_1739": {
									"entryPoint": 1656,
									"id": 1739,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 3778,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1677,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_404": {
									"entryPoint": 3950,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 3819,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 5827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 5328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 5343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 7056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53": {
									"entryPoint": 6910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18702:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:9"
															},
															"nodeType": "YulIf",
															"src": "783:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:9",
														"type": ""
													}
												],
												"src": "690:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1215:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1225:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1240:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1236:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1225:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1197:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1207:7:9",
														"type": ""
													}
												],
												"src": "1170:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1347:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1357:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1386:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1368:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1357:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1329:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1339:7:9",
														"type": ""
													}
												],
												"src": "1302:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1447:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1504:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1513:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1516:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1506:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1506:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1506:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1470:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1495:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1477:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1477:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1467:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1467:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:43:9"
															},
															"nodeType": "YulIf",
															"src": "1457:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1440:5:9",
														"type": ""
													}
												],
												"src": "1404:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1584:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1594:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1616:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1603:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1594:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1659:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1632:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1632:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1562:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1570:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1578:5:9",
														"type": ""
													}
												],
												"src": "1532:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1766:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1786:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1776:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1677:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1889:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1906:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1899:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1800:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2012:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2029:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2032:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2022:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2022:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1923:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2133:478:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2182:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2184:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2184:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2184:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2161:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2169:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2157:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2157:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2176:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2153:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2153:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:35:9"
															},
															"nodeType": "YulIf",
															"src": "2143:122:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2274:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2284:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2347:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "2349:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2349:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2349:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2319:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2327:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2316:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:30:9"
															},
															"nodeType": "YulIf",
															"src": "2313:117:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2439:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2455:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2463:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2439:8:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2522:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2524:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2524:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2487:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2501:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2509:4:9",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2497:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2497:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2483:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:32:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2517:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2480:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:41:9"
															},
															"nodeType": "YulIf",
															"src": "2477:128:9"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2100:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2108:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2116:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2126:6:9",
														"type": ""
													}
												],
												"src": "2059:552:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2753:827:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2800:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2802:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2802:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2802:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2774:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2795:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:33:9"
															},
															"nodeType": "YulIf",
															"src": "2763:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2893:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2908:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2922:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2912:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2937:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2972:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2983:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2968:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2968:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2992:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2947:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2947:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2937:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3020:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3035:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3039:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3065:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3100:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3111:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3096:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3096:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3120:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3075:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3075:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3065:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3148:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3163:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3177:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3167:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3193:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3228:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3239:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3224:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3224:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3248:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3203:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3193:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3276:297:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3291:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3322:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3333:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3318:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3318:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3305:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3295:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3384:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3386:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3386:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3386:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3356:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3364:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3353:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3353:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3350:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3481:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3535:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3546:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3531:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3531:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3555:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3499:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3481:6:9"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3489:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2691:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2702:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2714:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2722:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2730:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2738:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2746:6:9",
														"type": ""
													}
												],
												"src": "2617:963:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3640:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3655:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3662:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3651:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3640:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3612:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3622:7:9",
														"type": ""
													}
												],
												"src": "3586:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3804:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3821:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3843:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3826:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3826:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3814:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3814:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3792:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3799:3:9",
														"type": ""
													}
												],
												"src": "3741:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3958:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3968:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3980:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3991:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3968:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4046:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4070:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4055:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4004:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4004:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3942:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3953:4:9",
														"type": ""
													}
												],
												"src": "3862:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4151:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4168:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4191:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4173:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4173:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4161:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4161:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4161:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4139:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4146:3:9",
														"type": ""
													}
												],
												"src": "4086:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4308:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4318:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4398:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4422:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4407:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4407:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4354:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4280:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4292:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4303:4:9",
														"type": ""
													}
												],
												"src": "4210:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4504:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4550:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4552:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4552:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4552:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4525:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4521:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4521:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4517:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:32:9"
															},
															"nodeType": "YulIf",
															"src": "4514:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4643:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4658:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4662:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4687:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4722:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4733:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4718:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4718:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4742:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4697:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4697:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4687:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4474:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4485:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4497:6:9",
														"type": ""
													}
												],
												"src": "4438:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4869:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4886:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4891:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4879:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4879:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4907:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4926:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4922:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4907:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4841:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4846:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4857:11:9",
														"type": ""
													}
												],
												"src": "4773:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5054:134:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5076:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5084:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:14:9"
																	},
																	{
																		"hexValue": "42414e4b204d414e414745523a205269676874204944277320626f756e642069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5088:34:9",
																		"type": "",
																		"value": "BANK MANAGER: Right ID's bound i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5065:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5065:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5065:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5144:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5152:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5140:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5140:15:9"
																	},
																	{
																		"hexValue": "73206c657373207468616e206c656674206f6e652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5157:23:9",
																		"type": "",
																		"value": "s less than left one."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5133:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5133:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5133:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5046:6:9",
														"type": ""
													}
												],
												"src": "4948:240:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5340:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5350:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5416:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5421:2:9",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5357:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5350:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5522:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13",
																	"nodeType": "YulIdentifier",
																	"src": "5433:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5433:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5433:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5535:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5546:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5551:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5542:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5328:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5336:3:9",
														"type": ""
													}
												],
												"src": "5194:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5737:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5747:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5759:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5770:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5755:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5755:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5747:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5805:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5790:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5813:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5819:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5809:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5809:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5839:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5973:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5847:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5839:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5732:4:9",
														"type": ""
													}
												],
												"src": "5566:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6056:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6073:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6078:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6078:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6066:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6066:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6066:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6044:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6051:3:9",
														"type": ""
													}
												],
												"src": "5991:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6213:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6223:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6235:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6246:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6223:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6303:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6316:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6327:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6312:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6312:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6259:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6259:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6259:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6185:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6197:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6208:4:9",
														"type": ""
													}
												],
												"src": "6115:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6406:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6416:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6431:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6425:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6416:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6474:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6447:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6447:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6447:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6384:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6392:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6400:5:9",
														"type": ""
													}
												],
												"src": "6343:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6569:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6615:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6617:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6617:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6617:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6590:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6599:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6586:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6586:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6611:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6582:32:9"
															},
															"nodeType": "YulIf",
															"src": "6579:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6708:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6723:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6737:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6727:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6752:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6798:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6809:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6794:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6794:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6818:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6762:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6762:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6752:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6539:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6550:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6562:6:9",
														"type": ""
													}
												],
												"src": "6492:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6877:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6894:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6897:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6887:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6887:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6991:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6994:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6984:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6984:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7015:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7018:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7008:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7008:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6849:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7079:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7089:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7112:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7094:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7094:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7089:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7123:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7146:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7128:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7128:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7123:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7157:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7168:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7171:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7164:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7164:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7157:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7197:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7199:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7199:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7199:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7189:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7192:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7186:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:10:9"
															},
															"nodeType": "YulIf",
															"src": "7183:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7066:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7069:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7075:3:9",
														"type": ""
													}
												],
												"src": "7035:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7295:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7305:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7320:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7314:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7314:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7305:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7363:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7336:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7336:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7336:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7273:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7281:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7289:5:9",
														"type": ""
													}
												],
												"src": "7232:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7458:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7504:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7506:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7506:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7506:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7479:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7488:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7475:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7475:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7500:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7471:32:9"
															},
															"nodeType": "YulIf",
															"src": "7468:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7597:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7612:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7626:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7616:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7641:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7687:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7698:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7683:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7683:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7707:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7651:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7641:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7428:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7439:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7451:6:9",
														"type": ""
													}
												],
												"src": "7381:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7852:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7862:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7877:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7862:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7824:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7829:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7840:11:9",
														"type": ""
													}
												],
												"src": "7738:148:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7998:129:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8020:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8028:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8016:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8016:14:9"
																	},
																	{
																		"hexValue": "42544f543a205573657220616c726561647920697320616e206f776e6572206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8032:34:9",
																		"type": "",
																		"value": "BTOT: User already is an owner o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8009:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8009:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8088:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8096:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8084:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8084:15:9"
																	},
																	{
																		"hexValue": "6620746f6b656e207769746820494420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8101:18:9",
																		"type": "",
																		"value": "f token with ID "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8077:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8077:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8077:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7990:6:9",
														"type": ""
													}
												],
												"src": "7892:235:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8297:238:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8307:92:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8391:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8396:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8314:76:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:85:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8307:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8497:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc",
																	"nodeType": "YulIdentifier",
																	"src": "8408:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8510:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8521:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8526:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8517:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8517:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8510:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8285:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8293:3:9",
														"type": ""
													}
												],
												"src": "8133:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8600:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8611:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8627:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8621:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8621:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8611:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8583:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8593:6:9",
														"type": ""
													}
												],
												"src": "8541:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8708:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8718:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8727:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8722:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8787:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8812:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8817:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8808:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8808:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8831:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8836:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8827:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8827:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8821:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8821:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8801:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8801:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8801:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8748:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8751:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8745:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8745:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8759:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8761:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8770:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8773:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8766:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8766:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8761:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8741:3:9",
																"statements": []
															},
															"src": "8737:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8870:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8875:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8866:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8866:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8884:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8859:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8859:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8859:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8690:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8695:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8700:6:9",
														"type": ""
													}
												],
												"src": "8646:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9008:280:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9018:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9065:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9032:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9032:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9022:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9080:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9164:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9169:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9087:76:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9087:89:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9080:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9224:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9231:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9220:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9220:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9238:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9243:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9185:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9185:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9185:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9259:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9270:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9275:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9266:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9266:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9259:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8989:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8996:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9004:3:9",
														"type": ""
													}
												],
												"src": "8898:390:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9400:45:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9422:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9430:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9418:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9418:14:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9434:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9411:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9411:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9411:27:9"
														}
													]
												},
												"name": "store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9392:6:9",
														"type": ""
													}
												],
												"src": "9294:151:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9615:236:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9625:91:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9709:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9714:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9632:76:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9632:84:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9625:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9814:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																	"nodeType": "YulIdentifier",
																	"src": "9725:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9725:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9725:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9827:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9838:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9843:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9834:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9834:11:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9827:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9603:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9611:3:9",
														"type": ""
													}
												],
												"src": "9451:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10195:469:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10206:155:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10357:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10213:142:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10213:148:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10206:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10371:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10460:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10469:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10378:81:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10378:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10371:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10483:155:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10634:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10490:142:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10490:148:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10483:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10648:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10655:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10648:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10174:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10180:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10191:3:9",
														"type": ""
													}
												],
												"src": "9857:807:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10718:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10728:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10746:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10753:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10742:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10742:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10762:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10758:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10738:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10738:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10728:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10701:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "10711:6:9",
														"type": ""
													}
												],
												"src": "10670:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10870:285:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10880:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10927:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10894:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10894:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10884:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10942:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11008:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11013:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10949:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10949:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10942:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11068:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11075:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11064:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11064:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11082:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11087:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11029:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11029:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11029:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11103:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11114:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11141:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11119:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11119:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11110:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11110:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11103:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10851:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10858:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10866:3:9",
														"type": ""
													}
												],
												"src": "10778:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11279:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11289:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11301:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11312:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11297:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11297:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11289:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11336:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11347:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11332:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11332:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11355:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11361:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11351:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11351:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11325:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11325:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11325:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11381:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11453:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11462:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11389:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11389:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11381:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11251:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11263:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11274:4:9",
														"type": ""
													}
												],
												"src": "11161:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11523:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11533:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11560:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11542:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11542:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11533:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11656:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11658:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11658:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11658:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11581:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11588:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11578:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11578:77:9"
															},
															"nodeType": "YulIf",
															"src": "11575:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11687:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11698:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11705:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11694:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11694:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11687:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11509:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11519:3:9",
														"type": ""
													}
												],
												"src": "11480:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11825:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11847:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11855:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11843:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11843:14:9"
																	},
																	{
																		"hexValue": "42544f433a20496e73756666696369656e7420616d6f756e74206f6620746f6b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11859:34:9",
																		"type": "",
																		"value": "BTOC: Insufficient amount of tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11836:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11836:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11836:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11915:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11923:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11911:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11911:15:9"
																	},
																	{
																		"hexValue": "656e732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11928:6:9",
																		"type": "",
																		"value": "ens."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11904:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11904:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11904:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11817:6:9",
														"type": ""
													}
												],
												"src": "11719:223:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12094:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12104:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12170:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12175:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12111:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12111:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12104:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12276:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e",
																	"nodeType": "YulIdentifier",
																	"src": "12187:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12187:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12187:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12289:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12300:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12305:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12296:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12296:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12289:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12082:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12090:3:9",
														"type": ""
													}
												],
												"src": "11948:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12491:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12501:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12513:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12524:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12509:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12501:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12548:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12559:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12544:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12544:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12567:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12573:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12563:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12563:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12537:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12537:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12593:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12727:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12601:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12601:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12593:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12471:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12486:4:9",
														"type": ""
													}
												],
												"src": "12320:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12871:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12881:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12893:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12904:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12889:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12889:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12881:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12961:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12974:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12985:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12970:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12917:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12917:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12917:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13042:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13055:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13066:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13051:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13051:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12998:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12998:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12998:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12835:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12847:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12855:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12866:4:9",
														"type": ""
													}
												],
												"src": "12745:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13189:134:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13211:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13219:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13207:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13207:14:9"
																	},
																	{
																		"hexValue": "42544f433a20496e73756666696369656e7420616c6c6f77656420616d6f756e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13223:34:9",
																		"type": "",
																		"value": "BTOC: Insufficient allowed amoun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13200:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13200:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13200:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13279:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13287:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13275:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13275:15:9"
																	},
																	{
																		"hexValue": "74206f6620746f6b656e7320746f207370656e642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13292:23:9",
																		"type": "",
																		"value": "t of tokens to spend."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13268:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13268:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13181:6:9",
														"type": ""
													}
												],
												"src": "13083:240:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13475:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13485:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13551:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13556:2:9",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13492:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13492:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13485:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13657:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be",
																	"nodeType": "YulIdentifier",
																	"src": "13568:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13568:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13568:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13670:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13681:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13686:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13677:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13677:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13670:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13463:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13471:3:9",
														"type": ""
													}
												],
												"src": "13329:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13872:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13882:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13894:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13905:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13890:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13890:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13882:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13929:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13940:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13925:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13948:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13954:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13944:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13944:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13918:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13918:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13974:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14108:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13982:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13982:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13974:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13852:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13867:4:9",
														"type": ""
													}
												],
												"src": "13701:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14280:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14290:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14302:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14313:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14298:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14298:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14290:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14370:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14383:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14394:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14379:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14379:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14326:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14326:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14326:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14451:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14464:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14475:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14460:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14460:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14407:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14407:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14407:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14533:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14546:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14557:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14542:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14542:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14489:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14489:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14489:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14236:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14248:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14256:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14264:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14275:4:9",
														"type": ""
													}
												],
												"src": "14126:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14616:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14626:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14651:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14644:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14644:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14637:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14637:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14626:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14598:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14608:7:9",
														"type": ""
													}
												],
												"src": "14574:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14710:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14764:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14773:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14776:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14766:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14766:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14766:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14733:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14755:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14740:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14740:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14730:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14730:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14723:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:40:9"
															},
															"nodeType": "YulIf",
															"src": "14720:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14703:5:9",
														"type": ""
													}
												],
												"src": "14670:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14852:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14862:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14877:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14871:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14871:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14862:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14917:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14893:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14893:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14893:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14830:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14838:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14846:5:9",
														"type": ""
													}
												],
												"src": "14792:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15009:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15055:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15057:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15057:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15057:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15030:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15039:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15026:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15026:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15051:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15022:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15022:32:9"
															},
															"nodeType": "YulIf",
															"src": "15019:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "15148:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15163:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15177:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15167:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15192:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15235:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15246:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15231:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15231:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15255:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15202:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15202:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15192:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14979:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14990:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15002:6:9",
														"type": ""
													}
												],
												"src": "14935:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15392:125:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15414:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15422:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15410:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15410:14:9"
																	},
																	{
																		"hexValue": "42544f543a20546f6b656e20776974682073756368204944206861736e277420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15426:34:9",
																		"type": "",
																		"value": "BTOT: Token with such ID hasn't "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15403:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15403:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15482:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15490:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15478:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15478:15:9"
																	},
																	{
																		"hexValue": "65787069726564207965742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15495:14:9",
																		"type": "",
																		"value": "expired yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15471:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15471:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15471:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15384:6:9",
														"type": ""
													}
												],
												"src": "15286:231:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15669:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15679:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15745:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15750:2:9",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15686:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15686:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15679:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15851:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53",
																	"nodeType": "YulIdentifier",
																	"src": "15762:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15762:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15762:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15864:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15875:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15880:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15871:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15871:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15864:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15657:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15665:3:9",
														"type": ""
													}
												],
												"src": "15523:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16066:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16076:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16088:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16099:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16084:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16084:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16076:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16123:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16134:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16119:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16119:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16142:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16148:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16138:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16138:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16112:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16112:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16112:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16168:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16302:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16176:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16176:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16168:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16046:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16061:4:9",
														"type": ""
													}
												],
												"src": "15895:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16426:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16448:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16456:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16444:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16460:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16437:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16437:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16437:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16516:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16524:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16512:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16512:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16529:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16505:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16505:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16505:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16418:6:9",
														"type": ""
													}
												],
												"src": "16320:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16697:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16707:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16773:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16778:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16714:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16714:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16707:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16879:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "16790:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16790:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16790:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16892:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16903:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16908:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16899:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16899:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16892:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16685:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16693:3:9",
														"type": ""
													}
												],
												"src": "16551:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17094:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17104:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17116:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17127:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17112:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17112:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17104:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17151:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17162:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17147:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17170:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17176:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17166:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17166:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17140:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17140:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17196:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17330:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17204:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17204:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17196:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17074:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17089:4:9",
														"type": ""
													}
												],
												"src": "16923:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17376:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17393:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17396:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17386:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17386:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17386:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17490:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17493:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17483:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17483:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17483:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17514:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17517:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17507:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17507:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17507:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17348:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17562:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17579:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17582:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17572:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17572:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17572:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17676:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17679:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17669:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17669:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17669:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17700:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17703:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17693:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17693:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17693:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "17534:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17826:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17848:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17856:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17844:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17844:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17860:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17837:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17837:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17837:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17818:6:9",
														"type": ""
													}
												],
												"src": "17720:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18054:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18064:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18130:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18135:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18071:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18071:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18064:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18236:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "18147:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18147:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18147:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18249:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18260:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18265:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18256:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18256:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18249:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18042:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18050:3:9",
														"type": ""
													}
												],
												"src": "17908:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18451:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18461:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18473:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18484:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18469:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18469:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18461:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18508:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18519:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18504:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18504:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18527:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18533:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18523:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18523:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18497:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18497:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18497:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18553:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18687:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18561:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18561:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18553:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18431:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18446:4:9",
														"type": ""
													}
												],
												"src": "18280:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13(memPtr) {\n\n        mstore(add(memPtr, 0), \"BANK MANAGER: Right ID's bound i\")\n\n        mstore(add(memPtr, 32), \"s less than left one.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTOT: User already is an owner o\")\n\n        mstore(add(memPtr, 32), \"f token with ID \")\n\n    }\n\n    function abi_encode_t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 48)\n        store_literal_in_memory_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc(pos)\n        end := add(pos, 48)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(memPtr) {\n\n        mstore(add(memPtr, 0), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTOC: Insufficient amount of tok\")\n\n        mstore(add(memPtr, 32), \"ens.\")\n\n    }\n\n    function abi_encode_t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTOC: Insufficient allowed amoun\")\n\n        mstore(add(memPtr, 32), \"t of tokens to spend.\")\n\n    }\n\n    function abi_encode_t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTOT: Token with such ID hasn't \")\n\n        mstore(add(memPtr, 32), \"expired yet.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063057466ea14610067578063150b7a0214610083578063715018a6146100b3578063722227f2146100bd5780638da5cb5b146100d9578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c9190611319565b610113565b005b61009d6004803603810190610098919061141c565b610678565b6040516100aa91906114df565b60405180910390f35b6100bb61068d565b005b6100d760048036038101906100d29190611319565b6106a1565b005b6100e1610ec2565b6040516100ee9190611509565b60405180910390f35b610111600480360381019061010c9190611524565b610eeb565b005b80821115610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d906115d4565b60405180910390fd5b6000808390505b82811161035357600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7572230826040518263ffffffff1660e01b81526004016101bf9190611603565b602060405180830381865afa1580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102009190611633565b8261020b919061168f565b9150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016102689190611603565b602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a991906116d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102e182610f6e565b6040516020016102f19190611834565b60405160208183030381529060405290610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033891906118ab565b60405180910390fd5b508061034c906118cd565b905061015d565b5080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103b09190611509565b602060405180830381865afa1580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f19190611633565b1015610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990611987565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104909291906119a7565b602060405180830381865afa1580156104ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d19190611633565b1015610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990611a42565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33610559610ec2565b846040518463ffffffff1660e01b815260040161057893929190611a62565b6020604051808303816000875af1158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb9190611ad1565b5060008390505b82811161067257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e61060f610ec2565b33846040518463ffffffff1660e01b815260040161062f93929190611a62565b600060405180830381600087803b15801561064957600080fd5b505af115801561065d573d6000803e3d6000fd5b505050508061066b906118cd565b90506105c2565b50505050565b600063150b7a0260e01b905095945050505050565b61069561103c565b61069f60006110ba565b565b6106a961103c565b6000818311156106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e5906115d4565b60405180910390fd5b60008390505b8281116109cc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a91b2e9f826040518263ffffffff1660e01b81526004016107569190611603565b602060405180830381865afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190611633565b826107a2919061168f565b9150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016107ff9190611603565b602060405180830381865afa15801561081c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084091906116d8565b73ffffffffffffffffffffffffffffffffffffffff1661085e610ec2565b73ffffffffffffffffffffffffffffffffffffffff16141561087f82610f6e565b60405160200161088f9190611834565b604051602081830303815290604052906108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d691906118ab565b60405180910390fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9548e53826040518263ffffffff1660e01b815260040161093b9190611603565b602060405180830381865afa158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c9190611ad1565b6109bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b290611b70565b60405180910390fd5b806109c5906118cd565b90506106f4565b5080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231610a14610ec2565b6040518263ffffffff1660e01b8152600401610a309190611509565b602060405180830381865afa158015610a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a719190611633565b1015610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990611987565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e610af9610ec2565b306040518363ffffffff1660e01b8152600401610b179291906119a7565b602060405180830381865afa158015610b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b589190611633565b1015610b99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9090611a42565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610bdf610ec2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e876040518263ffffffff1660e01b8152600401610c3a9190611603565b602060405180830381865afa158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b91906116d8565b846040518463ffffffff1660e01b8152600401610c9a93929190611a62565b6020604051808303816000875af1158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd9190611ad1565b5060008390505b828111610ebc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610d849190611603565b602060405180830381865afa158015610da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc591906116d8565b610dcd610ec2565b846040518463ffffffff1660e01b8152600401610dec93929190611a62565b600060405180830381600087803b158015610e0657600080fd5b505af1158015610e1a573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610e799190611603565b600060405180830381600087803b158015610e9357600080fd5b505af1158015610ea7573d6000803e3d6000fd5b5050505080610eb5906118cd565b9050610ce4565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ef361103c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5990611c02565b60405180910390fd5b610f6b816110ba565b50565b606060006001610f7d8461117e565b01905060008167ffffffffffffffff811115610f9c57610f9b611c22565b5b6040519080825280601f01601f191660200182016040528015610fce5781602001600182028036833780820191505090505b509050600082602001820190505b600115611031578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161102557611024611c51565b5b04945060008503610fdc575b819350505050919050565b6110446112d1565b73ffffffffffffffffffffffffffffffffffffffff16611062610ec2565b73ffffffffffffffffffffffffffffffffffffffff16146110b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110af90611ccc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106111dc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816111d2576111d1611c51565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611219576d04ee2d6d415b85acef8100000000838161120f5761120e611c51565b5b0492506020810190505b662386f26fc10000831061124857662386f26fc10000838161123e5761123d611c51565b5b0492506010810190505b6305f5e1008310611271576305f5e100838161126757611266611c51565b5b0492506008810190505b612710831061129657612710838161128c5761128b611c51565b5b0492506004810190505b606483106112b957606483816112af576112ae611c51565b5b0492506002810190505b600a83106112c8576001810190505b80915050919050565b600033905090565b600080fd5b600080fd5b6000819050919050565b6112f6816112e3565b811461130157600080fd5b50565b600081359050611313816112ed565b92915050565b600080604083850312156113305761132f6112d9565b5b600061133e85828601611304565b925050602061134f85828601611304565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061138482611359565b9050919050565b61139481611379565b811461139f57600080fd5b50565b6000813590506113b18161138b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126113dc576113db6113b7565b5b8235905067ffffffffffffffff8111156113f9576113f86113bc565b5b602083019150836001820283011115611415576114146113c1565b5b9250929050565b600080600080600060808688031215611438576114376112d9565b5b6000611446888289016113a2565b9550506020611457888289016113a2565b945050604061146888828901611304565b935050606086013567ffffffffffffffff811115611489576114886112de565b5b611495888289016113c6565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d9816114a4565b82525050565b60006020820190506114f460008301846114d0565b92915050565b61150381611379565b82525050565b600060208201905061151e60008301846114fa565b92915050565b60006020828403121561153a576115396112d9565b5b6000611548848285016113a2565b91505092915050565b600082825260208201905092915050565b7f42414e4b204d414e414745523a205269676874204944277320626f756e64206960008201527f73206c657373207468616e206c656674206f6e652e0000000000000000000000602082015250565b60006115be603583611551565b91506115c982611562565b604082019050919050565b600060208201905081810360008301526115ed816115b1565b9050919050565b6115fd816112e3565b82525050565b600060208201905061161860008301846115f4565b92915050565b60008151905061162d816112ed565b92915050565b600060208284031215611649576116486112d9565b5b60006116578482850161161e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061169a826112e3565b91506116a5836112e3565b92508282019050808211156116bd576116bc611660565b5b92915050565b6000815190506116d28161138b565b92915050565b6000602082840312156116ee576116ed6112d9565b5b60006116fc848285016116c3565b91505092915050565b600081905092915050565b7f42544f543a205573657220616c726561647920697320616e206f776e6572206f60008201527f6620746f6b656e20776974682049442000000000000000000000000000000000602082015250565b600061176c603083611705565b915061177782611710565b603082019050919050565b600081519050919050565b60005b838110156117ab578082015181840152602081019050611790565b60008484015250505050565b60006117c282611782565b6117cc8185611705565b93506117dc81856020860161178d565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b600061181e600183611705565b9150611829826117e8565b600182019050919050565b600061183f8261175f565b915061184b82846117b7565b915061185682611811565b915081905092915050565b6000601f19601f8301169050919050565b600061187d82611782565b6118878185611551565b935061189781856020860161178d565b6118a081611861565b840191505092915050565b600060208201905081810360008301526118c58184611872565b905092915050565b60006118d8826112e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361190a57611909611660565b5b600182019050919050565b7f42544f433a20496e73756666696369656e7420616d6f756e74206f6620746f6b60008201527f656e732e00000000000000000000000000000000000000000000000000000000602082015250565b6000611971602483611551565b915061197c82611915565b604082019050919050565b600060208201905081810360008301526119a081611964565b9050919050565b60006040820190506119bc60008301856114fa565b6119c960208301846114fa565b9392505050565b7f42544f433a20496e73756666696369656e7420616c6c6f77656420616d6f756e60008201527f74206f6620746f6b656e7320746f207370656e642e0000000000000000000000602082015250565b6000611a2c603583611551565b9150611a37826119d0565b604082019050919050565b60006020820190508181036000830152611a5b81611a1f565b9050919050565b6000606082019050611a7760008301866114fa565b611a8460208301856114fa565b611a9160408301846115f4565b949350505050565b60008115159050919050565b611aae81611a99565b8114611ab957600080fd5b50565b600081519050611acb81611aa5565b92915050565b600060208284031215611ae757611ae66112d9565b5b6000611af584828501611abc565b91505092915050565b7f42544f543a20546f6b656e20776974682073756368204944206861736e27742060008201527f65787069726564207965742e0000000000000000000000000000000000000000602082015250565b6000611b5a602c83611551565b9150611b6582611afe565b604082019050919050565b60006020820190508181036000830152611b8981611b4d565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611bec602683611551565b9150611bf782611b90565b604082019050919050565b60006020820190508181036000830152611c1b81611bdf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611cb6602083611551565b9150611cc182611c80565b602082019050919050565b60006020820190508181036000830152611ce581611ca9565b905091905056fea26469706673582212207a00d138b359fa90f44a7fcf3f46b116c841591a449f9fc1a482c7de9a57ff4364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x57466EA EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x722227F2 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x68D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1524 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST STOP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x353 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE7572230 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST DUP3 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST SWAP2 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x285 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E1 DUP3 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0x34C SWAP1 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0x15D JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST LT ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x490 SWAP3 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH2 0x559 PUSH2 0xEC2 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x672 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH2 0x60F PUSH2 0xEC2 JUMP JUMPDEST CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH2 0x66B SWAP1 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0x5C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x695 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x69F PUSH1 0x0 PUSH2 0x10BA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x9CC JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA91B2E9F DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST DUP3 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST SWAP2 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x81C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x85E PUSH2 0xEC2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x87F DUP3 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9548E53 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x958 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x9C5 SWAP1 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0x6F4 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0xA14 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST LT ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA9 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH2 0xAF9 PUSH2 0xEC2 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB17 SWAP3 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST LT ISZERO PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB90 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0xBDF PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7B SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xEBC JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0xDCD PUSH2 0xEC2 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE79 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH2 0xEB5 SWAP1 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0xCE4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEF3 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF59 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6B DUP2 PUSH2 0x10BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xF7D DUP5 PUSH2 0x117E JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1031 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1025 JUMPI PUSH2 0x1024 PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xFDC JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1044 PUSH2 0x12D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1062 PUSH2 0xEC2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AF SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x11DC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1219 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x120F JUMPI PUSH2 0x120E PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1248 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x123E JUMPI PUSH2 0x123D PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1271 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1267 JUMPI PUSH2 0x1266 PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1296 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x128C JUMPI PUSH2 0x128B PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12B9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x12AF JUMPI PUSH2 0x12AE PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x12C8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F6 DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1313 DUP2 PUSH2 0x12ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1330 JUMPI PUSH2 0x132F PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133E DUP6 DUP3 DUP7 ADD PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x134F DUP6 DUP3 DUP7 ADD PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1384 DUP3 PUSH2 0x1359 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1394 DUP2 PUSH2 0x1379 JUMP JUMPDEST DUP2 EQ PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B1 DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x13DC JUMPI PUSH2 0x13DB PUSH2 0x13B7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13F9 JUMPI PUSH2 0x13F8 PUSH2 0x13BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1415 JUMPI PUSH2 0x1414 PUSH2 0x13C1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1438 JUMPI PUSH2 0x1437 PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1446 DUP9 DUP3 DUP10 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1457 DUP9 DUP3 DUP10 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1468 DUP9 DUP3 DUP10 ADD PUSH2 0x1304 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1489 JUMPI PUSH2 0x1488 PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH2 0x1495 DUP9 DUP3 DUP10 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D9 DUP2 PUSH2 0x14A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1503 DUP2 PUSH2 0x1379 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1548 DUP5 DUP3 DUP6 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42414E4B204D414E414745523A205269676874204944277320626F756E642069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73206C657373207468616E206C656674206F6E652E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BE PUSH1 0x35 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C9 DUP3 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15ED DUP2 PUSH2 0x15B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FD DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1618 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x12ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1657 DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x169A DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A5 DUP4 PUSH2 0x12E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16BD JUMPI PUSH2 0x16BC PUSH2 0x1660 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16D2 DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FC DUP5 DUP3 DUP6 ADD PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42544F543A205573657220616C726561647920697320616E206F776E6572206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6620746F6B656E20776974682049442000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176C PUSH1 0x30 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1777 DUP3 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x30 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17AB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C2 DUP3 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x17CC DUP2 DUP6 PUSH2 0x1705 JUMP JUMPDEST SWAP4 POP PUSH2 0x17DC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181E PUSH1 0x1 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1829 DUP3 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183F DUP3 PUSH2 0x175F JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 DUP5 PUSH2 0x17B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1856 DUP3 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187D DUP3 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x1887 DUP2 DUP6 PUSH2 0x1551 JUMP JUMPDEST SWAP4 POP PUSH2 0x1897 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST PUSH2 0x18A0 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18C5 DUP2 DUP5 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D8 DUP3 PUSH2 0x12E3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x190A JUMPI PUSH2 0x1909 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42544F433A20496E73756666696369656E7420616D6F756E74206F6620746F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E732E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1971 PUSH1 0x24 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x197C DUP3 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19A0 DUP2 PUSH2 0x1964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19BC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x19C9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x42544F433A20496E73756666696369656E7420616C6C6F77656420616D6F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620746F6B656E7320746F207370656E642E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2C PUSH1 0x35 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A37 DUP3 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A5B DUP2 PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x1A84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x1A91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15F4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAE DUP2 PUSH2 0x1A99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ACB DUP2 PUSH2 0x1AA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x12D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42544F543A20546F6B656E20776974682073756368204944206861736E277420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65787069726564207965742E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5A PUSH1 0x2C DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B65 DUP3 PUSH2 0x1AFE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B89 DUP2 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC PUSH1 0x26 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF7 DUP3 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1B DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 PUSH1 0x20 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC1 DUP3 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE5 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xD138B359FA90F44A7FCF3F46B116C841591A449F9FC1A482C7DE SWAP11 JUMPI SELFDESTRUCT NUMBER PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "658:2672:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:1007;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3151:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1955:1188:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;940:1007:8;1029:5;1018:7;:16;;1010:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1103:13;1146:15;1164:7;1146:25;;1141:323;1184:5;1173:7;:16;1141:323;;1226:11;;;;;;;;;;;:20;;;1247:7;1226:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1217:38;;;;;:::i;:::-;;;1292:11;;;;;;;;;;;:19;;;1312:7;1292:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1278:42;;:10;:42;;;;1419:25;1436:7;1419:16;:25::i;:::-;1350:100;;;;;;;;:::i;:::-;;;;;;;;;;;;;1270:182;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1191:9;;;;:::i;:::-;;;1141:323;;;;1524:5;1484:14;;;;;;;;;;;:24;;;1509:10;1484:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;1476:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1644:5;1589:14;;;;;;;;;;;:24;;;1614:10;1634:4;1589:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;1581:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;1718:14;;;;;;;;;;;:27;;;1746:10;1758:7;:5;:7::i;:::-;1767:5;1718:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1799:15;1817:7;1799:25;;1794:146;1837:5;1826:7;:16;1794:146;;1870:11;;;;;;;;;;;:28;;;1899:7;:5;:7::i;:::-;1908:10;1920:7;1870:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:9;;;;:::i;:::-;;;1794:146;;;;999:948;940:1007;;:::o;3151:176::-;3252:6;3278:41;;;3271:48;;3151:176;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1955:1188:8:-;1094:13:0;:11;:13::i;:::-;2036::8::1;2083:5;2072:7;:16;;2064:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2172:15;2190:7;2172:25;;2167:423;2210:5;2199:7;:16;2167:423;;2252:11;;;;;;;;;;;:21;;;2274:7;2252:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2243:39;;;;;:::i;:::-;;;2316:11;;;;;;;;;;;:19;;;2336:7;2316:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2305:39;;:7;:5;:7::i;:::-;:39;;;;2443:25;2460:7;2443:16;:25::i;:::-;2374:100;;;;;;;;:::i;:::-;;;;;;;;;;;;;2297:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2499:11;;;;;;;;;;;:21;;;2521:7;2499:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2491:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2217:9;;;;:::i;:::-;;;2167:423;;;;2647:5;2610:14;;;;;;;;;;;:24;;;2635:7;:5;:7::i;:::-;2610:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;2602:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;2764:5;2712:14;;;;;;;;;;;:24;;;2737:7;:5;:7::i;:::-;2754:4;2712:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;2704:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;2838:14;;;;;;;;;;;:27;;;2866:7;:5;:7::i;:::-;2875:11;;;;;;;;;;;:19;;;2895:7;2875:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2905:5;2838:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2937:15;2955:7;2937:25;;2932:204;2975:5;2964:7;:16;2932:204;;3008:11;;;;;;;;;;;:28;;;3037:11;;;;;;;;;;;:19;;;3057:7;3037:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3067:7;:5;:7::i;:::-;3076;3008:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3099:11;;;;;;;;;;;:16;;;3116:7;3099:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2982:9;;;;:::i;:::-;;;2932:204;;;;2025:1118;1955:1188:::0;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;415:696:5:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;9889:890:7:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;88:117:9:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:126::-;1207:7;1247:42;1240:5;1236:54;1225:65;;1170:126;;;:::o;1302:96::-;1339:7;1368:24;1386:5;1368:24;:::i;:::-;1357:35;;1302:96;;;:::o;1404:122::-;1477:24;1495:5;1477:24;:::i;:::-;1470:5;1467:35;1457:63;;1516:1;1513;1506:12;1457:63;1404:122;:::o;1532:139::-;1578:5;1616:6;1603:20;1594:29;;1632:33;1659:5;1632:33;:::i;:::-;1532:139;;;;:::o;1677:117::-;1786:1;1783;1776:12;1800:117;1909:1;1906;1899:12;1923:117;2032:1;2029;2022:12;2059:552;2116:8;2126:6;2176:3;2169:4;2161:6;2157:17;2153:27;2143:122;;2184:79;;:::i;:::-;2143:122;2297:6;2284:20;2274:30;;2327:18;2319:6;2316:30;2313:117;;;2349:79;;:::i;:::-;2313:117;2463:4;2455:6;2451:17;2439:29;;2517:3;2509:4;2501:6;2497:17;2487:8;2483:32;2480:41;2477:128;;;2524:79;;:::i;:::-;2477:128;2059:552;;;;;:::o;2617:963::-;2714:6;2722;2730;2738;2746;2795:3;2783:9;2774:7;2770:23;2766:33;2763:120;;;2802:79;;:::i;:::-;2763:120;2922:1;2947:53;2992:7;2983:6;2972:9;2968:22;2947:53;:::i;:::-;2937:63;;2893:117;3049:2;3075:53;3120:7;3111:6;3100:9;3096:22;3075:53;:::i;:::-;3065:63;;3020:118;3177:2;3203:53;3248:7;3239:6;3228:9;3224:22;3203:53;:::i;:::-;3193:63;;3148:118;3333:2;3322:9;3318:18;3305:32;3364:18;3356:6;3353:30;3350:117;;;3386:79;;:::i;:::-;3350:117;3499:64;3555:7;3546:6;3535:9;3531:22;3499:64;:::i;:::-;3481:82;;;;3276:297;2617:963;;;;;;;;:::o;3586:149::-;3622:7;3662:66;3655:5;3651:78;3640:89;;3586:149;;;:::o;3741:115::-;3826:23;3843:5;3826:23;:::i;:::-;3821:3;3814:36;3741:115;;:::o;3862:218::-;3953:4;3991:2;3980:9;3976:18;3968:26;;4004:69;4070:1;4059:9;4055:17;4046:6;4004:69;:::i;:::-;3862:218;;;;:::o;4086:118::-;4173:24;4191:5;4173:24;:::i;:::-;4168:3;4161:37;4086:118;;:::o;4210:222::-;4303:4;4341:2;4330:9;4326:18;4318:26;;4354:71;4422:1;4411:9;4407:17;4398:6;4354:71;:::i;:::-;4210:222;;;;:::o;4438:329::-;4497:6;4546:2;4534:9;4525:7;4521:23;4517:32;4514:119;;;4552:79;;:::i;:::-;4514:119;4672:1;4697:53;4742:7;4733:6;4722:9;4718:22;4697:53;:::i;:::-;4687:63;;4643:117;4438:329;;;;:::o;4773:169::-;4857:11;4891:6;4886:3;4879:19;4931:4;4926:3;4922:14;4907:29;;4773:169;;;;:::o;4948:240::-;5088:34;5084:1;5076:6;5072:14;5065:58;5157:23;5152:2;5144:6;5140:15;5133:48;4948:240;:::o;5194:366::-;5336:3;5357:67;5421:2;5416:3;5357:67;:::i;:::-;5350:74;;5433:93;5522:3;5433:93;:::i;:::-;5551:2;5546:3;5542:12;5535:19;;5194:366;;;:::o;5566:419::-;5732:4;5770:2;5759:9;5755:18;5747:26;;5819:9;5813:4;5809:20;5805:1;5794:9;5790:17;5783:47;5847:131;5973:4;5847:131;:::i;:::-;5839:139;;5566:419;;;:::o;5991:118::-;6078:24;6096:5;6078:24;:::i;:::-;6073:3;6066:37;5991:118;;:::o;6115:222::-;6208:4;6246:2;6235:9;6231:18;6223:26;;6259:71;6327:1;6316:9;6312:17;6303:6;6259:71;:::i;:::-;6115:222;;;;:::o;6343:143::-;6400:5;6431:6;6425:13;6416:22;;6447:33;6474:5;6447:33;:::i;:::-;6343:143;;;;:::o;6492:351::-;6562:6;6611:2;6599:9;6590:7;6586:23;6582:32;6579:119;;;6617:79;;:::i;:::-;6579:119;6737:1;6762:64;6818:7;6809:6;6798:9;6794:22;6762:64;:::i;:::-;6752:74;;6708:128;6492:351;;;;:::o;6849:180::-;6897:77;6894:1;6887:88;6994:4;6991:1;6984:15;7018:4;7015:1;7008:15;7035:191;7075:3;7094:20;7112:1;7094:20;:::i;:::-;7089:25;;7128:20;7146:1;7128:20;:::i;:::-;7123:25;;7171:1;7168;7164:9;7157:16;;7192:3;7189:1;7186:10;7183:36;;;7199:18;;:::i;:::-;7183:36;7035:191;;;;:::o;7232:143::-;7289:5;7320:6;7314:13;7305:22;;7336:33;7363:5;7336:33;:::i;:::-;7232:143;;;;:::o;7381:351::-;7451:6;7500:2;7488:9;7479:7;7475:23;7471:32;7468:119;;;7506:79;;:::i;:::-;7468:119;7626:1;7651:64;7707:7;7698:6;7687:9;7683:22;7651:64;:::i;:::-;7641:74;;7597:128;7381:351;;;;:::o;7738:148::-;7840:11;7877:3;7862:18;;7738:148;;;;:::o;7892:235::-;8032:34;8028:1;8020:6;8016:14;8009:58;8101:18;8096:2;8088:6;8084:15;8077:43;7892:235;:::o;8133:402::-;8293:3;8314:85;8396:2;8391:3;8314:85;:::i;:::-;8307:92;;8408:93;8497:3;8408:93;:::i;:::-;8526:2;8521:3;8517:12;8510:19;;8133:402;;;:::o;8541:99::-;8593:6;8627:5;8621:12;8611:22;;8541:99;;;:::o;8646:246::-;8727:1;8737:113;8751:6;8748:1;8745:13;8737:113;;;8836:1;8831:3;8827:11;8821:18;8817:1;8812:3;8808:11;8801:39;8773:2;8770:1;8766:10;8761:15;;8737:113;;;8884:1;8875:6;8870:3;8866:16;8859:27;8708:184;8646:246;;;:::o;8898:390::-;9004:3;9032:39;9065:5;9032:39;:::i;:::-;9087:89;9169:6;9164:3;9087:89;:::i;:::-;9080:96;;9185:65;9243:6;9238:3;9231:4;9224:5;9220:16;9185:65;:::i;:::-;9275:6;9270:3;9266:16;9259:23;;9008:280;8898:390;;;;:::o;9294:151::-;9434:3;9430:1;9422:6;9418:14;9411:27;9294:151;:::o;9451:400::-;9611:3;9632:84;9714:1;9709:3;9632:84;:::i;:::-;9625:91;;9725:93;9814:3;9725:93;:::i;:::-;9843:1;9838:3;9834:11;9827:18;;9451:400;;;:::o;9857:807::-;10191:3;10213:148;10357:3;10213:148;:::i;:::-;10206:155;;10378:95;10469:3;10460:6;10378:95;:::i;:::-;10371:102;;10490:148;10634:3;10490:148;:::i;:::-;10483:155;;10655:3;10648:10;;9857:807;;;;:::o;10670:102::-;10711:6;10762:2;10758:7;10753:2;10746:5;10742:14;10738:28;10728:38;;10670:102;;;:::o;10778:377::-;10866:3;10894:39;10927:5;10894:39;:::i;:::-;10949:71;11013:6;11008:3;10949:71;:::i;:::-;10942:78;;11029:65;11087:6;11082:3;11075:4;11068:5;11064:16;11029:65;:::i;:::-;11119:29;11141:6;11119:29;:::i;:::-;11114:3;11110:39;11103:46;;10870:285;10778:377;;;;:::o;11161:313::-;11274:4;11312:2;11301:9;11297:18;11289:26;;11361:9;11355:4;11351:20;11347:1;11336:9;11332:17;11325:47;11389:78;11462:4;11453:6;11389:78;:::i;:::-;11381:86;;11161:313;;;;:::o;11480:233::-;11519:3;11542:24;11560:5;11542:24;:::i;:::-;11533:33;;11588:66;11581:5;11578:77;11575:103;;11658:18;;:::i;:::-;11575:103;11705:1;11698:5;11694:13;11687:20;;11480:233;;;:::o;11719:223::-;11859:34;11855:1;11847:6;11843:14;11836:58;11928:6;11923:2;11915:6;11911:15;11904:31;11719:223;:::o;11948:366::-;12090:3;12111:67;12175:2;12170:3;12111:67;:::i;:::-;12104:74;;12187:93;12276:3;12187:93;:::i;:::-;12305:2;12300:3;12296:12;12289:19;;11948:366;;;:::o;12320:419::-;12486:4;12524:2;12513:9;12509:18;12501:26;;12573:9;12567:4;12563:20;12559:1;12548:9;12544:17;12537:47;12601:131;12727:4;12601:131;:::i;:::-;12593:139;;12320:419;;;:::o;12745:332::-;12866:4;12904:2;12893:9;12889:18;12881:26;;12917:71;12985:1;12974:9;12970:17;12961:6;12917:71;:::i;:::-;12998:72;13066:2;13055:9;13051:18;13042:6;12998:72;:::i;:::-;12745:332;;;;;:::o;13083:240::-;13223:34;13219:1;13211:6;13207:14;13200:58;13292:23;13287:2;13279:6;13275:15;13268:48;13083:240;:::o;13329:366::-;13471:3;13492:67;13556:2;13551:3;13492:67;:::i;:::-;13485:74;;13568:93;13657:3;13568:93;:::i;:::-;13686:2;13681:3;13677:12;13670:19;;13329:366;;;:::o;13701:419::-;13867:4;13905:2;13894:9;13890:18;13882:26;;13954:9;13948:4;13944:20;13940:1;13929:9;13925:17;13918:47;13982:131;14108:4;13982:131;:::i;:::-;13974:139;;13701:419;;;:::o;14126:442::-;14275:4;14313:2;14302:9;14298:18;14290:26;;14326:71;14394:1;14383:9;14379:17;14370:6;14326:71;:::i;:::-;14407:72;14475:2;14464:9;14460:18;14451:6;14407:72;:::i;:::-;14489;14557:2;14546:9;14542:18;14533:6;14489:72;:::i;:::-;14126:442;;;;;;:::o;14574:90::-;14608:7;14651:5;14644:13;14637:21;14626:32;;14574:90;;;:::o;14670:116::-;14740:21;14755:5;14740:21;:::i;:::-;14733:5;14730:32;14720:60;;14776:1;14773;14766:12;14720:60;14670:116;:::o;14792:137::-;14846:5;14877:6;14871:13;14862:22;;14893:30;14917:5;14893:30;:::i;:::-;14792:137;;;;:::o;14935:345::-;15002:6;15051:2;15039:9;15030:7;15026:23;15022:32;15019:119;;;15057:79;;:::i;:::-;15019:119;15177:1;15202:61;15255:7;15246:6;15235:9;15231:22;15202:61;:::i;:::-;15192:71;;15148:125;14935:345;;;;:::o;15286:231::-;15426:34;15422:1;15414:6;15410:14;15403:58;15495:14;15490:2;15482:6;15478:15;15471:39;15286:231;:::o;15523:366::-;15665:3;15686:67;15750:2;15745:3;15686:67;:::i;:::-;15679:74;;15762:93;15851:3;15762:93;:::i;:::-;15880:2;15875:3;15871:12;15864:19;;15523:366;;;:::o;15895:419::-;16061:4;16099:2;16088:9;16084:18;16076:26;;16148:9;16142:4;16138:20;16134:1;16123:9;16119:17;16112:47;16176:131;16302:4;16176:131;:::i;:::-;16168:139;;15895:419;;;:::o;16320:225::-;16460:34;16456:1;16448:6;16444:14;16437:58;16529:8;16524:2;16516:6;16512:15;16505:33;16320:225;:::o;16551:366::-;16693:3;16714:67;16778:2;16773:3;16714:67;:::i;:::-;16707:74;;16790:93;16879:3;16790:93;:::i;:::-;16908:2;16903:3;16899:12;16892:19;;16551:366;;;:::o;16923:419::-;17089:4;17127:2;17116:9;17112:18;17104:26;;17176:9;17170:4;17166:20;17162:1;17151:9;17147:17;17140:47;17204:131;17330:4;17204:131;:::i;:::-;17196:139;;16923:419;;;:::o;17348:180::-;17396:77;17393:1;17386:88;17493:4;17490:1;17483:15;17517:4;17514:1;17507:15;17534:180;17582:77;17579:1;17572:88;17679:4;17676:1;17669:15;17703:4;17700:1;17693:15;17720:182;17860:34;17856:1;17848:6;17844:14;17837:58;17720:182;:::o;17908:366::-;18050:3;18071:67;18135:2;18130:3;18071:67;:::i;:::-;18064:74;;18147:93;18236:3;18147:93;:::i;:::-;18265:2;18260:3;18256:12;18249:19;;17908:366;;;:::o;18280:419::-;18446:4;18484:2;18473:9;18469:18;18461:26;;18533:9;18527:4;18523:20;18519:1;18508:9;18504:17;18497:47;18561:131;18687:4;18561:131;:::i;:::-;18553:139;;18280:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1491600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyToken(uint256,uint256)": "infinite",
								"expireToken(uint256,uint256)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2588",
								"renounceOwnership()": "30420",
								"transferOwnership(address)": "30832"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 658,
									"end": 3330,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 932,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 932,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 932,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 932,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 932,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 792,
									"end": 932,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 792,
									"end": 932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 792,
									"end": 932,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 872,
									"end": 880,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 848,
									"end": 862,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 848,
									"end": 862,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 848,
									"end": 881,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 848,
									"end": 881,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 848,
									"end": 881,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 848,
									"end": 881,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 848,
									"end": 881,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 892,
									"end": 903,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 892,
									"end": 903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 924,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 892,
									"end": 924,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 892,
									"end": 924,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 892,
									"end": 924,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 892,
									"end": 924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 792,
									"end": 932,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 3330,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a00d138b359fa90f44a7fcf3f46b116c841591a449f9fc1a482c7de9a57ff4364736f6c63430008120033",
									".code": [
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "57466EA"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "722227F2"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 3330,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 940,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 940,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3151,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3151,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3151,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1955,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1955,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1029,
											"end": 1034,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1034,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1034,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1010,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1010,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1161,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1146,
											"end": 1171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1146,
											"end": 1171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "PUSH",
											"source": 8,
											"value": "E7572230"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1226,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1217,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 1312,
											"end": 1319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1292,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1292,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1278,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1288,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1278,
											"end": 1320,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1320,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1320,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1419,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1444,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1419,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1350,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1270,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1191,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 1509,
											"end": 1519,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1484,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1484,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1529,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1529,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1476,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1476,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1649,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 1614,
											"end": 1624,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1634,
											"end": 1638,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1589,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1589,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1589,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1649,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1649,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1581,
											"end": 1707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1581,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1746,
											"end": 1756,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1758,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1758,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1772,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1718,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1718,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1824,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1842,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1898,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1898,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1898,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1899,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1899,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1908,
											"end": 1918,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1870,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1844,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 999,
											"end": 1947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 940,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3319,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 3278,
											"end": 3319,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3278,
											"end": 3319,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2079,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2088,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2064,
											"end": 2146,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2064,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2197,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2215,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2215,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A91B2E9F"
										},
										{
											"begin": 2274,
											"end": 2281,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2252,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2252,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2243,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 2336,
											"end": 2343,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2344,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2316,
											"end": 2344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2316,
											"end": 2344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2305,
											"end": 2344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2305,
											"end": 2310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2305,
											"end": 2312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2305,
											"end": 2312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2305,
											"end": 2344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2344,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2460,
											"end": 2467,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2443,
											"end": 2468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2443,
											"end": 2468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2374,
											"end": 2474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2297,
											"end": 2476,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2476,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2499,
											"end": 2510,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2499,
											"end": 2520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D9548E53"
										},
										{
											"begin": 2521,
											"end": 2528,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2499,
											"end": 2529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2499,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2491,
											"end": 2578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2491,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2217,
											"end": 2226,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2634,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2635,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2635,
											"end": 2640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2635,
											"end": 2642,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2635,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2610,
											"end": 2643,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2610,
											"end": 2643,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2610,
											"end": 2643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2652,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2602,
											"end": 2693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2602,
											"end": 2693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 2737,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2737,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2737,
											"end": 2744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2737,
											"end": 2744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2737,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2758,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2712,
											"end": 2760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2760,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2712,
											"end": 2760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2712,
											"end": 2760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2769,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2769,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2704,
											"end": 2827,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2704,
											"end": 2827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2838,
											"end": 2865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 2866,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2866,
											"end": 2871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2866,
											"end": 2873,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2866,
											"end": 2873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2875,
											"end": 2903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2875,
											"end": 2903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2905,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2838,
											"end": 2911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2838,
											"end": 2911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2937,
											"end": 2952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2962,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2937,
											"end": 2962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2937,
											"end": 2962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2980,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3019,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3037,
											"end": 3048,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3037,
											"end": 3056,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 3057,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3037,
											"end": 3065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3037,
											"end": 3065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3067,
											"end": 3072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3067,
											"end": 3074,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3074,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3067,
											"end": 3074,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3083,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3008,
											"end": 3084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 3116,
											"end": 3123,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3124,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2982,
											"end": 2991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 3136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 3143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 572,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 726,
											"end": 761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 958,
											"end": 966,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 932,
											"end": 935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1003,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1041,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "PUSH",
											"source": 7,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "PUSH",
											"source": 7,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10052,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 7,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 7,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10164,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 7,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 7,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10276,
											"end": 10291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 7,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 7,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10387,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10496,
											"end": 10510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10605,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1289,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1290,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1290,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1170,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1368,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1404,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 1495,
											"end": 1500,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1477,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1502,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1457,
											"end": 1520,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1518,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1457,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1623,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1659,
											"end": 1664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1632,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1794,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1677,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 1788,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1917,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1800,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 2040,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1923,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2034,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2611,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2059,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2116,
											"end": 2124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2179,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2173,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2161,
											"end": 2167,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2180,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2143,
											"end": 2265,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2184,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2184,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2263,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2184,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2265,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2143,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2304,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2346,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2430,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2313,
											"end": 2430,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2349,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2349,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2428,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2349,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2430,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2313,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2468,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2439,
											"end": 2468,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2439,
											"end": 2468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2513,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2497,
											"end": 2514,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2495,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2521,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2605,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2477,
											"end": 2605,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2524,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2524,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2603,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2524,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2605,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2477,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2611,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2611,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2798,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2774,
											"end": 2781,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2793,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2883,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 2763,
											"end": 2883,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2802,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2802,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2802,
											"end": 2881,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2802,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2883,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 2763,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2947,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 3000,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2947,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3000,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3000,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3010,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3120,
											"end": 3127,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3111,
											"end": 3117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3075,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3128,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3177,
											"end": 3179,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3203,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3248,
											"end": 3255,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3203,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3256,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3203,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3256,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3335,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3322,
											"end": 3331,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3305,
											"end": 3337,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3356,
											"end": 3362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3383,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3467,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3350,
											"end": 3467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3386,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3386,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3465,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3386,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3467,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3350,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3555,
											"end": 3562,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3499,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3563,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3499,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3563,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3563,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 3580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3735,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3586,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3622,
											"end": 3629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3728,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3655,
											"end": 3660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3856,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3741,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3843,
											"end": 3848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3826,
											"end": 3849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3826,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 4080,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3862,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 3989,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 3994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 3994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4070,
											"end": 4071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4004,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4073,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4004,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 4080,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 4080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 4080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 4080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 4080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4204,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4086,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4191,
											"end": 4196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 4173,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4197,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4173,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4432,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4210,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4318,
											"end": 4344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4318,
											"end": 4344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4422,
											"end": 4423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4420,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4404,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4354,
											"end": 4425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4767,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4438,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4532,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4544,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4633,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4514,
											"end": 4633,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4552,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 4552,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 4631,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4552,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4633,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4514,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4731,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4697,
											"end": 4750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4687,
											"end": 4750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4687,
											"end": 4750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4643,
											"end": 4760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4767,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4942,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4773,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 4889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4879,
											"end": 4898,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4926,
											"end": 4929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4907,
											"end": 4936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4907,
											"end": 4936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4942,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4942,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4948,
											"end": 5188,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4948,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5088,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "42414E4B204D414E414745523A205269676874204944277320626F756E642069"
										},
										{
											"begin": 5084,
											"end": 5085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5072,
											"end": 5086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5123,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5180,
											"name": "PUSH",
											"source": 9,
											"value": "73206C657373207468616E206C656674206F6E652E0000000000000000000000"
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5150,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4948,
											"end": 5188,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4948,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5560,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5194,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "PUSH",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5416,
											"end": 5419,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5357,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5350,
											"end": 5424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5350,
											"end": 5424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 5522,
											"end": 5525,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5433,
											"end": 5526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5526,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 5433,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5551,
											"end": 5553,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5549,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5542,
											"end": 5554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5985,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5566,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5732,
											"end": 5736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5772,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5755,
											"end": 5773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5803,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5790,
											"end": 5807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5783,
											"end": 5830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5973,
											"end": 5977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5847,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5978,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5847,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5839,
											"end": 5978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5839,
											"end": 5978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6109,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5991,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6078,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 6096,
											"end": 6101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6078,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 6078,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6078,
											"end": 6102,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 6078,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6076,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6337,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6115,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6259,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 6327,
											"end": 6328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6303,
											"end": 6309,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6259,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 6259,
											"end": 6330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6259,
											"end": 6330,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 6259,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6337,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6337,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6115,
											"end": 6337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6486,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6343,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6425,
											"end": 6438,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6447,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6474,
											"end": 6479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6447,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6447,
											"end": 6480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6447,
											"end": 6480,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6447,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6486,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6486,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6843,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6492,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6608,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6590,
											"end": 6597,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6609,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6614,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6698,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6579,
											"end": 6698,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6617,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6698,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6579,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6818,
											"end": 6825,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6798,
											"end": 6807,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 6816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6762,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6762,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6843,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 7029,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6849,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 6974,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6894,
											"end": 6895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 6998,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6991,
											"end": 6992,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6984,
											"end": 6999,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7226,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7035,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7094,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7114,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 7094,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7089,
											"end": 7114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7089,
											"end": 7114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7128,
											"end": 7148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7148,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 7128,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7123,
											"end": 7148,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7123,
											"end": 7148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7168,
											"end": 7169,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7173,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7190,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7196,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7219,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 7183,
											"end": 7219,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7199,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7219,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 7183,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7226,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7226,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7232,
											"end": 7375,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7232,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7289,
											"end": 7294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 7363,
											"end": 7368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 7336,
											"end": 7369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7232,
											"end": 7375,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7232,
											"end": 7375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7232,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7232,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7232,
											"end": 7375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7732,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 7381,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7451,
											"end": 7457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7500,
											"end": 7502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7488,
											"end": 7497,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7503,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7587,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 7468,
											"end": 7587,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 7506,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7506,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7585,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 7506,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7587,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 7468,
											"end": 7587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7626,
											"end": 7627,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 7707,
											"end": 7714,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 7704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7687,
											"end": 7696,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7705,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7651,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7715,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 7651,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7641,
											"end": 7715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7641,
											"end": 7715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7732,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7732,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7886,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7738,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7880,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7886,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7886,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 8127,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7892,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "PUSH",
											"source": 9,
											"value": "42544F543A205573657220616C726561647920697320616E206F776E6572206F"
										},
										{
											"begin": 8028,
											"end": 8029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "PUSH",
											"source": 9,
											"value": "6620746F6B656E20776974682049442000000000000000000000000000000000"
										},
										{
											"begin": 8096,
											"end": 8098,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8099,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 8127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 8127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8535,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8133,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8293,
											"end": 8296,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 8396,
											"end": 8398,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 8391,
											"end": 8394,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 8314,
											"end": 8399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8399,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 8314,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 8497,
											"end": 8500,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 8408,
											"end": 8501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8501,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 8408,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8526,
											"end": 8528,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 8521,
											"end": 8524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8517,
											"end": 8529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8510,
											"end": 8529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8510,
											"end": 8529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8640,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 8541,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8621,
											"end": 8633,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8611,
											"end": 8633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8892,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 8646,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8727,
											"end": 8728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8751,
											"end": 8757,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 8758,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8836,
											"end": 8837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 8834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8827,
											"end": 8838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 8815,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8808,
											"end": 8819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8775,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8770,
											"end": 8771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8766,
											"end": 8776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 8737,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8881,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 8873,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8859,
											"end": 8886,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8708,
											"end": 8892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 9288,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 8898,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9032,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9065,
											"end": 9070,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9032,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 9032,
											"end": 9071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9032,
											"end": 9071,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9032,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9087,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9169,
											"end": 9175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9167,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9087,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 9087,
											"end": 9176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9087,
											"end": 9176,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9087,
											"end": 9176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9080,
											"end": 9176,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9080,
											"end": 9176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 9243,
											"end": 9249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9238,
											"end": 9241,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9229,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9220,
											"end": 9236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 9185,
											"end": 9250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9273,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9008,
											"end": 9288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 9288,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 9288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 9288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 9288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8898,
											"end": 9288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9445,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 9294,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9437,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9430,
											"end": 9431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9418,
											"end": 9432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9411,
											"end": 9438,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9451,
											"end": 9851,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 9451,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9611,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9714,
											"end": 9715,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9709,
											"end": 9712,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 9632,
											"end": 9716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9716,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9632,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9625,
											"end": 9716,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9625,
											"end": 9716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9725,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 9814,
											"end": 9817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9725,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 9725,
											"end": 9818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9725,
											"end": 9818,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 9725,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9843,
											"end": 9844,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9838,
											"end": 9841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9834,
											"end": 9845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9451,
											"end": 9851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9451,
											"end": 9851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9451,
											"end": 9851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9451,
											"end": 9851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 10664,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 9857,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10213,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10357,
											"end": 10360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10213,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10213,
											"end": 10361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10213,
											"end": 10361,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10213,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10361,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10206,
											"end": 10361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10378,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10469,
											"end": 10472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10378,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 10378,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10378,
											"end": 10473,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10378,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10371,
											"end": 10473,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10371,
											"end": 10473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10634,
											"end": 10637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10490,
											"end": 10638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10638,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10490,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10638,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10655,
											"end": 10658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 10664,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 10664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 10664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 10664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9857,
											"end": 10664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10772,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10670,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10764,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10758,
											"end": 10765,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10753,
											"end": 10755,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10746,
											"end": 10751,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10742,
											"end": 10756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 11155,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10778,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10866,
											"end": 10869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10894,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10927,
											"end": 10932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10894,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10894,
											"end": 10933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10894,
											"end": 10933,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10894,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 11013,
											"end": 11019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11008,
											"end": 11011,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 10949,
											"end": 11020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10942,
											"end": 11020,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10942,
											"end": 11020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11082,
											"end": 11085,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11079,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11068,
											"end": 11073,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11064,
											"end": 11080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 11029,
											"end": 11094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11094,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 11029,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 11141,
											"end": 11147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 11119,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11114,
											"end": 11117,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11103,
											"end": 11149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11103,
											"end": 11149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10870,
											"end": 11155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 11155,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 11155,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 11155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 11155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11474,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 11161,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11274,
											"end": 11278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11314,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11301,
											"end": 11310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11361,
											"end": 11370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11349,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11389,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 11462,
											"end": 11466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11453,
											"end": 11459,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11389,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 11389,
											"end": 11467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11389,
											"end": 11467,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 11389,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11381,
											"end": 11467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11381,
											"end": 11467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11474,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11474,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11713,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11480,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11519,
											"end": 11522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11560,
											"end": 11565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11542,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 11542,
											"end": 11566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11542,
											"end": 11566,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11542,
											"end": 11566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11533,
											"end": 11566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11533,
											"end": 11566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11654,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11581,
											"end": 11586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11655,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11575,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11575,
											"end": 11678,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 11658,
											"end": 11676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11575,
											"end": 11678,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11575,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11706,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11698,
											"end": 11703,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11687,
											"end": 11707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11687,
											"end": 11707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11719,
											"end": 11942,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 11719,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11859,
											"end": 11893,
											"name": "PUSH",
											"source": 9,
											"value": "42544F433A20496E73756666696369656E7420616D6F756E74206F6620746F6B"
										},
										{
											"begin": 11855,
											"end": 11856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11843,
											"end": 11857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11836,
											"end": 11894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11928,
											"end": 11934,
											"name": "PUSH",
											"source": 9,
											"value": "656E732E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11923,
											"end": 11925,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11915,
											"end": 11921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11911,
											"end": 11926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11904,
											"end": 11935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11719,
											"end": 11942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11719,
											"end": 11942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12111,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12175,
											"end": 12177,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12170,
											"end": 12173,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12111,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 12111,
											"end": 12178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12111,
											"end": 12178,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12111,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12104,
											"end": 12178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12104,
											"end": 12178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12187,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12276,
											"end": 12279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12187,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 12187,
											"end": 12280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12187,
											"end": 12280,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12187,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12305,
											"end": 12307,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12300,
											"end": 12303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12296,
											"end": 12308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12289,
											"end": 12308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12289,
											"end": 12308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11948,
											"end": 12314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11948,
											"end": 12314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12486,
											"end": 12490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12524,
											"end": 12526,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12513,
											"end": 12522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12509,
											"end": 12527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12501,
											"end": 12527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12501,
											"end": 12527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12567,
											"end": 12571,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12563,
											"end": 12583,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12559,
											"end": 12560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12548,
											"end": 12557,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12544,
											"end": 12561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12584,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 12727,
											"end": 12731,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 12601,
											"end": 12732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 12732,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 12601,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12593,
											"end": 12732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12593,
											"end": 12732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12745,
											"end": 13077,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 12745,
											"end": 13077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12866,
											"end": 12870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12904,
											"end": 12906,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12893,
											"end": 12902,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12889,
											"end": 12907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12881,
											"end": 12907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12881,
											"end": 12907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12917,
											"end": 12988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 12985,
											"end": 12986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12970,
											"end": 12987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 12967,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12917,
											"end": 12988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 12917,
											"end": 12988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12917,
											"end": 12988,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 12917,
											"end": 12988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 13066,
											"end": 13068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13055,
											"end": 13064,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13048,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 12998,
											"end": 13070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13070,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 12998,
											"end": 13070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12745,
											"end": 13077,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12745,
											"end": 13077,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12745,
											"end": 13077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12745,
											"end": 13077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12745,
											"end": 13077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12745,
											"end": 13077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13083,
											"end": 13323,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 13083,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13223,
											"end": 13257,
											"name": "PUSH",
											"source": 9,
											"value": "42544F433A20496E73756666696369656E7420616C6C6F77656420616D6F756E"
										},
										{
											"begin": 13219,
											"end": 13220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13211,
											"end": 13217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13207,
											"end": 13221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13200,
											"end": 13258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13292,
											"end": 13315,
											"name": "PUSH",
											"source": 9,
											"value": "74206F6620746F6B656E7320746F207370656E642E0000000000000000000000"
										},
										{
											"begin": 13287,
											"end": 13289,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13279,
											"end": 13285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13275,
											"end": 13290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13268,
											"end": 13316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13083,
											"end": 13323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13083,
											"end": 13323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13471,
											"end": 13474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13492,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 13556,
											"end": 13558,
											"name": "PUSH",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 13551,
											"end": 13554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 13492,
											"end": 13559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13559,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 13492,
											"end": 13559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13485,
											"end": 13559,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13485,
											"end": 13559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 13657,
											"end": 13660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 13568,
											"end": 13661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13688,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13681,
											"end": 13684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13677,
											"end": 13689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13670,
											"end": 13689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13670,
											"end": 13689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13329,
											"end": 13695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13867,
											"end": 13871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13905,
											"end": 13907,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13894,
											"end": 13903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13890,
											"end": 13908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13882,
											"end": 13908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13882,
											"end": 13908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13954,
											"end": 13963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 13952,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13944,
											"end": 13964,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13940,
											"end": 13941,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13938,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13925,
											"end": 13942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13918,
											"end": 13965,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13982,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 14108,
											"end": 14112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13982,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13982,
											"end": 14113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13982,
											"end": 14113,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 13982,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13974,
											"end": 14113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 14120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14568,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 14126,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14275,
											"end": 14279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14313,
											"end": 14315,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14302,
											"end": 14311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14298,
											"end": 14316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 14394,
											"end": 14395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 14392,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 14396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14370,
											"end": 14376,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 14326,
											"end": 14397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14397,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 14326,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14407,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 14475,
											"end": 14477,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14464,
											"end": 14473,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14460,
											"end": 14478,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14451,
											"end": 14457,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14407,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 14407,
											"end": 14479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14407,
											"end": 14479,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 14407,
											"end": 14479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14489,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 14557,
											"end": 14559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14546,
											"end": 14555,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14533,
											"end": 14539,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14489,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 14489,
											"end": 14561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14489,
											"end": 14561,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 14489,
											"end": 14561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14568,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14568,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14664,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 14574,
											"end": 14664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14608,
											"end": 14615,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14644,
											"end": 14657,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14637,
											"end": 14658,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14670,
											"end": 14786,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14670,
											"end": 14786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14740,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 14755,
											"end": 14760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14740,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 14740,
											"end": 14761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14740,
											"end": 14761,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 14740,
											"end": 14761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14733,
											"end": 14738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 14762,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14720,
											"end": 14780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 14720,
											"end": 14780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14773,
											"end": 14774,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14766,
											"end": 14778,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14720,
											"end": 14780,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 14720,
											"end": 14780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14670,
											"end": 14786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14670,
											"end": 14786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14929,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 14792,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14846,
											"end": 14851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14883,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14871,
											"end": 14884,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14862,
											"end": 14884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14862,
											"end": 14884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14893,
											"end": 14923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 14917,
											"end": 14922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14893,
											"end": 14923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14893,
											"end": 14923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14893,
											"end": 14923,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 14893,
											"end": 14923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14929,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14929,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 15280,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 14935,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15002,
											"end": 15008,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15051,
											"end": 15053,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15039,
											"end": 15048,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15030,
											"end": 15037,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15026,
											"end": 15049,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15138,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 15019,
											"end": 15138,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15057,
											"end": 15136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 15057,
											"end": 15136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 15057,
											"end": 15136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15057,
											"end": 15136,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 15057,
											"end": 15136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15138,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 15019,
											"end": 15138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15177,
											"end": 15178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15202,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 15255,
											"end": 15262,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15246,
											"end": 15252,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15235,
											"end": 15244,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15231,
											"end": 15253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15202,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 15202,
											"end": 15263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15202,
											"end": 15263,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 15202,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15192,
											"end": 15263,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15192,
											"end": 15263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15148,
											"end": 15273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 15280,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 15280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 15280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 15280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 15280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15286,
											"end": 15517,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 15286,
											"end": 15517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15426,
											"end": 15460,
											"name": "PUSH",
											"source": 9,
											"value": "42544F543A20546F6B656E20776974682073756368204944206861736E277420"
										},
										{
											"begin": 15422,
											"end": 15423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15414,
											"end": 15420,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15410,
											"end": 15424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15403,
											"end": 15461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15495,
											"end": 15509,
											"name": "PUSH",
											"source": 9,
											"value": "65787069726564207965742E0000000000000000000000000000000000000000"
										},
										{
											"begin": 15490,
											"end": 15492,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15482,
											"end": 15488,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15471,
											"end": 15510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15286,
											"end": 15517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15286,
											"end": 15517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15523,
											"end": 15889,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 15523,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15665,
											"end": 15668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15686,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 15750,
											"end": 15752,
											"name": "PUSH",
											"source": 9,
											"value": "2C"
										},
										{
											"begin": 15745,
											"end": 15748,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15686,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 15686,
											"end": 15753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15686,
											"end": 15753,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 15686,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15679,
											"end": 15753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15679,
											"end": 15753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15762,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 15851,
											"end": 15854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15762,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 15762,
											"end": 15855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15762,
											"end": 15855,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 15762,
											"end": 15855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15880,
											"end": 15882,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15875,
											"end": 15878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15871,
											"end": 15883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15864,
											"end": 15883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15864,
											"end": 15883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15523,
											"end": 15889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15523,
											"end": 15889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15523,
											"end": 15889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15523,
											"end": 15889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15895,
											"end": 16314,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 15895,
											"end": 16314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16061,
											"end": 16065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16099,
											"end": 16101,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16088,
											"end": 16097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16084,
											"end": 16102,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16102,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16148,
											"end": 16157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16138,
											"end": 16158,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16134,
											"end": 16135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16123,
											"end": 16132,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16119,
											"end": 16136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16112,
											"end": 16159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16176,
											"end": 16307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16302,
											"end": 16306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16176,
											"end": 16307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 16176,
											"end": 16307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16176,
											"end": 16307,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 16176,
											"end": 16307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16168,
											"end": 16307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16168,
											"end": 16307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15895,
											"end": 16314,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15895,
											"end": 16314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15895,
											"end": 16314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15895,
											"end": 16314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16320,
											"end": 16545,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 16320,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16460,
											"end": 16494,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16456,
											"end": 16457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16448,
											"end": 16454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16444,
											"end": 16458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16437,
											"end": 16495,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16529,
											"end": 16537,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16524,
											"end": 16526,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16516,
											"end": 16522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16512,
											"end": 16527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16505,
											"end": 16538,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16320,
											"end": 16545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16320,
											"end": 16545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16551,
											"end": 16917,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 16551,
											"end": 16917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16693,
											"end": 16696,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16714,
											"end": 16781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 16778,
											"end": 16780,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 16773,
											"end": 16776,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16714,
											"end": 16781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 16714,
											"end": 16781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16714,
											"end": 16781,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 16714,
											"end": 16781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16707,
											"end": 16781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16707,
											"end": 16781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16790,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 16879,
											"end": 16882,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16790,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 16790,
											"end": 16883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16790,
											"end": 16883,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 16790,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 16910,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16903,
											"end": 16906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16899,
											"end": 16911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16892,
											"end": 16911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16892,
											"end": 16911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16551,
											"end": 16917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16551,
											"end": 16917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16551,
											"end": 16917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16551,
											"end": 16917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16923,
											"end": 17342,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 16923,
											"end": 17342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17089,
											"end": 17093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17127,
											"end": 17129,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17116,
											"end": 17125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17112,
											"end": 17130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17104,
											"end": 17130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17104,
											"end": 17130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17176,
											"end": 17185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17166,
											"end": 17186,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17162,
											"end": 17163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17151,
											"end": 17160,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17147,
											"end": 17164,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17140,
											"end": 17187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17204,
											"end": 17335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 17330,
											"end": 17334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17204,
											"end": 17335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 17204,
											"end": 17335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17204,
											"end": 17335,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 17204,
											"end": 17335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17196,
											"end": 17335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17196,
											"end": 17335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16923,
											"end": 17342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16923,
											"end": 17342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16923,
											"end": 17342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16923,
											"end": 17342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17348,
											"end": 17528,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 17348,
											"end": 17528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17396,
											"end": 17473,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17393,
											"end": 17394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17386,
											"end": 17474,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17493,
											"end": 17497,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 17490,
											"end": 17491,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17483,
											"end": 17498,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17517,
											"end": 17521,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17514,
											"end": 17515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17507,
											"end": 17522,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17714,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 17534,
											"end": 17714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17582,
											"end": 17659,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17579,
											"end": 17580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17572,
											"end": 17660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17679,
											"end": 17683,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 17676,
											"end": 17677,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17669,
											"end": 17684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17703,
											"end": 17707,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17700,
											"end": 17701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17693,
											"end": 17708,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17720,
											"end": 17902,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 17720,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17860,
											"end": 17894,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17856,
											"end": 17857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17848,
											"end": 17854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17844,
											"end": 17858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17837,
											"end": 17895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17720,
											"end": 17902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17720,
											"end": 17902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17908,
											"end": 18274,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 17908,
											"end": 18274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18050,
											"end": 18053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18071,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 18135,
											"end": 18137,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18130,
											"end": 18133,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18071,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 18071,
											"end": 18138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18071,
											"end": 18138,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 18071,
											"end": 18138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18064,
											"end": 18138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18064,
											"end": 18138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 18236,
											"end": 18239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 18147,
											"end": 18240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18240,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 18147,
											"end": 18240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18265,
											"end": 18267,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18260,
											"end": 18263,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18256,
											"end": 18268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18249,
											"end": 18268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18249,
											"end": 18268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17908,
											"end": 18274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17908,
											"end": 18274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17908,
											"end": 18274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17908,
											"end": 18274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18280,
											"end": 18699,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 18280,
											"end": 18699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18446,
											"end": 18450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18484,
											"end": 18486,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18473,
											"end": 18482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18469,
											"end": 18487,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18461,
											"end": 18487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18461,
											"end": 18487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18533,
											"end": 18542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18527,
											"end": 18531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18543,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18519,
											"end": 18520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18508,
											"end": 18517,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18504,
											"end": 18521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18497,
											"end": 18544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18561,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 18687,
											"end": 18691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18561,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 18561,
											"end": 18692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18561,
											"end": 18692,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 18561,
											"end": 18692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18553,
											"end": 18692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18553,
											"end": 18692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18280,
											"end": 18699,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18280,
											"end": 18699,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18280,
											"end": 18699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18280,
											"end": 18699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/BTOFAManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyToken(uint256,uint256)": "057466ea",
							"expireToken(uint256,uint256)": "722227f2",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endId\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endId\",\"type\":\"uint256\"}],\"name\":\"expireToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BTOFAManager.sol\":\"BankManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/BTOFAManager.sol\":{\"keccak256\":\"0x05cadb96863ce0fcd46ebf8b6d4a3a67a7b06eaa1e4139fac365950ed4f378eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c72002c173c4d30a8c2e408be2f9f217103e29bae46361276bebecfa67135ba\",\"dweb:/ipfs/QmbZFG8n7vPjEZEh9edxHypFsQU3TudGURQDhASUPLG4Nt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/BTOFAManager.sol:BankManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1441,
								"contract": "contracts/BTOFAManager.sol:BankManager",
								"label": "_BTOFACurrency",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)190"
							},
							{
								"astId": 1444,
								"contract": "contracts/BTOFAManager.sol:BankManager",
								"label": "_BTOFAToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IBTOFAToken)1434"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IBTOFAToken)1434": {
								"encoding": "inplace",
								"label": "contract IBTOFAToken",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)190": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBTOFAToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getProfit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isExpired",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"getPrice(uint256)": "e7572230",
							"getProfit(uint256)": "a91b2e9f",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isExpired(uint256)": "d9548e53",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BTOFAManager.sol\":\"IBTOFAToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/BTOFAManager.sol\":{\"keccak256\":\"0x05cadb96863ce0fcd46ebf8b6d4a3a67a7b06eaa1e4139fac365950ed4f378eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c72002c173c4d30a8c2e408be2f9f217103e29bae46361276bebecfa67135ba\",\"dweb:/ipfs/QmbZFG8n7vPjEZEh9edxHypFsQU3TudGURQDhASUPLG4Nt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							346
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 347,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 346,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								346
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							533
						],
						"IERC721": [
							306
						]
					},
					"id": 307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 534,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 195,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "271:7:2"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 194,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 306,
							"linearizedBaseContracts": [
								306,
								533
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 205,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 214,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 223,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 306,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 306,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 306,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 306,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3526:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3568:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:2"
									},
									"scope": 306,
									"src": "3495:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4079:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4091:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:2"
									},
									"scope": 306,
									"src": "4062:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "4464:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "4482:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:2"
									},
									"scope": 306,
									"src": "4437:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4678:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4718:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:2"
									},
									"scope": 306,
									"src": "4657:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4911:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4926:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4967:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:2"
									},
									"scope": 306,
									"src": "4885:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 307,
							"src": "250:4725:2",
							"usedErrors": []
						}
					],
					"src": "108:4868:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 309,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 320,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 324,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 325,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							346
						]
					},
					"id": 347,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 327,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 346,
							"linearizedBaseContracts": [
								346
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 332,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 331,
												"id": 334,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 346,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 341,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 340,
												"id": 343,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 346,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 347,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1398
						],
						"Strings": [
							521
						]
					},
					"id": 522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 348,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 349,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 522,
							"sourceUnit": 1399,
							"src": "126:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 350,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "Strings",
							"nameLocation": "196:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 353,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 521,
									"src": "210:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 351,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 356,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 521,
									"src": "270:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 354,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "486:625:5",
										"statements": [
											{
												"id": 402,
												"nodeType": "UncheckedBlock",
												"src": "496:609:5",
												"statements": [
													{
														"assignments": [
															365
														],
														"declarations": [
															{
																"constant": false,
																"id": 365,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 402,
																"src": "520:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 364,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 372,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 368,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "548:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 366,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "537:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1398_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1235,
																	"src": "537:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:5"
													},
													{
														"assignments": [
															374
														],
														"declarations": [
															{
																"constant": false,
																"id": 374,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 402,
																"src": "572:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 373,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"initialValue": {
															"arguments": [
																{
																	"id": 377,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "606:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 375,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:5"
													},
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 402,
																"src": "627:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 382,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 374,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:5",
																"valueSize": 1
															},
															{
																"declaration": 365,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:5",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:5",
																"valueSize": 1
															}
														],
														"id": 383,
														"nodeType": "InlineAssembly",
														"src": "699:76:5"
													},
													{
														"body": {
															"id": 398,
															"nodeType": "Block",
															"src": "801:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:5",
																		"subExpression": {
																			"id": 385,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "819:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 387,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:5"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:5"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 353,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 381,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 359,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 388,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:5"
																},
																{
																	"expression": {
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 389,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "1003:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 392,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 393,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "1036:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 397,
																	"nodeType": "IfStatement",
																	"src": "1032:21:5",
																	"trueBody": {
																		"id": 396,
																		"nodeType": "Break",
																		"src": "1048:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 399,
														"nodeType": "WhileStatement",
														"src": "788:280:5"
													},
													{
														"expression": {
															"id": 400,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "1088:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 363,
														"id": 401,
														"nodeType": "Return",
														"src": "1081:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:5"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "471:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:5"
									},
									"scope": 521,
									"src": "415:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "1290:100:5",
										"statements": [
											{
												"id": 422,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 413,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "1343:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 407,
																				"src": "1362:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 414,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "1350:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1398_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1358,
																			"src": "1350:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 412,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	424,
																	500,
																	520
																],
																"referencedDeclaration": 500,
																"src": "1331:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 411,
														"id": 421,
														"nodeType": "Return",
														"src": "1324:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1237:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:5"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1275:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:5"
									},
									"scope": 521,
									"src": "1216:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "1603:347:5",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "1613:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 434,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 439,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1649:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 436,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:5"
											},
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 445,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "1670:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 447,
														"indexExpression": {
															"hexValue": "30",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:5"
											},
											{
												"expression": {
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 451,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "1695:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 453,
														"indexExpression": {
															"hexValue": "31",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:5"
											},
											{
												"body": {
													"id": 485,
													"nodeType": "Block",
													"src": "1765:83:5",
													"statements": [
														{
															"expression": {
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 471,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "1779:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 473,
																	"indexExpression": {
																		"id": 472,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "1786:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 474,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "1791:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 478,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 475,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "1800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:5"
														},
														{
															"expression": {
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "1826:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 465,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "1753:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 486,
												"initializationExpression": {
													"assignments": [
														458
													],
													"declarations": [
														{
															"constant": false,
															"id": 458,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 486,
															"src": "1725:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 457,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 464,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 460,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "1741:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:5",
														"subExpression": {
															"id": 468,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "1762:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 470,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "1865:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "1936:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 494,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 433,
												"id": 498,
												"nodeType": "Return",
												"src": "1922:21:5"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1534:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:5"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1588:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:5"
									},
									"scope": 521,
									"src": "1513:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2175:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 513,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "2220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 511,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 509,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 516,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "2228:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 508,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															424,
															500,
															520
														],
														"referencedDeclaration": 500,
														"src": "2192:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 507,
												"id": 518,
												"nodeType": "Return",
												"src": "2185:59:5"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2123:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:5"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2160:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 505,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:5"
									},
									"scope": 521,
									"src": "2102:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 522,
							"src": "188:2065:5",
							"usedErrors": []
						}
					],
					"src": "101:2153:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 524,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 526,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 533,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 534,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1398
						]
					},
					"id": 1399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1398,
							"linearizedBaseContracts": [
								1398
							],
							"name": "Math",
							"nameLocation": "210:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 540,
									"members": [
										{
											"id": 537,
											"name": "Down",
											"nameLocation": "245:4:7",
											"nodeType": "EnumValue",
											"src": "245:4:7"
										},
										{
											"id": 538,
											"name": "Up",
											"nameLocation": "287:2:7",
											"nodeType": "EnumValue",
											"src": "287:2:7"
										},
										{
											"id": 539,
											"name": "Zero",
											"nameLocation": "318:4:7",
											"nodeType": "EnumValue",
											"src": "318:4:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:7",
									"nodeType": "EnumDefinition",
									"src": "221:122:7"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "480:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 550,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "497:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 551,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "501:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 554,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "509:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:7",
													"trueExpression": {
														"id": 553,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "505:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 556,
												"nodeType": "Return",
												"src": "490:20:7"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "426:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "437:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:7"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "471:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:7"
									},
									"scope": 1398,
									"src": "413:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "655:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 568,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "672:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 569,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "676:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 572,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "684:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:7",
													"trueExpression": {
														"id": 571,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "680:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 567,
												"id": 574,
												"nodeType": "Return",
												"src": "665:20:7"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:7"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "646:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:7"
									},
									"scope": 1398,
									"src": "588:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "876:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 586,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "931:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 587,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "935:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 589,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 590,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "941:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 591,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "945:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 593,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 585,
												"id": 597,
												"nodeType": "Return",
												"src": "923:28:7"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "822:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "833:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:7"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "867:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:7"
									},
									"scope": 1398,
									"src": "805:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "1228:123:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 609,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "1316:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 613,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "1330:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 616,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "1339:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 608,
												"id": 622,
												"nodeType": "Return",
												"src": "1309:35:7"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1174:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1185:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:7"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1219:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:7"
									},
									"scope": 1398,
									"src": "1157:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "1795:3797:7",
										"statements": [
											{
												"id": 744,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:7",
												"statements": [
													{
														"assignments": [
															637
														],
														"declarations": [
															{
																"constant": false,
																"id": 637,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 744,
																"src": "2126:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 636,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 638,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:7"
													},
													{
														"assignments": [
															640
														],
														"declarations": [
															{
																"constant": false,
																"id": 640,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 744,
																"src": "2198:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 639,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 641,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:7",
																"valueSize": 1
															},
															{
																"declaration": 640,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:7",
																"valueSize": 1
															},
															{
																"declaration": 627,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:7",
																"valueSize": 1
															},
															{
																"declaration": 627,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:7",
																"valueSize": 1
															},
															{
																"declaration": 629,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:7",
																"valueSize": 1
															},
															{
																"declaration": 629,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:7",
																"valueSize": 1
															}
														],
														"id": 642,
														"nodeType": "InlineAssembly",
														"src": "2269:166:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "2516:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2512:75:7",
														"trueBody": {
															"id": 650,
															"nodeType": "Block",
															"src": "2528:59:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 646,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2553:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 647,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "2561:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 635,
																	"id": 649,
																	"nodeType": "Return",
																	"src": "2546:26:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "2697:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 654,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "2711:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 652,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 657,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:7"
													},
													{
														"assignments": [
															659
														],
														"declarations": [
															{
																"constant": false,
																"id": 659,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 744,
																"src": "2973:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 658,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 660,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:7"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:7"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 631,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:7",
																"valueSize": 1
															},
															{
																"declaration": 640,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:7",
																"valueSize": 1
															},
															{
																"declaration": 640,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:7",
																"valueSize": 1
															},
															{
																"declaration": 659,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:7",
																"valueSize": 1
															},
															{
																"declaration": 659,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:7",
																"valueSize": 1
															},
															{
																"declaration": 659,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:7",
																"valueSize": 1
															},
															{
																"declaration": 627,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:7",
																"valueSize": 1
															},
															{
																"declaration": 629,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:7",
																"valueSize": 1
															}
														],
														"id": 661,
														"nodeType": "InlineAssembly",
														"src": "3004:300:7"
													},
													{
														"assignments": [
															663
														],
														"declarations": [
															{
																"constant": false,
																"id": 663,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 744,
																"src": "3611:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 671,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "3626:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:7",
																			"subExpression": {
																				"id": 665,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 631,
																				"src": "3642:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 669,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:7"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 631,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:7",
																"valueSize": 1
															},
															{
																"declaration": 631,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:7",
																"valueSize": 1
															},
															{
																"declaration": 663,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:7",
																"valueSize": 1
															},
															{
																"declaration": 663,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:7",
																"valueSize": 1
															},
															{
																"declaration": 663,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:7",
																"valueSize": 1
															},
															{
																"declaration": 663,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:7",
																"valueSize": 1
															},
															{
																"declaration": 663,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:7",
																"valueSize": 1
															}
														],
														"id": 672,
														"nodeType": "InlineAssembly",
														"src": "3672:371:7"
													},
													{
														"expression": {
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 673,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "4109:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 674,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "4118:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 675,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "4126:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 678,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:7"
													},
													{
														"assignments": [
															680
														],
														"declarations": [
															{
																"constant": false,
																"id": 680,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 744,
																"src": "4448:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 679,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 687,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 682,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "4471:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 684,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:7"
													},
													{
														"expression": {
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 688,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4704:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 690,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "4719:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 691,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "4733:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 695,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:7"
													},
													{
														"expression": {
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 696,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 698,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "4788:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 699,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "4802:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 703,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:7"
													},
													{
														"expression": {
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 704,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4843:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 706,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "4858:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 707,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "4872:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 711,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:7"
													},
													{
														"expression": {
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 712,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4913:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 714,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "4928:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 715,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "4942:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 719,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:7"
													},
													{
														"expression": {
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 720,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4983:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 722,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "4998:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 723,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "5012:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 727,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:7"
													},
													{
														"expression": {
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 728,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "5054:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 730,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5069:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 731,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "5083:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 735,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:7"
													},
													{
														"expression": {
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 736,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5524:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 737,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "5533:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 738,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "5541:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 741,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:7"
													},
													{
														"expression": {
															"id": 742,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5569:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 635,
														"id": 743,
														"nodeType": "Return",
														"src": "5562:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1692:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1711:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1730:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:7"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1779:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:7"
									},
									"scope": 1398,
									"src": "1667:3925:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "5872:189:7",
										"statements": [
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "5882:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [
														{
															"id": 764,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "5906:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 765,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "5909:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 766,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "5912:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 763,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															746,
															790
														],
														"referencedDeclaration": 746,
														"src": "5899:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$540",
															"typeString": "enum Math.Rounding"
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 769,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "5938:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$540",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 770,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "5950:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:7",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "5950:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$540",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 774,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "5972:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 775,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "5975:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 776,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "5978:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 773,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 786,
												"nodeType": "IfStatement",
												"src": "5934:98:7",
												"trueBody": {
													"id": 785,
													"nodeType": "Block",
													"src": "5996:36:7",
													"statements": [
														{
															"expression": {
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 781,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "6010:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 784,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 787,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 762,
													"src": "6048:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 760,
												"id": 788,
												"nodeType": "Return",
												"src": "6041:13:7"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5749:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5787:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5816:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 755,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 754,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "5816:8:7"
													},
													"referencedDeclaration": 540,
													"src": "5816:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:7"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5863:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:7"
									},
									"scope": 1398,
									"src": "5724:337:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "6337:1585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 798,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "6351:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 804,
												"nodeType": "IfStatement",
												"src": "6347:45:7",
												"trueBody": {
													"id": 803,
													"nodeType": "Block",
													"src": "6359:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 797,
															"id": 802,
															"nodeType": "Return",
															"src": "6373:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													806
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "7071:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 805,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 809,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "7099:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 808,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1070,
																			1106
																		],
																		"referencedDeclaration": 1070,
																		"src": "7094:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:7"
											},
											{
												"id": 900,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:7",
												"statements": [
													{
														"expression": {
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 816,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7532:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 817,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7542:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 818,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7551:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 819,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 806,
																					"src": "7555:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 822,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 826,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:7"
													},
													{
														"expression": {
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 827,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7581:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 828,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7591:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 829,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7600:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 830,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 806,
																					"src": "7604:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 833,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 837,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:7"
													},
													{
														"expression": {
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 838,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7630:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 839,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7640:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 840,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7649:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 841,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 806,
																					"src": "7653:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 844,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 848,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:7"
													},
													{
														"expression": {
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 849,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7679:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 850,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7689:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 851,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7698:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 852,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 806,
																					"src": "7702:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 855,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 859,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:7"
													},
													{
														"expression": {
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 860,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7728:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 861,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7738:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 862,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7747:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 863,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 806,
																					"src": "7751:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 866,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 870,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:7"
													},
													{
														"expression": {
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 871,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7777:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 872,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7787:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 873,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7796:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 874,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 806,
																					"src": "7800:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 877,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 881,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:7"
													},
													{
														"expression": {
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 882,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7826:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 883,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7836:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 884,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7845:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 885,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 806,
																					"src": "7849:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 888,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 892,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 894,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "7886:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 895,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "7894:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 896,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "7898:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 893,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7882:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 797,
														"id": 899,
														"nodeType": "Return",
														"src": "7875:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6294:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:7"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6328:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:7"
									},
									"scope": 1398,
									"src": "6280:1642:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "8098:161:7",
										"statements": [
											{
												"id": 936,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:7",
												"statements": [
													{
														"assignments": [
															914
														],
														"declarations": [
															{
																"constant": false,
																"id": 914,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 936,
																"src": "8132:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 913,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 918,
														"initialValue": {
															"arguments": [
																{
																	"id": 916,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "8154:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 915,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	902,
																	938
																],
																"referencedDeclaration": 902,
																"src": "8149:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 919,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "8177:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$540",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 920,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "8187:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 921,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "8199:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 922,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "8199:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 926,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 924,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 914,
																						"src": "8214:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 925,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 914,
																						"src": "8223:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 927,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "8232:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 933,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 912,
														"id": 935,
														"nodeType": "Return",
														"src": "8170:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8036:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8047:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 907,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 906,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "8047:8:7"
													},
													"referencedDeclaration": 540,
													"src": "8047:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:7"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8089:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:7"
									},
									"scope": 1398,
									"src": "8022:237:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "8444:922:7",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "8454:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 949,
												"initialValue": {
													"hexValue": "30",
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:7"
											},
											{
												"id": 1066,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 950,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "8510:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 964,
														"nodeType": "IfStatement",
														"src": "8506:99:7",
														"trueBody": {
															"id": 963,
															"nodeType": "Block",
															"src": "8528:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "8546:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 958,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:7"
																},
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 959,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "8577:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 965,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "8622:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 979,
														"nodeType": "IfStatement",
														"src": "8618:96:7",
														"trueBody": {
															"id": 978,
															"nodeType": "Block",
															"src": "8639:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 970,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "8657:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 973,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:7"
																},
																{
																	"expression": {
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "8687:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 977,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 980,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "8731:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 994,
														"nodeType": "IfStatement",
														"src": "8727:96:7",
														"trueBody": {
															"id": 993,
															"nodeType": "Block",
															"src": "8748:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 985,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "8766:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 988,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:7"
																},
																{
																	"expression": {
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 989,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "8796:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 992,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 995,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "8840:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1009,
														"nodeType": "IfStatement",
														"src": "8836:96:7",
														"trueBody": {
															"id": 1008,
															"nodeType": "Block",
															"src": "8857:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1000,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "8875:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1003,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:7"
																},
																{
																	"expression": {
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1004,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "8905:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1007,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1010,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "8949:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1024,
														"nodeType": "IfStatement",
														"src": "8945:93:7",
														"trueBody": {
															"id": 1023,
															"nodeType": "Block",
															"src": "8965:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1015,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "8983:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1018,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:7"
																},
																{
																	"expression": {
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1019,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "9012:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1022,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1025,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "9055:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1039,
														"nodeType": "IfStatement",
														"src": "9051:93:7",
														"trueBody": {
															"id": 1038,
															"nodeType": "Block",
															"src": "9071:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1030,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "9089:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1033,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:7"
																},
																{
																	"expression": {
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1034,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "9118:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1037,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1040,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "9161:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1054,
														"nodeType": "IfStatement",
														"src": "9157:93:7",
														"trueBody": {
															"id": 1053,
															"nodeType": "Block",
															"src": "9177:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1045,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "9195:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1048,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:7"
																},
																{
																	"expression": {
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1049,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "9224:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1052,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1055,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "9267:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1065,
														"nodeType": "IfStatement",
														"src": "9263:64:7",
														"trueBody": {
															"id": 1064,
															"nodeType": "Block",
															"src": "9283:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1060,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "9301:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1063,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1067,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "9353:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 945,
												"id": 1068,
												"nodeType": "Return",
												"src": "9346:13:7"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:7",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "8397:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:7"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "8435:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:7"
									},
									"scope": 1398,
									"src": "8383:983:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "9599:165:7",
										"statements": [
											{
												"id": 1104,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:7",
												"statements": [
													{
														"assignments": [
															1082
														],
														"declarations": [
															{
																"constant": false,
																"id": 1082,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1104,
																"src": "9633:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1086,
														"initialValue": {
															"arguments": [
																{
																	"id": 1084,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "9655:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1083,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1070,
																	1106
																],
																"referencedDeclaration": 1070,
																"src": "9650:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "9682:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$540",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1088,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1076,
																					"src": "9692:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1089,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "9704:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "9704:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1092,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1093,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1082,
																						"src": "9724:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1095,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1073,
																					"src": "9733:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1101,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1080,
														"id": 1103,
														"nodeType": "Return",
														"src": "9675:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "9533:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "9548:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1075,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1074,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "9548:8:7"
													},
													"referencedDeclaration": 540,
													"src": "9548:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:7"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "9590:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:7"
									},
									"scope": 1398,
									"src": "9519:245:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "9951:828:7",
										"statements": [
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "9961:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"hexValue": "30",
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:7"
											},
											{
												"id": 1231,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "10017:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1134,
														"nodeType": "IfStatement",
														"src": "10013:99:7",
														"trueBody": {
															"id": 1133,
															"nodeType": "Block",
															"src": "10034:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1123,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "10052:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1128,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:7"
																},
																{
																	"expression": {
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1129,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "10085:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1132,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "10129:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1151,
														"nodeType": "IfStatement",
														"src": "10125:99:7",
														"trueBody": {
															"id": 1150,
															"nodeType": "Block",
															"src": "10146:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1140,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "10164:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1145,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:7"
																},
																{
																	"expression": {
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1146,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "10197:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1149,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1152,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "10241:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1168,
														"nodeType": "IfStatement",
														"src": "10237:99:7",
														"trueBody": {
															"id": 1167,
															"nodeType": "Block",
															"src": "10258:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "10276:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1162,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:7"
																},
																{
																	"expression": {
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1163,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "10309:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1166,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1169,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "10353:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1185,
														"nodeType": "IfStatement",
														"src": "10349:96:7",
														"trueBody": {
															"id": 1184,
															"nodeType": "Block",
															"src": "10369:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1174,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "10387:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1179,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:7"
																},
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "10419:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "10462:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1202,
														"nodeType": "IfStatement",
														"src": "10458:96:7",
														"trueBody": {
															"id": 1201,
															"nodeType": "Block",
															"src": "10478:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1191,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "10496:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1196,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:7"
																},
																{
																	"expression": {
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1197,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "10528:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1200,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "10571:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1219,
														"nodeType": "IfStatement",
														"src": "10567:96:7",
														"trueBody": {
															"id": 1218,
															"nodeType": "Block",
															"src": "10587:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1208,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "10605:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:7"
																},
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "10637:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1220,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "10680:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1230,
														"nodeType": "IfStatement",
														"src": "10676:64:7",
														"trueBody": {
															"id": 1229,
															"nodeType": "Block",
															"src": "10696:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1225,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "10714:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1232,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1115,
													"src": "10766:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1113,
												"id": 1233,
												"nodeType": "Return",
												"src": "10759:13:7"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:7",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "9904:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:7"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "9942:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:7"
									},
									"scope": 1398,
									"src": "9889:890:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "11014:165:7",
										"statements": [
											{
												"id": 1269,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:7",
												"statements": [
													{
														"assignments": [
															1247
														],
														"declarations": [
															{
																"constant": false,
																"id": 1247,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1269,
																"src": "11048:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1246,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1251,
														"initialValue": {
															"arguments": [
																{
																	"id": 1249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "11071:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1248,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1235,
																	1271
																],
																"referencedDeclaration": 1235,
																"src": "11065:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "11098:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$540",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1253,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1241,
																					"src": "11108:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1254,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "11120:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "11120:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1258,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1247,
																						"src": "11139:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1260,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1238,
																					"src": "11148:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1245,
														"id": 1268,
														"nodeType": "Return",
														"src": "11091:71:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "10948:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "10963:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "10963:8:7"
													},
													"referencedDeclaration": 540,
													"src": "10963:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:7"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "11005:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:7"
									},
									"scope": 1398,
									"src": "10933:246:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "11493:600:7",
										"statements": [
											{
												"assignments": [
													1280
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1357,
														"src": "11503:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1279,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"hexValue": "30",
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:7"
											},
											{
												"id": 1354,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1283,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "11559:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1297,
														"nodeType": "IfStatement",
														"src": "11555:98:7",
														"trueBody": {
															"id": 1296,
															"nodeType": "Block",
															"src": "11577:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "11595:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:7"
																},
																{
																	"expression": {
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1292,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "11626:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1295,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "11670:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1312,
														"nodeType": "IfStatement",
														"src": "11666:95:7",
														"trueBody": {
															"id": 1311,
															"nodeType": "Block",
															"src": "11687:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1303,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "11705:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:7"
																},
																{
																	"expression": {
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1307,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "11735:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1310,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1313,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "11778:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1327,
														"nodeType": "IfStatement",
														"src": "11774:95:7",
														"trueBody": {
															"id": 1326,
															"nodeType": "Block",
															"src": "11795:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "11813:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:7"
																},
																{
																	"expression": {
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1322,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "11843:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1325,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "11886:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1342,
														"nodeType": "IfStatement",
														"src": "11882:95:7",
														"trueBody": {
															"id": 1341,
															"nodeType": "Block",
															"src": "11903:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1333,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "11921:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1336,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:7"
																},
																{
																	"expression": {
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1337,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "11951:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1340,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1343,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "11994:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1353,
														"nodeType": "IfStatement",
														"src": "11990:64:7",
														"trueBody": {
															"id": 1352,
															"nodeType": "Block",
															"src": "12010:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1348,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "12028:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1351,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1355,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1280,
													"src": "12080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1356,
												"nodeType": "Return",
												"src": "12073:13:7"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:7",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "11446:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:7"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "11484:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:7"
									},
									"scope": 1398,
									"src": "11430:663:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "12329:173:7",
										"statements": [
											{
												"id": 1395,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:7",
												"statements": [
													{
														"assignments": [
															1370
														],
														"declarations": [
															{
																"constant": false,
																"id": 1370,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1395,
																"src": "12363:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1369,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1374,
														"initialValue": {
															"arguments": [
																{
																	"id": 1372,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "12387:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1371,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1358,
																	1397
																],
																"referencedDeclaration": 1358,
																"src": "12380:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1375,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "12414:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$540",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1376,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1364,
																					"src": "12424:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1377,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "12436:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "12436:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1383,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1381,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1370,
																									"src": "12457:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1382,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1384,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1386,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1361,
																					"src": "12471:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1368,
														"id": 1394,
														"nodeType": "Return",
														"src": "12407:78:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12263:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12278:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1362,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "12278:8:7"
													},
													"referencedDeclaration": 540,
													"src": "12278:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:7"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12320:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:7"
									},
									"scope": 1398,
									"src": "12247:255:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1399,
							"src": "202:12302:7",
							"usedErrors": []
						}
					],
					"src": "103:12402:7"
				},
				"id": 7
			},
			"contracts/BTOFAManager.sol": {
				"ast": {
					"absolutePath": "contracts/BTOFAManager.sol",
					"exportedSymbols": {
						"BankManager": [
							1740
						],
						"Context": [
							346
						],
						"IBTOFAToken": [
							1434
						],
						"IERC165": [
							533
						],
						"IERC20": [
							190
						],
						"IERC721": [
							306
						],
						"IERC721Receiver": [
							324
						],
						"Math": [
							1398
						],
						"Ownable": [
							112
						],
						"Strings": [
							521
						]
					},
					"id": 1741,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 325,
							"src": "60:66:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 307,
							"src": "128:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 191,
							"src": "188:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1404,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 113,
							"src": "246:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 522,
							"src": "300:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1406,
										"name": "IERC721",
										"nameLocations": [
											"380:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 306,
										"src": "380:7:8"
									},
									"id": 1407,
									"nodeType": "InheritanceSpecifier",
									"src": "380:7:8"
								}
							],
							"canonicalName": "IBTOFAToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1434,
							"linearizedBaseContracts": [
								1434,
								306,
								533
							],
							"name": "IBTOFAToken",
							"nameLocation": "365:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d9548e53",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isExpired",
									"nameLocation": "404:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "422:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "414:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:17:8"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "454:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "454:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:6:8"
									},
									"scope": 1434,
									"src": "395:65:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 1419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "475:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "488:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "480:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:17:8"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:0:8"
									},
									"scope": 1434,
									"src": "466:40:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e7572230",
									"id": 1426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "521:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "538:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "530:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:17:8"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "569:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:9:8"
									},
									"scope": 1434,
									"src": "512:66:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a91b2e9f",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfit",
									"nameLocation": "593:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "611:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "603:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:17:8"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "642:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:9:8"
									},
									"scope": 1434,
									"src": "584:67:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1741,
							"src": "355:299:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1435,
										"name": "IERC721Receiver",
										"nameLocations": [
											"682:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "682:15:8"
									},
									"id": 1436,
									"nodeType": "InheritanceSpecifier",
									"src": "682:15:8"
								},
								{
									"baseName": {
										"id": 1437,
										"name": "Ownable",
										"nameLocations": [
											"699:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "699:7:8"
									},
									"id": 1438,
									"nodeType": "InheritanceSpecifier",
									"src": "699:7:8"
								}
							],
							"canonicalName": "BankManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1740,
							"linearizedBaseContracts": [
								1740,
								112,
								346,
								324
							],
							"name": "BankManager",
							"nameLocation": "667:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1441,
									"mutability": "mutable",
									"name": "_BTOFACurrency",
									"nameLocation": "731:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "716:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$190",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1440,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1439,
											"name": "IERC20",
											"nameLocations": [
												"716:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "716:6:8"
										},
										"referencedDeclaration": 190,
										"src": "716:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1444,
									"mutability": "mutable",
									"name": "_BTOFAToken",
									"nameLocation": "772:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "752:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
										"typeString": "contract IBTOFAToken"
									},
									"typeName": {
										"id": 1443,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1442,
											"name": "IBTOFAToken",
											"nameLocations": [
												"752:11:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1434,
											"src": "752:11:8"
										},
										"referencedDeclaration": 1434,
										"src": "752:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
											"typeString": "contract IBTOFAToken"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "837:95:8",
										"statements": [
											{
												"expression": {
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1451,
														"name": "_BTOFACurrency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "848:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$190",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1453,
																"name": "currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "872:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1452,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "865:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "865:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$190",
															"typeString": "contract IERC20"
														}
													},
													"src": "848:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "848:33:8"
											},
											{
												"expression": {
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1457,
														"name": "_BTOFAToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "892:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
															"typeString": "contract IBTOFAToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1459,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "918:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1458,
															"name": "IBTOFAToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "906:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBTOFAToken_$1434_$",
																"typeString": "type(contract IBTOFAToken)"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "906:18:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
															"typeString": "contract IBTOFAToken"
														}
													},
													"src": "892:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
														"typeString": "contract IBTOFAToken"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "892:32:8"
											}
										]
									},
									"id": 1464,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "812:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "804:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "830:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "822:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:33:8"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:0:8"
									},
									"scope": 1740,
									"src": "792:140:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "999:948:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1472,
																"name": "startId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "1018:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1473,
																"name": "endId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "1029:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1018:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42414e4b204d414e414745523a205269676874204944277320626f756e64206973206c657373207468616e206c656674206f6e652e",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1036:55:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13",
																"typeString": "literal_string \"BANK MANAGER: Right ID's bound is less than left one.\""
															},
															"value": "BANK MANAGER: Right ID's bound is less than left one."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13",
																"typeString": "literal_string \"BANK MANAGER: Right ID's bound is less than left one.\""
															}
														],
														"id": 1471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1010:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "1010:82:8"
											},
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1111:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1581,
														"src": "1103:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1103:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1481,
												"initialValue": {
													"hexValue": "30",
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1119:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1103:17:8"
											},
											{
												"body": {
													"id": 1521,
													"nodeType": "Block",
													"src": "1202:262:8",
													"statements": [
														{
															"expression": {
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1492,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "1217:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1495,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "1247:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1493,
																			"name": "_BTOFAToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1444,
																			"src": "1226:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																				"typeString": "contract IBTOFAToken"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1238:8:8",
																		"memberName": "getPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1426,
																		"src": "1226:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view external returns (uint256)"
																		}
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1226:29:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1217:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1498,
															"nodeType": "ExpressionStatement",
															"src": "1217:38:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1500,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1278:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1282:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1278:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1504,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1483,
																					"src": "1312:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1502,
																					"name": "_BTOFAToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "1292:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																						"typeString": "contract IBTOFAToken"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1304:7:8",
																				"memberName": "ownerOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 239,
																				"src": "1292:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																					"typeString": "function (uint256) view external returns (address)"
																				}
																			},
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1292:28:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1278:42:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "42544f543a205573657220616c726561647920697320616e206f776e6572206f6620746f6b656e207769746820494420",
																						"id": 1511,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1367:50:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc",
																							"typeString": "literal_string \"BTOT: User already is an owner of token with ID \""
																						},
																						"value": "BTOT: User already is an owner of token with ID "
																					},
																					{
																						"arguments": [
																							{
																								"id": 1514,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1483,
																								"src": "1436:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1512,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 521,
																								"src": "1419:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$521_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1513,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1427:8:8",
																							"memberName": "toString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 404,
																							"src": "1419:16:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1515,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1419:25:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "2e",
																						"id": 1516,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1446:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																							"typeString": "literal_string \".\""
																						},
																						"value": "."
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc",
																							"typeString": "literal_string \"BTOT: User already is an owner of token with ID \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																							"typeString": "literal_string \".\""
																						}
																					],
																					"expression": {
																						"id": 1509,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "1350:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1510,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "1354:12:8",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "1350:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1350:100:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1343:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 1507,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "1343:6:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1343:108:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1499,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1270:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1270:182:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1520,
															"nodeType": "ExpressionStatement",
															"src": "1270:182:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1486,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "1173:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1487,
														"name": "endId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "1184:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1173:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1522,
												"initializationExpression": {
													"assignments": [
														1483
													],
													"declarations": [
														{
															"constant": false,
															"id": 1483,
															"mutability": "mutable",
															"name": "tokenId",
															"nameLocation": "1154:7:8",
															"nodeType": "VariableDeclaration",
															"scope": 1522,
															"src": "1146:15:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1146:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1485,
													"initialValue": {
														"id": 1484,
														"name": "startId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "1164:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1146:25:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1191:9:8",
														"subExpression": {
															"id": 1489,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "1193:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ExpressionStatement",
													"src": "1191:9:8"
												},
												"nodeType": "ForStatement",
												"src": "1141:323:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1526,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1509:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1513:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1509:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1524,
																		"name": "_BTOFACurrency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "1484:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1499:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "1484:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1484:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1529,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "1524:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1484:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42544f433a20496e73756666696369656e7420616d6f756e74206f6620746f6b656e732e",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1531:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e",
																"typeString": "literal_string \"BTOC: Insufficient amount of tokens.\""
															},
															"value": "BTOC: Insufficient amount of tokens."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e",
																"typeString": "literal_string \"BTOC: Insufficient amount of tokens.\""
															}
														],
														"id": 1523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1476:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:94:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "1476:94:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1537,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1614:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1618:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1614:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1541,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1634:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BankManager_$1740",
																					"typeString": "contract BankManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BankManager_$1740",
																					"typeString": "contract BankManager"
																				}
																			],
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1626:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1539,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1626:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1626:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1535,
																		"name": "_BTOFACurrency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "1589:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1604:9:8",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 167,
																	"src": "1589:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1589:51:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1544,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "1644:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1589:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42544f433a20496e73756666696369656e7420616c6c6f77656420616d6f756e74206f6620746f6b656e7320746f207370656e642e",
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1651:55:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be",
																"typeString": "literal_string \"BTOC: Insufficient allowed amount of tokens to spend.\""
															},
															"value": "BTOC: Insufficient allowed amount of tokens to spend."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be",
																"typeString": "literal_string \"BTOC: Insufficient allowed amount of tokens to spend.\""
															}
														],
														"id": 1534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1581:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1581:126:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "1581:126:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1552,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1746:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1750:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1746:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1554,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "1758:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1758:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1556,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "1767:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1549,
															"name": "_BTOFACurrency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1718:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1733:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "1718:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "1718:55:8"
											},
											{
												"body": {
													"id": 1579,
													"nodeType": "Block",
													"src": "1855:85:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1572,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "1899:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:7:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1574,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1908:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1912:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1908:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1576,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "1920:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1569,
																		"name": "_BTOFAToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "1870:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																			"typeString": "contract IBTOFAToken"
																		}
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1882:16:8",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 261,
																	"src": "1870:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1870:58:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1578,
															"nodeType": "ExpressionStatement",
															"src": "1870:58:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1563,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "1826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1564,
														"name": "endId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "1837:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1826:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1580,
												"initializationExpression": {
													"assignments": [
														1560
													],
													"declarations": [
														{
															"constant": false,
															"id": 1560,
															"mutability": "mutable",
															"name": "tokenId",
															"nameLocation": "1807:7:8",
															"nodeType": "VariableDeclaration",
															"scope": 1580,
															"src": "1799:15:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1559,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1799:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1562,
													"initialValue": {
														"id": 1561,
														"name": "startId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "1817:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1799:25:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1844:9:8",
														"subExpression": {
															"id": 1566,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "1846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1568,
													"nodeType": "ExpressionStatement",
													"src": "1844:9:8"
												},
												"nodeType": "ForStatement",
												"src": "1794:146:8"
											}
										]
									},
									"functionSelector": "057466ea",
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "949:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "startId",
												"nameLocation": "966:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "958:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "endId",
												"nameLocation": "983:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "975:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:32:8"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:0:8"
									},
									"scope": 1740,
									"src": "940:1007:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "2025:1118:8",
										"statements": [
											{
												"assignments": [
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2044:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1719,
														"src": "2036:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2036:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"hexValue": "30",
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2052:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2036:17:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1596,
																"name": "startId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "2072:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1597,
																"name": "endId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "2083:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2072:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42414e4b204d414e414745523a205269676874204944277320626f756e64206973206c657373207468616e206c656674206f6e652e",
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:55:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13",
																"typeString": "literal_string \"BANK MANAGER: Right ID's bound is less than left one.\""
															},
															"value": "BANK MANAGER: Right ID's bound is less than left one."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e59ce122880f1d28ae467c81d90f32325882c86916519af5db80baa97895d13",
																"typeString": "literal_string \"BANK MANAGER: Right ID's bound is less than left one.\""
															}
														],
														"id": 1595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2064:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2064:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "2064:82:8"
											},
											{
												"body": {
													"id": 1649,
													"nodeType": "Block",
													"src": "2228:362:8",
													"statements": [
														{
															"expression": {
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1612,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "2243:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1615,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1603,
																			"src": "2274:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1613,
																			"name": "_BTOFAToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1444,
																			"src": "2252:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																				"typeString": "contract IBTOFAToken"
																			}
																		},
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2264:9:8",
																		"memberName": "getProfit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1433,
																		"src": "2252:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view external returns (uint256)"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2252:30:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2243:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1618,
															"nodeType": "ExpressionStatement",
															"src": "2243:39:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1620,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 40,
																				"src": "2305:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2305:7:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1624,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1603,
																					"src": "2336:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1622,
																					"name": "_BTOFAToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "2316:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																						"typeString": "contract IBTOFAToken"
																					}
																				},
																				"id": 1623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2328:7:8",
																				"memberName": "ownerOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 239,
																				"src": "2316:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																					"typeString": "function (uint256) view external returns (address)"
																				}
																			},
																			"id": 1625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2316:28:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2305:39:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "42544f543a205573657220616c726561647920697320616e206f776e6572206f6620746f6b656e207769746820494420",
																						"id": 1631,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2391:50:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc",
																							"typeString": "literal_string \"BTOT: User already is an owner of token with ID \""
																						},
																						"value": "BTOT: User already is an owner of token with ID "
																					},
																					{
																						"arguments": [
																							{
																								"id": 1634,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1603,
																								"src": "2460:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1632,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 521,
																								"src": "2443:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$521_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1633,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2451:8:8",
																							"memberName": "toString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 404,
																							"src": "2443:16:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1635,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2443:25:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "2e",
																						"id": 1636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2470:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																							"typeString": "literal_string \".\""
																						},
																						"value": "."
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_eca9b9d6504bcb36e46636921a13201ab7f3ae794852006153071a8e1f9aedfc",
																							"typeString": "literal_string \"BTOT: User already is an owner of token with ID \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
																							"typeString": "literal_string \".\""
																						}
																					],
																					"expression": {
																						"id": 1629,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "2374:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1630,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "2378:12:8",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "2374:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2374:100:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2367:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 1627,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "2367:6:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2367:108:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1619,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2297:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2297:179:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1640,
															"nodeType": "ExpressionStatement",
															"src": "2297:179:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1644,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1603,
																				"src": "2521:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1642,
																				"name": "_BTOFAToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1444,
																				"src": "2499:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																					"typeString": "contract IBTOFAToken"
																				}
																			},
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2511:9:8",
																			"memberName": "isExpired",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1414,
																			"src": "2499:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256) view external returns (bool)"
																			}
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2499:30:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "42544f543a20546f6b656e20776974682073756368204944206861736e27742065787069726564207965742e",
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2531:46:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53",
																			"typeString": "literal_string \"BTOT: Token with such ID hasn't expired yet.\""
																		},
																		"value": "BTOT: Token with such ID hasn't expired yet."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8b423a7f5682d72dbccab89b1000cf62aed00b0cdbac024f5d3aefa1df5e9c53",
																			"typeString": "literal_string \"BTOT: Token with such ID hasn't expired yet.\""
																		}
																	],
																	"id": 1641,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2491:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2491:87:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1648,
															"nodeType": "ExpressionStatement",
															"src": "2491:87:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1606,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "2199:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1607,
														"name": "endId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2210:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2199:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1650,
												"initializationExpression": {
													"assignments": [
														1603
													],
													"declarations": [
														{
															"constant": false,
															"id": 1603,
															"mutability": "mutable",
															"name": "tokenId",
															"nameLocation": "2180:7:8",
															"nodeType": "VariableDeclaration",
															"scope": 1650,
															"src": "2172:15:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1602,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2172:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1605,
													"initialValue": {
														"id": 1604,
														"name": "startId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "2190:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2172:25:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2217:9:8",
														"subExpression": {
															"id": 1609,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "2219:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1611,
													"nodeType": "ExpressionStatement",
													"src": "2217:9:8"
												},
												"nodeType": "ForStatement",
												"src": "2167:423:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1654,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "2635:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2635:7:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1652,
																		"name": "_BTOFACurrency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "2610:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2625:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "2610:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2610:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1657,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2647:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2610:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42544f433a20496e73756666696369656e7420616d6f756e74206f6620746f6b656e732e",
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2654:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e",
																"typeString": "literal_string \"BTOC: Insufficient amount of tokens.\""
															},
															"value": "BTOC: Insufficient amount of tokens."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbf9f33e8eb91dba052e91464443a1b2c255f1f128c584aea6b5262b9628b00e",
																"typeString": "literal_string \"BTOC: Insufficient amount of tokens.\""
															}
														],
														"id": 1651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2602:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:91:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "2602:91:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1665,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "2737:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2737:7:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1669,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2754:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BankManager_$1740",
																					"typeString": "contract BankManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BankManager_$1740",
																					"typeString": "contract BankManager"
																				}
																			],
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2746:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1667,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2746:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2746:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1663,
																		"name": "_BTOFACurrency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "2712:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2727:9:8",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 167,
																	"src": "2712:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2712:48:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1672,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2764:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2712:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42544f433a20496e73756666696369656e7420616c6c6f77656420616d6f756e74206f6620746f6b656e7320746f207370656e642e",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2771:55:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be",
																"typeString": "literal_string \"BTOC: Insufficient allowed amount of tokens to spend.\""
															},
															"value": "BTOC: Insufficient allowed amount of tokens to spend."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_315a1c317e71c0f94d9f1057a603d056d1b49180be92a170e43328ded7abe1be",
																"typeString": "literal_string \"BTOC: Insufficient allowed amount of tokens to spend.\""
															}
														],
														"id": 1662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2704:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2704:123:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "2704:123:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1680,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2866:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2866:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1684,
																	"name": "startId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "2895:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1682,
																	"name": "_BTOFAToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "2875:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																		"typeString": "contract IBTOFAToken"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2887:7:8",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 239,
																"src": "2875:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view external returns (address)"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1686,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "2905:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1677,
															"name": "_BTOFACurrency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "2838:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2853:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "2838:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2838:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "2838:73:8"
											},
											{
												"body": {
													"id": 1717,
													"nodeType": "Block",
													"src": "2993:143:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1704,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1690,
																				"src": "3057:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1702,
																				"name": "_BTOFAToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1444,
																				"src": "3037:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																					"typeString": "contract IBTOFAToken"
																				}
																			},
																			"id": 1703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3049:7:8",
																			"memberName": "ownerOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 239,
																			"src": "3037:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view external returns (address)"
																			}
																		},
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3037:28:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1706,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "3067:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3067:7:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1708,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "3076:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1699,
																		"name": "_BTOFAToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "3008:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																			"typeString": "contract IBTOFAToken"
																		}
																	},
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3020:16:8",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 261,
																	"src": "3008:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3008:76:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1710,
															"nodeType": "ExpressionStatement",
															"src": "3008:76:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1714,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "3116:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1711,
																		"name": "_BTOFAToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "3099:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBTOFAToken_$1434",
																			"typeString": "contract IBTOFAToken"
																		}
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3111:4:8",
																	"memberName": "burn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1419,
																	"src": "3099:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3099:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1716,
															"nodeType": "ExpressionStatement",
															"src": "3099:25:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1693,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "2964:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1694,
														"name": "endId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2975:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2964:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1718,
												"initializationExpression": {
													"assignments": [
														1690
													],
													"declarations": [
														{
															"constant": false,
															"id": 1690,
															"mutability": "mutable",
															"name": "tokenId",
															"nameLocation": "2945:7:8",
															"nodeType": "VariableDeclaration",
															"scope": 1718,
															"src": "2937:15:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1689,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2937:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1692,
													"initialValue": {
														"id": 1691,
														"name": "startId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "2955:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2937:25:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2982:9:8",
														"subExpression": {
															"id": 1696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "2984:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1698,
													"nodeType": "ExpressionStatement",
													"src": "2982:9:8"
												},
												"nodeType": "ForStatement",
												"src": "2932:204:8"
											}
										]
									},
									"functionSelector": "722227f2",
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1589,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1588,
												"name": "onlyOwner",
												"nameLocations": [
													"2015:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2015:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2015:9:8"
										}
									],
									"name": "expireToken",
									"nameLocation": "1964:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "startId",
												"nameLocation": "1984:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1976:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "endId",
												"nameLocation": "2001:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1993:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:32:8"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2025:0:8"
									},
									"scope": 1740,
									"src": "1955:1188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										323
									],
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "3260:67:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1734,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "3278:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$324_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3294:16:8",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 323,
														"src": "3278:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3311:8:8",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "3278:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1733,
												"id": 1737,
												"nodeType": "Return",
												"src": "3271:48:8"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "3160:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3229:8:8"
									},
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "3177:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "3186:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3186:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "3195:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "3204:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3204:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:43:8"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "3252:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1731,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3252:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3251:8:8"
									},
									"scope": 1740,
									"src": "3151:176:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1741,
							"src": "658:2672:8",
							"usedErrors": []
						}
					],
					"src": "33:3299:8"
				},
				"id": 8
			}
		}
	}
}